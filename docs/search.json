[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Anticipatory Action - Nigeria Flooding",
    "section": "",
    "text": "Overview\nThis site documents the data processing, analysis, and monitoring for the 2025 OCHA Nigeria Flooding Anticipatory Action Framework.\nSee the framework document here.\nGet in touch with the OCHA Centre for Humanitarian Data (CHD) Data Science team at: data.science@humdata.org.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "exploration/2025/impact_comparison.html",
    "href": "exploration/2025/impact_comparison.html",
    "title": "1  Impact comparison",
    "section": "",
    "text": "1.1 Load data\nComparison of historical impact from various sources, each of which have their own notebook for basic processing:\nAlso includes Floodscan exposure.",
    "crumbs": [
      "Targeting",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Impact comparison</span>"
    ]
  },
  {
    "objectID": "exploration/2025/impact_comparison.html#load-data",
    "href": "exploration/2025/impact_comparison.html#load-data",
    "title": "1  Impact comparison",
    "section": "",
    "text": "1.1.1 CODAB\n\n\nCode\nadm1 = codab.load_codab_from_blob(admin_level=1, aoi_only=True)\n\n\n\n\nCode\nadm2 = codab.load_codab_from_blob(admin_level=2, aoi_only=True)\n\n\n\n\n1.1.2 NiHSA flood record\n\n\nCode\nimport src.constants\n\nblob_name = f\"{src.constants.PROJECT_PREFIX}/processed/nihsa/floodhistory_2013_2023.parquet\"\ndf_nihsa_record = blob.load_parquet_from_blob(blob_name)\n\n\n\n\nCode\ndf_nihsa_record_sum = (\n    df_nihsa_record.groupby(\"ADM2_PCODE\")[\"Flooded\"].sum().reset_index()\n)\n\n\n\n\nCode\nfig, ax = plt.subplots(dpi=200)\n\ncol = \"Flooded\"\n\ngdf_plot = adm2.merge(df_nihsa_record_sum)\ngdf_plot = gdf_plot[gdf_plot[col] &gt;= 1]\ngdf_plot[col] = (\n    gdf_plot[col]\n    .astype(\"category\")\n    .cat.add_categories([0])\n    .cat.reorder_categories(range(6))\n)\ngdf_plot.plot(\n    column=col,\n    legend=True,\n    ax=ax,\n    cmap=\"hot_r\",\n    alpha=0.7,\n    legend_kwds={\n        \"bbox_to_anchor\": (1, 1),\n        \"loc\": \"upper left\",\n        \"title\": \"# years\",\n    },\n)\n\nadm2.boundary.plot(ax=ax, linewidth=0.2, color=\"k\")\nadm1.boundary.plot(ax=ax, linewidth=1, color=\"k\")\n\nax.axis(\"off\")\nax.set_title(\"Count of years flooded (2013-2023) [NiHSA]\")\n\n\nText(0.5, 1.0, 'Count of years flooded (2013-2023) [NiHSA]')\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf_nihsa_record_sum.merge(\n    adm2[[\"ADM2_PCODE\", \"ADM2_EN\", \"ADM1_EN\"]]\n).sort_values([\"Flooded\", \"ADM1_EN\", \"ADM2_EN\"], ascending=False).iloc[\n    :20\n].drop(\n    columns=\"ADM2_PCODE\"\n).rename(\n    columns={\"ADM2_EN\": \"LGA\", \"ADM1_EN\": \"State\", \"Flooded\": \"# years\"}\n)[\n    [\"State\", \"LGA\", \"# years\"]\n]\n\n\n\n\n\n\n\n\n\nState\nLGA\n# years\n\n\n\n\n20\nAdamawa\nYola South\n5\n\n\n19\nAdamawa\nYola North\n5\n\n\n8\nAdamawa\nLamurde\n5\n\n\n48\nYobe\nBade\n4\n\n\n41\nBorno\nMaiduguri\n4\n\n\n15\nAdamawa\nNuman\n4\n\n\n0\nAdamawa\nDemsa\n4\n\n\n56\nYobe\nJakusko\n3\n\n\n50\nYobe\nDamaturu\n3\n\n\n44\nBorno\nMonguno\n3\n\n\n5\nAdamawa\nGuyuk\n3\n\n\n3\nAdamawa\nGombi\n3\n\n\n4\nAdamawa\nGirei\n3\n\n\n1\nAdamawa\nFufore\n3\n\n\n63\nYobe\nYunusari\n2\n\n\n55\nYobe\nGulani\n2\n\n\n49\nYobe\nBursari\n2\n\n\n47\nBorno\nShani\n2\n\n\n43\nBorno\nMobbar\n2\n\n\n38\nBorno\nKwaya Kusar\n2\n\n\n\n\n\n\n\n\n\n1.1.3 NEMA flood risk\n\n\nCode\nimport src.constants\n\nblob_name = f\"{src.constants.PROJECT_PREFIX}/raw/AA-nigeria_data/NEMA/Flood Risk Excel Data 2.xlsx\"\ndf_nema_risk = blob.load_excel_from_blob(blob_name)\n\n\n\n\nCode\ndf_nema_risk\n\n\n\n\n\n\n\n\n\nADM2_EN\nADM2_PCODE\nADM1_EN\nADM1_PCODE\nSTATE\nADM2_PCODE2\nRiverine Flood Risk\nFlash Flood Risk\nCoastal Flood Risk\nComments\nColumn3\n\n\n\n\n0\nAba North\nNG001001\nAbia\nNG001\nAbia\nNG001001\nNaN\nHigh\nNaN\n&lt;Null&gt;\nNaN\n\n\n1\nAba South\nNG001002\nAbia\nNG001\nAbia\nNG001002\nNaN\nHigh\nNaN\n&lt;Null&gt;\nNaN\n\n\n2\nAbadam\nNG008001\nBorno\nNG008\nBorno\nNG008001\nLow\nLow\nNaN\n&lt;Null&gt;\nNaN\n\n\n3\nAbaji\nNG015001\nFederal Capital Territory\nNG015\nFederal Capital Territory\nNG015001\nHigh\nNaN\nNaN\nNearness to River Niger\nNaN\n\n\n4\nAbak\nNG003001\nAkwa Ibom\nNG003\nAkwa Ibom\nNG003001\nNaN\nLow\nNaN\n&lt;Null&gt;\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n769\nZango-Kataf\nNG019022\nKaduna\nNG019\nKaduna\nNG019022\nNaN\nNaN\nNaN\n&lt;Null&gt;\nNaN\n\n\n770\nZaria\nNG019023\nKaduna\nNG019\nKaduna\nNG019023\nNaN\nMedium\nNaN\nMUGUME, GYALLESU, WUCHICHRI\nNaN\n\n\n771\nZing\nNG035016\nTaraba\nNG035\nTaraba\nNG035016\nLow\nNaN\nNaN\n&lt;Null&gt;\nNaN\n\n\n772\nZurmi\nNG037014\nZamfara\nNG037\nZamfara\nNG037014\nMedium\nNaN\nNaN\nDole Moriki, Kwangwami,\nNaN\n\n\n773\nZuru\nNG022021\nKebbi\nNG022\nKebbi\nNG022021\nLow\nLow\nNaN\nZuru town, Rafin Mosai, (Girmace), OverfLow of...\nNaN\n\n\n\n\n774 rows × 11 columns\n\n\n\n\n\nCode\ndf_nema_risk[\"riv_num\"] = df_nema_risk[\"Riverine Flood Risk\"].replace(\n    {\"Very High\": 4, \"High\": 3, \"Medium\": 2, \"Low\": 1}\n)\ndf_nema_risk[\"flash_num\"] = df_nema_risk[\"Flash Flood Risk\"].replace(\n    {\"Very High\": 4, \"High\": 3, \"Medium\": 2, \"Low\": 1}\n)\n\n\n/var/folders/66/764yc5p92nvdc_nm3xmy5rn40000gn/T/ipykernel_27535/1711243050.py:1: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df_nema_risk[\"riv_num\"] = df_nema_risk[\"Riverine Flood Risk\"].replace(\n/var/folders/66/764yc5p92nvdc_nm3xmy5rn40000gn/T/ipykernel_27535/1711243050.py:4: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df_nema_risk[\"flash_num\"] = df_nema_risk[\"Flash Flood Risk\"].replace(\n\n\n\n\nCode\nfig, ax = plt.subplots(dpi=200)\n\ncol = \"Riverine Flood Risk\"\n\ngdf_plot = adm2.merge(df_nema_risk)\ngdf_plot[col] = (\n    gdf_plot[col]\n    .astype(\"category\")\n    .cat.reorder_categories([\"High\", \"Medium\", \"Low\"])\n    .cat.add_categories([\"None\"])\n)\n\ngdf_plot.plot(\n    column=col,\n    legend=True,\n    ax=ax,\n    cmap=\"hot\",\n    alpha=0.5,\n    legend_kwds={\n        \"bbox_to_anchor\": (1, 1),\n        \"loc\": \"upper left\",\n        \"title\": \"Risk Level\",\n    },\n)\n\nadm2.boundary.plot(ax=ax, linewidth=0.2, color=\"k\")\nadm1.boundary.plot(ax=ax, linewidth=1, color=\"k\")\n\nax.axis(\"off\")\nax.set_title(f\"{col} [NEMA]\")\n\n\nText(0.5, 1.0, 'Riverine Flood Risk [NEMA]')\n\n\n\n\n\n\n\n\n\n\n\nCode\nfig, ax = plt.subplots(dpi=200)\n\ncol = \"Flash Flood Risk\"\n\ngdf_plot = adm2.merge(df_nema_risk)\ngdf_plot[col] = (\n    gdf_plot[col]\n    .astype(\"category\")\n    .cat.reorder_categories([\"High\", \"Medium\", \"Low\"])\n    .cat.add_categories([\"None\"])\n)\n\ngdf_plot.plot(\n    column=col,\n    legend=True,\n    ax=ax,\n    alpha=0.5,\n    cmap=\"hot\",\n    legend_kwds={\n        \"bbox_to_anchor\": (1, 1),\n        \"loc\": \"upper left\",\n        \"title\": \"Risk Level\",\n    },\n)\n\nadm2.boundary.plot(ax=ax, linewidth=0.2, color=\"k\")\nadm1.boundary.plot(ax=ax, linewidth=1, color=\"k\")\n\nax.axis(\"off\")\nax.set_title(f\"{col} [NEMA]\")\n\n\nText(0.5, 1.0, 'Flash Flood Risk [NEMA]')\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf_nema_risk[\"riv_num\"].unique()\n\n\narray([nan,  1.,  3.,  2.,  4.])\n\n\n\n\nCode\ndf_nema_risk[\"flash_num\"].unique()\n\n\narray([ 3.,  1., nan,  2.,  4.])\n\n\n\n\nCode\ndf_nema_risk[\n    (\n        df_nema_risk[\"riv_num\"].astype(float)\n        + df_nema_risk[\"flash_num\"].astype(float)\n        == 6\n    )\n    & (df_nema_risk[\"ADM1_PCODE\"].isin(AOI_ADM1_PCODES))\n][[\"STATE\", \"ADM2_EN\"]].sort_values([\"STATE\", \"ADM2_EN\"]).rename(\n    columns={\"ADM2_EN\": \"LGA\"}\n)\n\n\n\n\n\n\n\n\n\nSTATE\nLGA\n\n\n\n\n158\nAdamawa\nDemsa\n\n\n222\nAdamawa\nFufore\n\n\n243\nAdamawa\nGirei\n\n\n462\nAdamawa\nLamurde\n\n\n541\nAdamawa\nNuman\n\n\n686\nAdamawa\nSong\n\n\n762\nAdamawa\nYola North\n\n\n763\nAdamawa\nYola South\n\n\n139\nBorno\nChibok\n\n\n387\nBorno\nJere\n\n\n399\nBorno\nKaga\n\n\n405\nBorno\nKala/Balge\n\n\n478\nBorno\nMaiduguri\n\n\n506\nBorno\nMobbar\n\n\n524\nBorno\nNgala\n\n\n82\nYobe\nBade\n\n\n382\nYobe\nJakusko\n\n\n413\nYobe\nKarasuwa\n\n\n517\nYobe\nNangere\n\n\n\n\n\n\n\n\n\n1.1.4 Floodscan exposure\n\n\nCode\nfs = floodscan.load_adm2_flood_exposures()\nfs_mean = fs.groupby(\"ADM2_PCODE\")[\"total_exposed\"].mean().reset_index()\n\n\n\n\nCode\nfig, ax = plt.subplots(dpi=200)\n\nadm2.merge(fs_mean).plot(\n    column=\"total_exposed\", legend=True, ax=ax, alpha=0.7, cmap=\"hot_r\"\n)\ncbar = ax.get_figure().axes[-1]  # Get last axis (colorbar)\ncbar.yaxis.set_major_formatter(mticker.FuncFormatter(lambda x, _: f\"{x:,.0f}\"))\n\nadm2.boundary.plot(ax=ax, linewidth=0.2, color=\"k\")\nadm1.boundary.plot(ax=ax, linewidth=1, color=\"k\")\n\nax.axis(\"off\")\nax.set_title(\"Floodscan mean historical exposure (1998-2023)\")\n\n\nText(0.5, 1.0, 'Floodscan mean historical exposure (1998-2023)')\n\n\n\n\n\n\n\n\n\n\n\nCode\nfs_mean.merge(adm2[[\"ADM2_PCODE\", \"ADM2_EN\", \"ADM1_EN\"]]).rename(\n    columns={\n        \"ADM2_EN\": \"LGA\",\n        \"ADM1_EN\": \"State\",\n        \"total_exposed\": \"Total Exposed\",\n    }\n)[[\"State\", \"LGA\", \"Total Exposed\"]].sort_values(\n    \"Total Exposed\", ascending=False\n).astype(\n    int, errors=\"ignore\"\n).iloc[\n    :20\n].style.background_gradient(\n    subset=[\"Total Exposed\"], cmap=\"hot_r\", vmin=0\n).format(\n    {\"Total Exposed\": \"{:,}\"}\n)\n\n\n\n\n\n\n\n \nState\nLGA\nTotal Exposed\n\n\n\n\n45\nBorno\nNgala\n85,934\n\n\n33\nBorno\nJere\n57,577\n\n\n35\nBorno\nKala/Balge\n53,787\n\n\n20\nAdamawa\nYola South\n51,940\n\n\n37\nBorno\nKukawa\n48,488\n\n\n1\nAdamawa\nFufore\n40,547\n\n\n42\nBorno\nMarte\n40,393\n\n\n19\nAdamawa\nYola North\n38,587\n\n\n28\nBorno\nDikwa\n29,676\n\n\n56\nYobe\nJakusko\n27,343\n\n\n21\nBorno\nAbadam\n25,752\n\n\n41\nBorno\nMaiduguri\n24,525\n\n\n15\nAdamawa\nNuman\n23,965\n\n\n39\nBorno\nMafa\n23,219\n\n\n52\nYobe\nFune\n22,317\n\n\n48\nYobe\nBade\n22,126\n\n\n4\nAdamawa\nGirei\n21,222\n\n\n5\nAdamawa\nGuyuk\n20,071\n\n\n8\nAdamawa\nLamurde\n18,662\n\n\n55\nYobe\nGulani\n16,610\n\n\n\n\n\n\n\n1.1.5 NEMA UNICEF impact\n\n\nCode\nimport src.constants\n\nblob_name = f\"{src.constants.PROJECT_PREFIX}/processed/nema/NEMA Copy of FLOOD DISASTER _DATA processed.csv\"\ndf_unicef = blob.load_csv_from_blob(blob_name)\ndf_unicef = (\n    df_unicef.melt(id_vars=[x for x in df_unicef.columns if \"ADM\" in x])\n    .drop(columns=\"variable\")\n    .rename(columns={\"value\": \"year\"})\n)\ndf_unicef = df_unicef.dropna()\ndf_unicef[\"year\"] = df_unicef[\"year\"].astype(int)\n\n\n\n\nCode\ndf_unicef_count = (\n    df_unicef.groupby(\"ADM2_PCODE\")\n    .size()\n    .reset_index()\n    .rename(columns={0: \"count_floods\"})\n)\n\n\n\n\nCode\ndf_unicef_unique_count = (\n    df_unicef.groupby(\"ADM2_PCODE\")[\"year\"]\n    .nunique()\n    .reset_index()\n    .rename(columns={\"year\": \"count_years\"})\n)\n\n\n\n\nCode\ndf_unicef_count = df_unicef_count.merge(df_unicef_unique_count)\n\n\n\n\nCode\ndf_unicef_count\n\n\n\n\n\n\n\n\n\nADM2_PCODE\ncount_floods\ncount_years\n\n\n\n\n0\nNG002001\n4\n3\n\n\n1\nNG002002\n5\n3\n\n\n2\nNG002003\n2\n1\n\n\n3\nNG002004\n1\n1\n\n\n4\nNG002005\n3\n2\n\n\n5\nNG002006\n3\n2\n\n\n6\nNG002009\n1\n1\n\n\n7\nNG002010\n5\n4\n\n\n8\nNG002012\n2\n1\n\n\n9\nNG002016\n4\n3\n\n\n10\nNG002017\n4\n3\n\n\n11\nNG002018\n3\n3\n\n\n12\nNG002020\n5\n3\n\n\n13\nNG002021\n6\n4\n\n\n14\nNG008002\n1\n1\n\n\n15\nNG008011\n1\n1\n\n\n16\nNG008012\n1\n1\n\n\n17\nNG008023\n1\n1\n\n\n18\nNG036001\n1\n1\n\n\n19\nNG036003\n4\n1\n\n\n20\nNG036004\n1\n1\n\n\n21\nNG036005\n1\n1\n\n\n22\nNG036006\n3\n1\n\n\n23\nNG036007\n4\n1\n\n\n24\nNG036013\n3\n1\n\n\n25\nNG036014\n1\n1\n\n\n\n\n\n\n\n\n\nCode\nfig, ax = plt.subplots(dpi=200)\n\ncol = \"count_years\"\n\ngdf_plot = adm2.merge(df_unicef_count)\ngdf_plot[col] = (\n    gdf_plot[col]\n    .astype(\"category\")\n    .cat.add_categories([0])\n    .cat.reorder_categories(range(5))\n)\ngdf_plot.plot(\n    column=col,\n    legend=True,\n    ax=ax,\n    cmap=\"hot_r\",\n    alpha=0.7,\n    legend_kwds={\n        \"bbox_to_anchor\": (1, 1),\n        \"loc\": \"upper left\",\n        \"title\": \"# years\",\n    },\n)\n\nadm2.boundary.plot(ax=ax, linewidth=0.2, color=\"k\")\nadm1.boundary.plot(ax=ax, linewidth=1, color=\"k\")\n\nax.axis(\"off\")\nax.set_title(\"Count of years flooded (2013-2023) [UNICEF]\")\n\n\nText(0.5, 1.0, 'Count of years flooded (2013-2023) [UNICEF]')\n\n\n\n\n\n\n\n\n\n\n\nCode\nfig, ax = plt.subplots(dpi=200)\n\ncol = \"count_floods\"\n\ngdf_plot = adm2.merge(df_unicef_count)\ngdf_plot[col] = (\n    gdf_plot[col]\n    .astype(\"category\")\n    .cat.add_categories([0])\n    .cat.reorder_categories(range(7))\n)\ngdf_plot.plot(\n    column=col,\n    legend=True,\n    ax=ax,\n    cmap=\"hot_r\",\n    alpha=0.7,\n    legend_kwds={\n        \"bbox_to_anchor\": (1, 1),\n        \"loc\": \"upper left\",\n        \"title\": \"# floods\",\n    },\n)\n\nadm2.boundary.plot(ax=ax, linewidth=0.2, color=\"k\")\nadm1.boundary.plot(ax=ax, linewidth=1, color=\"k\")\n\nax.axis(\"off\")\nax.set_title(\"Count of flood reports (2013-2023) [UNICEF]\")\n\n\nText(0.5, 1.0, 'Count of flood reports (2013-2023) [UNICEF]')\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf_unicef_count[df_unicef_count[\"count_floods\"] &gt;= 4].merge(\n    adm2[[\"ADM2_PCODE\", \"ADM2_EN\", \"ADM1_EN\"]]\n).sort_values([\"ADM1_EN\", \"ADM2_EN\"]).sort_values(\n    \"count_floods\", ascending=False\n).rename(\n    columns={\"ADM2_EN\": \"LGA\", \"ADM1_EN\": \"State\"}\n)[\n    [\"State\", \"LGA\", \"count_floods\"]\n]\n\n\n\n\n\n\n\n\n\nState\nLGA\ncount_floods\n\n\n\n\n6\nAdamawa\nYola South\n6\n\n\n1\nAdamawa\nFufore\n5\n\n\n2\nAdamawa\nMadagali\n5\n\n\n5\nAdamawa\nYola North\n5\n\n\n0\nAdamawa\nDemsa\n4\n\n\n3\nAdamawa\nNuman\n4\n\n\n4\nAdamawa\nShelleng\n4\n\n\n7\nYobe\nDamaturu\n4\n\n\n8\nYobe\nGujba\n4\n\n\n\n\n\n\n\n\n\n1.1.6 IOM rain season impact\n\n\nCode\nimport src.constants\n\nblob_name = f\"{src.constants.PROJECT_PREFIX}/processed/iom/rainseason_2021_2024.parquet\"\ndf_iom = blob.load_parquet_from_blob(blob_name)\n\n\n\n\nCode\ndf_iom_sum = df_iom.groupby(\"ADM2_PCODE\")[\"#HH Affected\"].sum().reset_index()\n\n\n\n\nCode\nfig, ax = plt.subplots(dpi=200)\n\ncol = \"#HH Affected\"\n\ngdf_plot = adm2.merge(df_iom_sum)\n\ngdf_plot.plot(\n    column=col,\n    legend=True,\n    ax=ax,\n    alpha=0.7,\n    cmap=\"hot_r\",\n    legend_kwds={\"label\": \"Total Households Affected\"},\n)\ncbar = ax.get_figure().axes[-1]  # Get last axis (colorbar)\ncbar.yaxis.set_major_formatter(mticker.FuncFormatter(lambda x, _: f\"{x:,.0f}\"))\n\n\nadm2.boundary.plot(ax=ax, linewidth=0.2, color=\"k\")\nadm1.boundary.plot(ax=ax, linewidth=1, color=\"k\")\n\nax.axis(\"off\")\nax.set_title(\"Number of households affected (2021-2024) [IOM]\")\n\n\nText(0.5, 1.0, 'Number of households affected (2021-2024) [IOM]')\n\n\n\n\n\n\n\n\n\n\n\nCode\ngdf_plot.sort_values(col, ascending=False)[[\"ADM1_EN\", \"ADM2_EN\", col]]\n\n\n\n\n\n\n\n\n\nADM1_EN\nADM2_EN\n#HH Affected\n\n\n\n\n18\nBorno\nJere\n146400.0\n\n\n28\nBorno\nMaiduguri\n83229.0\n\n\n22\nBorno\nKonduga\n50224.0\n\n\n26\nBorno\nMafa\n17257.0\n\n\n30\nBorno\nMonguno\n16107.0\n\n\n6\nBorno\nDamboa\n7298.0\n\n\n1\nBorno\nBama\n5001.0\n\n\n19\nBorno\nKaga\n4299.0\n\n\n34\nYobe\nNguru\n2891.0\n\n\n3\nYobe\nBursari\n2865.0\n\n\n7\nBorno\nDikwa\n2764.0\n\n\n36\nYobe\nPotiskum\n2545.0\n\n\n32\nBorno\nNgala\n2431.0\n\n\n39\nYobe\nYunusari\n1973.0\n\n\n0\nYobe\nBade\n1720.0\n\n\n25\nAdamawa\nMadagali\n1711.0\n\n\n14\nYobe\nGujba\n1535.0\n\n\n17\nYobe\nJakusko\n1061.0\n\n\n31\nYobe\nNangere\n1055.0\n\n\n37\nYobe\nTarmua\n1048.0\n\n\n24\nYobe\nMachina\n1045.0\n\n\n21\nYobe\nKarasuwa\n1044.0\n\n\n20\nBorno\nKala/Balge\n974.0\n\n\n40\nYobe\nYusufari\n966.0\n\n\n8\nYobe\nFika\n925.0\n\n\n23\nAdamawa\nLamurde\n750.0\n\n\n16\nBorno\nGwoza\n663.0\n\n\n29\nBorno\nMobbar\n568.0\n\n\n15\nYobe\nGulani\n483.0\n\n\n13\nBorno\nGubio\n479.0\n\n\n5\nYobe\nDamaturu\n402.0\n\n\n33\nBorno\nNganzai\n380.0\n\n\n10\nYobe\nFune\n314.0\n\n\n35\nAdamawa\nNuman\n206.0\n\n\n27\nBorno\nMagumeri\n150.0\n\n\n12\nAdamawa\nGirei\n104.0\n\n\n11\nYobe\nGeidam\n90.0\n\n\n9\nAdamawa\nFufore\n75.0\n\n\n38\nAdamawa\nYola South\n29.0\n\n\n4\nBorno\nChibok\n0.0\n\n\n2\nBorno\nBiu\n0.0\n\n\n\n\n\n\n\n\n\nCode\ndf_iom_sum[\"#HH Affected\"].quantile(0.9)\n\n\n16107.0",
    "crumbs": [
      "Targeting",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Impact comparison</span>"
    ]
  },
  {
    "objectID": "exploration/2025/impact_comparison.html#comparison",
    "href": "exploration/2025/impact_comparison.html#comparison",
    "title": "1  Impact comparison",
    "section": "1.2 Comparison",
    "text": "1.2 Comparison\n\n\nCode\ndf_combined = (\n    adm2.merge(fs_mean, how=\"left\")\n    .merge(df_unicef_count, how=\"left\")\n    .merge(df_nema_risk, how=\"left\")\n    .merge(df_nihsa_record_sum, how=\"left\")\n    .merge(df_iom_sum, how=\"left\")\n)\ndf_combined\n\n\n\n\n\n\n\n\n\nADM2_EN\nADM2_PCODE\nADM1_EN\nADM1_PCODE\nADM0_EN\nADM0_PCODE\nDATE\nVALIDON\nVALIDTO\ngeometry\n...\nADM2_PCODE2\nRiverine Flood Risk\nFlash Flood Risk\nCoastal Flood Risk\nComments\nColumn3\nriv_num\nflash_num\nFlooded\n#HH Affected\n\n\n\n\n0\nAbadam\nNG008001\nBorno\nNG008\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((13.11029 13.10963, 13.10815 13.11404...\n...\nNG008001\nLow\nLow\nNaN\n&lt;Null&gt;\nNaN\n1.0\n1.0\n1\nNaN\n\n\n1\nAskira/Uba\nNG008002\nBorno\nNG008\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((13.09852 10.44508, 13.09352 10.44667...\n...\nNG008002\nMedium\nLow\nNaN\n&lt;Null&gt;\nNaN\n2.0\n1.0\n2\nNaN\n\n\n2\nBade\nNG036001\nYobe\nNG036\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nMULTIPOLYGON (((11.18769 12.50815, 11.1836 12....\n...\nNG036001\nHigh\nHigh\nNaN\nPREVALENCE OF RIVERINE FLOOD IS MORE\nNaN\n3.0\n3.0\n4\n1720.0\n\n\n3\nBama\nNG008003\nBorno\nNG008\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((13.99056 11.31251, 13.97581 11.30513...\n...\nNG008003\nMedium\nMedium\nNaN\n&lt;Null&gt;\nNaN\n2.0\n2.0\n1\n5001.0\n\n\n4\nBayo\nNG008004\nBorno\nNG008\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((11.65688 10.19681, 11.60128 10.20806...\n...\nNG008004\nNaN\nHigh\nNaN\n&lt;Null&gt;\nNaN\nNaN\n3.0\n0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n60\nToungo\nNG002019\nAdamawa\nNG002\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((12.21046 7.97042, 12.203 7.96432, 12...\n...\nNG002019\nNaN\nNaN\nNaN\n&lt;Null&gt;\nNaN\nNaN\nNaN\n0\nNaN\n\n\n61\nYola North\nNG002020\nAdamawa\nNG002\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((12.40447 9.25767, 12.40226 9.26307, ...\n...\nNG002020\nHigh\nHigh\nNaN\n&lt;Null&gt;\nNaN\n3.0\n3.0\n5\nNaN\n\n\n62\nYola South\nNG002021\nAdamawa\nNG002\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((12.43708 9.213, 12.43732 9.21285, 12...\n...\nNG002021\nHigh\nHigh\nNaN\n&lt;Null&gt;\nNaN\n3.0\n3.0\n5\n29.0\n\n\n63\nYunusari\nNG036016\nYobe\nNG036\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((12.13949 13.09935, 12.14254 13.09896...\n...\nNG036016\nNaN\nMedium\nNaN\n&lt;Null&gt;\nNaN\nNaN\n2.0\n2\n1973.0\n\n\n64\nYusufari\nNG036017\nYobe\nNG036\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((11.32417 13.15145, 11.32829 13.14117...\n...\nNG036017\nNaN\nLow\nNaN\n&lt;Null&gt;\nNaN\nNaN\n1.0\n0\n966.0\n\n\n\n\n65 rows × 24 columns\n\n\n\n\n\nCode\nbenue = hydrosheds.load_benue_aoi()\n\n\n\n\nCode\ngdf_plot = df_combined[\n    (df_combined[\"count_floods\"] &gt;= 3)\n    & ((df_combined[\"riv_num\"] &gt;= 2) | (df_combined[\"flash_num\"] &gt;= 2))\n    & (df_combined[\"Flooded\"] &gt;= 2)\n].copy()\n\nfig, ax = plt.subplots(dpi=200)\n\ncol = \"total_exposed\"\n\n\ngdf_plot.plot(column=col, legend=True, ax=ax, cmap=\"hot_r\", vmin=0, vmax=60000)\ncbar = ax.get_figure().axes[-1]  # Get last axis (colorbar)\ncbar.yaxis.set_major_formatter(mticker.FuncFormatter(lambda x, _: f\"{x:,.0f}\"))\n\n\nadm2.boundary.plot(ax=ax, linewidth=0.2, color=\"k\")\nadm1.boundary.plot(ax=ax, linewidth=1, color=\"k\")\nbenue.plot(ax=ax, color=\"dodgerblue\", linewidth=2)\n\nax.axis(\"off\")\nax.set_title(\n    \"Mean historical flood exposure in filtered areas\\n(riverine flood focus)\"\n)\n\n\nText(0.5, 1.0, 'Mean historical flood exposure in filtered areas\\n(riverine flood focus)')\n\n\n\n\n\n\n\n\n\n\n\nCode\ngdf_plot[\"Total Exposed\"] = gdf_plot[\"total_exposed\"].astype(int)\ngdf_plot.sort_values(\"Total Exposed\", ascending=False)[\n    [\"ADM1_EN\", \"ADM2_EN\", \"Total Exposed\"]\n].rename(\n    columns={\"ADM2_EN\": \"LGA\", \"ADM1_EN\": \"State\"}\n).style.background_gradient(\n    subset=[\"Total Exposed\"], cmap=\"hot_r\", vmin=0\n).format(\n    {\"Total Exposed\": \"{:,}\"}\n)\n\n\n\n\n\n\n\n \nState\nLGA\nTotal Exposed\n\n\n\n\n62\nAdamawa\nYola South\n51,940\n\n\n13\nAdamawa\nFufore\n40,547\n\n\n61\nAdamawa\nYola North\n38,587\n\n\n54\nAdamawa\nNuman\n23,965\n\n\n17\nAdamawa\nGirei\n21,222\n\n\n22\nAdamawa\nGuyuk\n20,071\n\n\n10\nAdamawa\nDemsa\n10,107\n\n\n58\nAdamawa\nSong\n7,535\n\n\n8\nYobe\nDamaturu\n5,683\n\n\n38\nAdamawa\nMadagali\n4,449\n\n\n\n\n\n\n\nCode\ndf_combined[\n    (df_combined[\"#HH Affected\"] &gt;= 5000)\n    & ((df_combined[\"riv_num\"] &gt;= 2) | (df_combined[\"flash_num\"] &gt;= 2))\n    # & (df_combined[\"Flooded\"] &gt;= 2)\n]\n\n\n\n\n\n\n\n\n\nADM2_EN\nADM2_PCODE\nADM1_EN\nADM1_PCODE\nADM0_EN\nADM0_PCODE\nDATE\nVALIDON\nVALIDTO\ngeometry\n...\nADM2_PCODE2\nRiverine Flood Risk\nFlash Flood Risk\nCoastal Flood Risk\nComments\nColumn3\nriv_num\nflash_num\nFlooded\n#HH Affected\n\n\n\n\n3\nBama\nNG008003\nBorno\nNG008\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((13.99056 11.31251, 13.97581 11.30513...\n...\nNG008003\nMedium\nMedium\nNaN\n&lt;Null&gt;\nNaN\n2.0\n2.0\n1\n5001.0\n\n\n9\nDamboa\nNG008007\nBorno\nNG008\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((12.90696 11.27313, 12.91443 11.27299...\n...\nNG008007\nNaN\nHigh\nNaN\n&lt;Null&gt;\nNaN\nNaN\n3.0\n2\n7298.0\n\n\n29\nJere\nNG008013\nBorno\nNG008\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((13.11072 11.76419, 13.11178 11.76555...\n...\nNG008013\nHigh\nHigh\nNaN\nregular realease of water from Labdo Dam in ca...\nNaN\n3.0\n3.0\n2\n146400.0\n\n\n33\nKonduga\nNG008016\nBorno\nNG008\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((12.7054 11.29421, 12.70365 11.29971,...\n...\nNG008016\nMedium\nMedium\nNaN\n&lt;Null&gt;\nNaN\n2.0\n2.0\n0\n50224.0\n\n\n39\nMafa\nNG008019\nBorno\nNG008\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((13.29473 11.76548, 13.29185 11.76604...\n...\nNG008019\nNaN\nHigh\nNaN\n&lt;Null&gt;\nNaN\nNaN\n3.0\n1\n17257.0\n\n\n41\nMaiduguri\nNG008021\nBorno\nNG008\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((13.06877 11.74765, 13.06564 11.75216...\n...\nNG008021\nHigh\nHigh\nNaN\nregular realease of water from Labdo Dam in ca...\nNaN\n3.0\n3.0\n4\n83229.0\n\n\n47\nMonguno\nNG008024\nBorno\nNG008\nNigeria\nNG\n2017-03-31\n2019-04-17\nNaT\nPOLYGON ((13.46501 12.2811, 13.46621 12.27732,...\n...\nNG008024\nNaN\nHigh\nNaN\n&lt;Null&gt;\nNaN\nNaN\n3.0\n3\n16107.0\n\n\n\n\n7 rows × 24 columns\n\n\n\n\n\nCode\ngdf_plot = df_combined[\n    (df_combined[\"#HH Affected\"] &gt;= df_combined[\"#HH Affected\"].quantile(0.8))\n    & ((df_combined[\"riv_num\"] &gt;= 2) | (df_combined[\"flash_num\"] &gt;= 2))\n    & (df_combined[\"Flooded\"] &gt;= 2)\n].copy()\n\nfig, ax = plt.subplots(dpi=200)\n\ncol = \"total_exposed\"\n\n\ngdf_plot.plot(column=col, legend=True, ax=ax, cmap=\"hot_r\", vmin=0, vmax=60000)\ncbar = ax.get_figure().axes[-1]  # Get last axis (colorbar)\ncbar.yaxis.set_major_formatter(mticker.FuncFormatter(lambda x, _: f\"{x:,.0f}\"))\n\n\nadm2.boundary.plot(ax=ax, linewidth=0.2, color=\"k\")\nadm1.boundary.plot(ax=ax, linewidth=1, color=\"k\")\n\nax.axis(\"off\")\nax.set_title(\n    \"Mean historical flood exposure in filtered areas\\n(flash flood focus)\"\n)\n\n\nText(0.5, 1.0, 'Mean historical flood exposure in filtered areas\\n(flash flood focus)')\n\n\n\n\n\n\n\n\n\n\n\nCode\ngdf_plot[\"Total Exposed\"] = gdf_plot[\"total_exposed\"].astype(int)\ngdf_plot.sort_values(\"Total Exposed\", ascending=False)[\n    [\"ADM1_EN\", \"ADM2_EN\", \"Total Exposed\"]\n].rename(\n    columns={\"ADM2_EN\": \"LGA\", \"ADM1_EN\": \"State\"}\n).style.background_gradient(\n    subset=[\"Total Exposed\"], cmap=\"hot_r\", vmin=0\n).format(\n    {\"Total Exposed\": \"{:,}\"}\n)\n\n\n\n\n\n\n\n \nState\nLGA\nTotal Exposed\n\n\n\n\n29\nBorno\nJere\n57,577\n\n\n41\nBorno\nMaiduguri\n24,525\n\n\n9\nBorno\nDamboa\n15,960\n\n\n47\nBorno\nMonguno\n13,565\n\n\n30\nBorno\nKaga\n5,875",
    "crumbs": [
      "Targeting",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Impact comparison</span>"
    ]
  },
  {
    "objectID": "exploration/2025/nhf_targeting.html",
    "href": "exploration/2025/nhf_targeting.html",
    "title": "2  Targerted LGAs",
    "section": "",
    "text": "Produce map to show targeted LGAs:\n\nBlue: riverine flooding (CERF and NHF)\nOrange: flash flooding (NHF only)\n\n\n\nCode\n%load_ext jupyter_black\n%load_ext autoreload\n%autoreload 2\n\n\n\n                \n                \n\n\n\n\nCode\nimport matplotlib.pyplot as plt\n\nfrom src.datasources import codab\nfrom src.constants import *\n\n\n\n\nCode\nadm1 = codab.load_codab_from_blob(admin_level=1, aoi_only=True)\nadm2 = codab.load_codab_from_blob(admin_level=2, aoi_only=True)\n\n\n\n\nCode\nfig, ax = plt.subplots(dpi=200)\n\nadm2[adm2[\"ADM2_PCODE\"].isin(NHF_FLASH_LGAS)].plot(ax=ax, color=\"darkorange\")\nadm2[adm2[\"ADM2_PCODE\"].isin(BENUE_ADM2_PCODES)].plot(ax=ax, color=\"royalblue\")\n\nadm2.boundary.plot(ax=ax, linewidth=0.2, color=\"k\")\nadm1.boundary.plot(ax=ax, linewidth=1, color=\"k\")\nax.axis(\"off\")",
    "crumbs": [
      "Targeting",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Targerted LGAs</span>"
    ]
  },
  {
    "objectID": "exploration/2025/adamawa_lgas.html",
    "href": "exploration/2025/adamawa_lgas.html",
    "title": "3  Adamawa LGAs",
    "section": "",
    "text": "3.1 Load data\nCompare HNRP targeting and flood exposure for LGAs along Benue in Adamawa.\nCode\nadm2 = codab.load_codab_from_blob(admin_level=2, aoi_only=True)\nadm2_benue = adm2[adm2[\"ADM2_PCODE\"].isin(BENUE_ADM2_PCODES)]\nCode\nbenue = hydrosheds.load_benue_aoi()\nCode\nfs = floodscan.load_adm2_flood_exposures()\nfs_mean = fs.groupby(\"ADM2_PCODE\")[\"total_exposed\"].mean().reset_index()",
    "crumbs": [
      "Targeting",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Adamawa LGAs</span>"
    ]
  },
  {
    "objectID": "exploration/2025/adamawa_lgas.html#plot",
    "href": "exploration/2025/adamawa_lgas.html#plot",
    "title": "3  Adamawa LGAs",
    "section": "3.2 Plot",
    "text": "3.2 Plot\n\n3.2.1 Basic plot with river\n\n\nCode\nfig, ax = plt.subplots()\nadm2_benue.boundary.plot(ax=ax, color=\"k\", linewidth=0.5)\nbenue.plot(ax=ax, color=\"dodgerblue\")\n\nfor name, row in adm2_benue.set_index(\"ADM2_EN\").iterrows():\n    y_shift = 0.05 if name == \"Yola South\" else 0\n    x_shift = 0.1 if name == \"Fufore\" else 0\n    ax.annotate(\n        \"\\n\".join(name.split(\" \")),\n        (\n            row[\"geometry\"].centroid.x + x_shift,\n            row[\"geometry\"].centroid.y + y_shift,\n        ),\n        fontsize=8,\n        ha=\"center\",\n        va=\"center\",\n    )\n\nax.axis(\"off\")",
    "crumbs": [
      "Targeting",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Adamawa LGAs</span>"
    ]
  },
  {
    "objectID": "exploration/2025/adamawa_lgas.html#load-hnrp-data",
    "href": "exploration/2025/adamawa_lgas.html#load-hnrp-data",
    "title": "3  Adamawa LGAs",
    "section": "3.3 Load HNRP data",
    "text": "3.3 Load HNRP data\nCSV from HDX\n\n\nCode\nimport src.constants\n\nblob_name = f\"{src.constants.PROJECT_PREFIX}/raw/hnrp/hdx_hapi_humanitarian_needs_global_2025_adamawa_intersectoral_total.csv\"\n\n\n\n\nCode\ndf_hnrp = stratus.load_csv_from_blob(blob_name)\n\n\n\n\nCode\npop_status = \"TGT\"\n\n\n\n\nCode\ngdf_compare = adm2_benue.merge(\n    df_hnrp[df_hnrp[\"population_status\"] == pop_status].rename(\n        columns={\"admin2_code\": \"ADM2_PCODE\"}\n    ),\n    how=\"left\",\n).merge(fs_mean)",
    "crumbs": [
      "Targeting",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Adamawa LGAs</span>"
    ]
  },
  {
    "objectID": "exploration/2025/adamawa_lgas.html#more-plots",
    "href": "exploration/2025/adamawa_lgas.html#more-plots",
    "title": "3  Adamawa LGAs",
    "section": "3.4 More plots",
    "text": "3.4 More plots\n\n3.4.1 Population targeted\n\n\nCode\nfig, ax = plt.subplots(dpi=200)\ngdf_compare.plot(\n    column=\"population\",\n    ax=ax,\n    vmin=0,\n    cmap=\"hot_r\",\n    legend=True,\n    legend_kwds={\"label\": \"Total Population Targeted\", \"shrink\": 0.5},\n)\ngdf_compare.boundary.plot(ax=ax, color=\"k\", linewidth=0.5)\nbenue.plot(ax=ax, color=\"dodgerblue\")\n\nfor name, row in gdf_compare.set_index(\"ADM2_EN\").iterrows():\n    y_shift = 0.05 if name == \"Yola South\" else 0\n    x_shift = 0.1 if name == \"Fufore\" else 0\n    x_shift = -0.05 if name == \"Yola South\" else x_shift\n    name = \"Y.N.\" if name == \"Yola North\" else name\n    ax.annotate(\n        \"\\n\".join(name.split(\" \")),\n        (\n            row[\"geometry\"].centroid.x + x_shift,\n            row[\"geometry\"].centroid.y + y_shift,\n        ),\n        fontsize=6 if name == \"Y.N.\" else 8,\n        color=\"w\" if row[\"population\"] &gt; 0 else \"k\",\n        ha=\"center\",\n        va=\"center\",\n    )\n\ncbar = ax.get_figure().axes[-1]  # Get last axis (colorbar)\ncbar.yaxis.set_major_formatter(mticker.FuncFormatter(lambda x, _: f\"{x:,.0f}\"))\n\nax.set_title(\"Population Targeted in 2025 HNRP\")\n\nax.axis(\"off\")\n\n\n\n\n\n\n\n\n\n\n\n3.4.2 Population exposed\n\n\nCode\nfig, ax = plt.subplots(dpi=200)\ngdf_compare.plot(\n    column=\"total_exposed\",\n    ax=ax,\n    vmin=0,\n    cmap=\"hot_r\",\n    legend=True,\n    legend_kwds={\"label\": \"Average Total Population Exposed\", \"shrink\": 0.5},\n)\ngdf_compare.boundary.plot(ax=ax, color=\"k\", linewidth=0.5)\nbenue.plot(ax=ax, color=\"dodgerblue\")\n\nfor name, row in gdf_compare.set_index(\"ADM2_EN\").iterrows():\n    y_shift = 0.05 if name == \"Yola South\" else 0\n    x_shift = 0.1 if name == \"Fufore\" else 0\n    x_shift = -0.05 if name == \"Yola South\" else x_shift\n    name = \"Y.N.\" if name == \"Yola North\" else name\n    ax.annotate(\n        \"\\n\".join(name.split(\" \")),\n        (\n            row[\"geometry\"].centroid.x + x_shift,\n            row[\"geometry\"].centroid.y + y_shift,\n        ),\n        fontsize=6 if name == \"Y.N.\" else 8,\n        color=\"w\" if row[\"total_exposed\"] &gt; 20000 else \"k\",\n        ha=\"center\",\n        va=\"center\",\n    )\n\ncbar = ax.get_figure().axes[-1]  # Get last axis (colorbar)\ncbar.yaxis.set_major_formatter(mticker.FuncFormatter(lambda x, _: f\"{x:,.0f}\"))\n\nax.set_title(\"Average population exposed to flooding (Floodscan)\")\n\nax.axis(\"off\")\n\n\n\n\n\n\n\n\n\n\n\n3.4.3 Scatter plot comparison\n\n\nCode\nfig, ax = plt.subplots(dpi=200, figsize=(7, 7))\ngdf_compare.drop(columns=\"geometry\").plot(\n    x=\"population\", y=\"total_exposed\", ax=ax, linewidth=0, legend=False\n)\n\nfor name, row in gdf_compare.set_index(\"ADM2_EN\").iterrows():\n    pop = row[\"population\"] if row[\"population\"] &gt; 0 else 0\n    ax.annotate(\n        name,\n        (pop, row[\"total_exposed\"]),\n        ha=\"center\",\n        va=\"center\",\n    )\n\nax.set_xlim(left=0)\nax.set_ylim(bottom=0)\n\nax.set_xlabel(\"Total Population Targeted\")\nax.set_ylabel(\"Average Total Population Exposed\")\nax.set_title(\"Flood exposure vs. HNRP targeting\")\n\nax.xaxis.set_major_formatter(mticker.FuncFormatter(lambda x, _: f\"{x:,.0f}\"))\nax.yaxis.set_major_formatter(mticker.FuncFormatter(lambda y, _: f\"{y:,.0f}\"))\n\nax.spines[\"top\"].set_visible(False)\nax.spines[\"right\"].set_visible(False)",
    "crumbs": [
      "Targeting",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Adamawa LGAs</span>"
    ]
  },
  {
    "objectID": "exploration/2025/benue_buffer_exposure.html",
    "href": "exploration/2025/benue_buffer_exposure.html",
    "title": "4  Benue buffer exposure",
    "section": "",
    "text": "Calculating population within buffers of Benue\n\n\nCode\n%load_ext jupyter_black\n%load_ext autoreload\n%autoreload 2\n\n\n\n                \n                \n\n\n\n\nCode\nimport ocha_stratus as stratus\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as mticker\nimport numpy as np\nimport xarray as xr\nimport pandas as pd\nimport geopandas as gpd\nfrom rioxarray.exceptions import NoDataInBounds\n\nfrom src.datasources import codab, hydrosheds, worldpop\nfrom src.utils.raster import compute_density_from_grid\nfrom src.constants import *\n\n\n\n\nCode\ngdf_benue = hydrosheds.load_benue_aoi()\n\n\n\n\nCode\nadm2 = codab.load_codab_from_blob(admin_level=2, aoi_only=True)\nadm2 = adm2[adm2[\"ADM1_PCODE\"] == ADAMAWA]\n\n\n\n\nCode\nda_wp = worldpop.load_raw_worldpop()\nda_wp.attrs[\"_FillValue\"] = np.nan\n\n\n\n\nCode\nda_wp_adm = da_wp.rio.clip(adm2.geometry)\n\n\n\n\nCode\ndicts = []\nfor buffer_km in [1, 5, 10, 20]:\n    gdf_benue_buffer = (\n        gdf_benue.to_crs(3857).buffer(buffer_km * 1000).to_crs(4326)\n    )\n    da_buffer = da_wp.rio.clip(gdf_benue_buffer.geometry)\n    for pcode, row in adm2.set_index(\"ADM2_PCODE\").iterrows():\n        try:\n            da_clip = da_buffer.rio.clip([row.geometry])\n        except NoDataInBounds:\n            continue\n        pop = int(da_clip.sum())\n        if pop &lt; 1:\n            continue\n        dicts.append(\n            {\n                \"ADM2_PCODE\": pcode,\n                \"ADM2_EN\": row[\"ADM2_EN\"],\n                \"buffer_km\": buffer_km,\n                \"pop\": pop,\n            }\n        )\n\ndf_exp = pd.DataFrame(dicts)\n\ndf_exp = df_exp.pivot(\n    index=[\"ADM2_PCODE\", \"ADM2_EN\"], columns=\"buffer_km\", values=\"pop\"\n)\n\ndf_exp.columns = [f\"pop_{int(x)}km_buffer\" for x in df_exp.columns]\n\ndf_exp = df_exp.reset_index()\ndf_exp = df_exp.fillna(0)\ndf_exp = df_exp.astype(int, errors=\"ignore\")\n\n\n\n\nCode\ndf_exp.sum(numeric_only=True)\n\n\npop_1km_buffer      113813\npop_5km_buffer      621174\npop_10km_buffer    1090737\npop_20km_buffer    1396505\ndtype: int64\n\n\n\n\nCode\ndf_exp\n\n\n\n\n\n\n\n\n\nADM2_PCODE\nADM2_EN\npop_1km_buffer\npop_5km_buffer\npop_10km_buffer\npop_20km_buffer\n\n\n\n\n0\nNG002001\nDemsa\n6369\n33914\n51665\n73447\n\n\n1\nNG002002\nFufore\n22343\n77203\n145192\n223624\n\n\n2\nNG002005\nGirei\n56479\n125612\n164914\n208615\n\n\n3\nNG002006\nGuyuk\n0\n0\n0\n8896\n\n\n4\nNG002009\nLamurde\n10324\n36409\n73197\n108555\n\n\n5\nNG002016\nNuman\n15766\n88531\n110746\n130581\n\n\n6\nNG002017\nShelleng\n0\n0\n0\n26733\n\n\n7\nNG002018\nSong\n0\n0\n91\n6027\n\n\n8\nNG002020\nYola North\n2195\n144863\n234307\n234307\n\n\n9\nNG002021\nYola South\n337\n114642\n310625\n375720\n\n\n\n\n\n\n\n\n\nCode\nblob_name = f\"{PROJECT_PREFIX}/processed/adamawa_benue_buffer_pop.csv\"\nstratus.upload_csv_to_blob(df_exp, blob_name)\n\n\n\n\nCode\nda_density = compute_density_from_grid(da_wp_adm, lat_name=\"y\", lon_name=\"x\")\n\n\n\n\nCode\nfig, ax = plt.subplots(dpi=200, figsize=(10, 3))\nmappable = da_density.plot(\n    cmap=\"hot_r\", ax=ax, add_colorbar=False, vmin=0, vmax=2000\n)\n\ncbar = fig.colorbar(mappable, ax=ax, fraction=0.02, pad=-0.1, extend=\"max\")\ncbar.ax.yaxis.set_major_formatter(\n    mticker.FuncFormatter(lambda x, _: f\"{int(x):,}\")\n)\ncbar.set_label(\"Population density (people / km$^2$)\")\nadm2.boundary.plot(linewidth=0.2, color=\"k\", ax=ax)\ngdf_benue.plot(linewidth=1, color=\"dodgerblue\", ax=ax)\nadm2_union = adm2.union_all()\nbuffer_kms = [1, 5, 10, 20]\nfor buffer_km in buffer_kms:\n    # Create merged buffer around Benue\n    buffer_geom = gdf_benue.to_crs(3857).buffer(buffer_km * 1000).union_all()\n    buffer_geom = (\n        gpd.GeoSeries([buffer_geom], crs=3857).to_crs(4326).union_all()\n    )\n\n    # Get the boundary line\n    buffer_boundary = buffer_geom.boundary\n\n    # Clip the boundary to only the part that intersects ADM2\n    clipped_boundary = buffer_boundary.intersection(adm2_union)\n\n    # Plot (only if not empty)\n    if not clipped_boundary.is_empty:\n        gpd.GeoSeries([clipped_boundary], crs=4326).plot(\n            ax=ax, linewidth=0.5, linestyle=\"--\", alpha=0.5\n        )\n\nax.axis(\"off\")\nax.set_ylim(top=9.8, bottom=9)\nax.set_title(\n    \"Adamawa population distribution\\n\"\n    \"with Benue river buffers at \"\n    f\"{', '.join([str(x) for x in buffer_kms])} km\"\n)\n\n\nText(0.5, 1.0, 'Adamawa population distribution\\nwith Benue river buffers at 1, 5, 10, 20 km')\n\n\n\n\n\n\n\n\n\n\n\nCode\nfloat(da_density.mean()) * 37000\n\n\n4607817.149539094\n\n\n\n\nCode\nfloat(da_wp_adm.sum())\n\n\n4704834.0",
    "crumbs": [
      "Targeting",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Benue buffer exposure</span>"
    ]
  },
  {
    "objectID": "exploration/2025/flood_risk_exposure.html",
    "href": "exploration/2025/flood_risk_exposure.html",
    "title": "5  Flood risk exposure",
    "section": "",
    "text": "5.1 Load and process data\nCalculating population in flood risk zones (from JRC)\nCode\ngdf_benue = hydrosheds.load_benue_aoi()\nCode\nadm2 = codab.load_codab_from_blob(admin_level=2, aoi_only=True)\nadm2 = adm2[adm2[\"ADM1_PCODE\"] == ADAMAWA]\nadm2_aoi = adm2[adm2[\"ADM2_PCODE\"].isin(BENUE_ADM2_PCODES)]\nCode\nda_wp = worldpop.load_raw_worldpop()\nda_wp.attrs[\"_FillValue\"] = np.nan\nCode\nda_wp_adm = da_wp.rio.clip(adm2.geometry)\nCode\nblob_name = f\"{PROJECT_PREFIX}/processed/jrc-floodhazard/ID125_N10_E10_RP10_depth_reclass.tif\"\nda_reclass = stratus.open_blob_cog(blob_name)\nCode\nblob_name = (\n    f\"{PROJECT_PREFIX}/processed/jrc-floodhazard/ID125_N10_E10_RP10_depth.tif\"\n)\nda_depth = stratus.open_blob_cog(blob_name)\nCode\nda_depth_aoi = da_depth.rio.clip(adm2_aoi.geometry)\nCode\nda_reclass_aoi = da_reclass.rio.clip(adm2_aoi.geometry)\nCode\nwith ProgressBar():\n    da_reclass_aoi_computed = da_reclass_aoi.compute()\n\n\n[########################################] | 100% Completed | 1.26 sms\nCode\nwith ProgressBar():\n    da_depth_aoi_computed = da_depth_aoi.compute()\n\n\n[########################################] | 100% Completed | 1.05 sms",
    "crumbs": [
      "Targeting",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Flood risk exposure</span>"
    ]
  },
  {
    "objectID": "exploration/2025/flood_risk_exposure.html#test-plotting",
    "href": "exploration/2025/flood_risk_exposure.html#test-plotting",
    "title": "5  Flood risk exposure",
    "section": "5.2 Test plotting",
    "text": "5.2 Test plotting\n\n\nCode\nfig, ax = plt.subplots(dpi=200)\nda_reclass_aoi_computed.where(da_reclass_aoi_computed &gt; 0).plot(ax=ax)\nadm2_aoi.boundary.plot(ax=ax)\nadm2_union = adm2_aoi.union_all()\nfor buffer_km in [1, 5, 10, 20]:\n    buffer_geom = gdf_benue.to_crs(3857).buffer(buffer_km * 1000).union_all()\n    buffer_geom = (\n        gpd.GeoSeries([buffer_geom], crs=3857).to_crs(4326).union_all()\n    )\n    buffer_boundary = buffer_geom.boundary\n    clipped_boundary = buffer_boundary.intersection(adm2_union)\n    if not clipped_boundary.is_empty:\n        gpd.GeoSeries([clipped_boundary], crs=4326).plot(\n            ax=ax, linewidth=0.5, linestyle=\"--\", alpha=0.5\n        )\n\n\n\n\n\n\n\n\n\n\n\nCode\nfig, ax = plt.subplots(dpi=200)\nda_depth_aoi_computed.where(da_depth_aoi_computed &gt; 0).plot(ax=ax, vmax=4)\nadm2_aoi.boundary.plot(ax=ax)\nadm2_union = adm2_aoi.union_all()\nfor buffer_km in [1, 5, 10, 20]:\n    buffer_geom = gdf_benue.to_crs(3857).buffer(buffer_km * 1000).union_all()\n    buffer_geom = (\n        gpd.GeoSeries([buffer_geom], crs=3857).to_crs(4326).union_all()\n    )\n    buffer_boundary = buffer_geom.boundary\n    clipped_boundary = buffer_boundary.intersection(adm2_union)\n    if not clipped_boundary.is_empty:\n        gpd.GeoSeries([clipped_boundary], crs=4326).plot(\n            ax=ax, linewidth=0.5, linestyle=\"--\", alpha=0.5\n        )\n\n\n\n\n\n\n\n\n\n\n\nCode\nda_density = compute_density_from_grid(da_wp_adm, lat_name=\"y\", lon_name=\"x\")\n\n\n\n\nCode\nda_density_interp = da_density.interp_like(da_reclass_aoi_computed)\n\n\n/Users/tdowning/.pyenv/versions/ds-aa-nga-flooding/lib/python3.11/site-packages/scipy/interpolate/_interpolate.py:710: RuntimeWarning: invalid value encountered in divide\n  slope = (y_hi - y_lo) / (x_hi - x_lo)[:, None]\n\n\n\n\nCode\nda_density.plot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nda_density_interp = da_density.rio.reproject_match(da_reclass_aoi_computed)\n\n\n\n\nCode\nda_density_interp.plot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nda_pop_interp = compute_pop_from_density(\n    da_density_interp, lat_name=\"y\", lon_name=\"x\"\n)\n\n\n\n\nCode\nda_pop_interp.plot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nda_pop_interp.sum()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'population_per_pixel' ()&gt; Size: 8B\narray(1967037.96018411)\nCoordinates:\n    spatial_ref  int64 8B 0xarray.DataArray'population_per_pixel'1.967e+06array(1967037.96018411)Coordinates: (1)spatial_ref()int640crs_wkt :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984grid_mapping_name :latitude_longitudespatial_ref :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]GeoTransform :11.42958463172674 0.0008333333356347339 0.0 9.729566666666912 0.0 -0.0008333333333325754array(0)Indexes: (0)Attributes: (0)\n\n\n\n\nCode\nda_wp_test = da_wp_adm.sel(\n    x=slice(da_pop_interp[\"x\"].min(), da_pop_interp[\"x\"].max()),\n    y=slice(da_pop_interp[\"y\"].max(), da_pop_interp[\"y\"].min()),\n)\n\n\n\n\nCode\nda_wp_test.plot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nda_wp_test.sum()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray ()&gt; Size: 4B\narray(1966877.8, dtype=float32)\nCoordinates:\n    spatial_ref  int64 8B 0xarray.DataArray1.967e+06array(1966877.8, dtype=float32)Coordinates: (1)spatial_ref()int640crs_wkt :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984grid_mapping_name :latitude_longitudespatial_ref :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]GeoTransform :11.340416621597212 0.008333333300000004 0.0 10.949583493055377 0.0 -0.0083333333array(0)Indexes: (0)Attributes: (0)\n\n\n\n\nCode\nda_exp_reclass = da_pop_interp.where(da_reclass_aoi_computed &gt; 0)\n\n\n\n\nCode\nda_exp_reclass.plot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nda_exp_reclass_buffer = da_exp_reclass.rio.clip(\n    gdf_benue.to_crs(3857).buffer(10 * 1000).to_crs(4326)\n)\n\n\n\n\nCode\nda_exp_reclass_buffer.plot()\n\n\n\n\n\n\n\n\n\n\n\nCode\ndicts = []\nfor pcode, row in adm2.set_index(\"ADM2_PCODE\").iterrows():\n    try:\n        da_clip = da_exp_reclass_buffer.rio.clip([row.geometry])\n    except NoDataInBounds:\n        continue\n    pop = int(da_clip.sum())\n    if pop &lt; 1:\n        continue\n    dicts.append(\n        {\n            \"ADM2_PCODE\": pcode,\n            \"ADM2_EN\": row[\"ADM2_EN\"],\n            \"pop\": pop,\n        }\n    )\n\n\n\n\nCode\ndf_exp = pd.DataFrame(dicts)\n\n\n\n\nCode\ndf_exp\n\n\n\n\n\n\n\n\n\nADM2_PCODE\nADM2_EN\npop\n\n\n\n\n0\nNG002001\nDemsa\n15994\n\n\n1\nNG002002\nFufore\n41333\n\n\n2\nNG002005\nGirei\n60133\n\n\n3\nNG002009\nLamurde\n32790\n\n\n4\nNG002016\nNuman\n35714\n\n\n5\nNG002020\nYola North\n15715\n\n\n6\nNG002021\nYola South\n30472\n\n\n\n\n\n\n\n\n\nCode\ndf_exp.sum(numeric_only=True)\n\n\npop    232151\ndtype: int64\n\n\n\n\nCode\nblob_name = f\"{PROJECT_PREFIX}/processed/adamawa_risk_10yr_rp_pop.csv\"\nstratus.upload_csv_to_blob(df_exp, blob_name)\n\n\n\n\nCode\nblob_name = f\"{PROJECT_PREFIX}/processed/adamawa_benue_buffer_pop.csv\"\ndf_exp_adm = stratus.load_csv_from_blob(blob_name)\n\n\n\n\nCode\ndf_compare = df_exp.merge(df_exp_adm)\n\n\n\n\nCode\ndf_compare\n\n\n\n\n\n\n\n\n\nADM2_PCODE\nADM2_EN\npop\npop_1km_buffer\npop_5km_buffer\npop_10km_buffer\npop_20km_buffer\n\n\n\n\n0\nNG002001\nDemsa\n15994\n6369\n33914\n51665\n73447\n\n\n1\nNG002002\nFufore\n41333\n22343\n77203\n145192\n223624\n\n\n2\nNG002005\nGirei\n60133\n56479\n125612\n164914\n208615\n\n\n3\nNG002009\nLamurde\n32790\n10324\n36409\n73197\n108555\n\n\n4\nNG002016\nNuman\n35714\n15766\n88531\n110746\n130581\n\n\n5\nNG002020\nYola North\n15715\n2195\n144863\n234307\n234307\n\n\n6\nNG002021\nYola South\n30472\n337\n114642\n310625\n375720",
    "crumbs": [
      "Targeting",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Flood risk exposure</span>"
    ]
  },
  {
    "objectID": "exploration/2025/flood_risk_exposure.html#plots",
    "href": "exploration/2025/flood_risk_exposure.html#plots",
    "title": "5  Flood risk exposure",
    "section": "5.3 Plots",
    "text": "5.3 Plots\n\n\nCode\ndf_plot = df_compare.copy()\n\n\n\n\nCode\nfig, ax = plt.subplots(figsize=(10, 6), dpi=200)\n\n# Define population columns and x locations\npop_columns = [\"pop\", \"pop_1km_buffer\", \"pop_5km_buffer\", \"pop_10km_buffer\"]\nx = np.arange(len(df_plot))\nbar_width = 0.15\n\n# Plot each population category\nfor i, col in enumerate(pop_columns):\n    ax.bar(\n        x + i * bar_width,\n        df_plot[col],\n        width=bar_width,\n        label=col.replace(\"pop\", \"\").strip(\"_\") or \"10-yr RP\",\n    )\n\n# Set labels and ticks\nax.set_xticks(x + bar_width * (len(pop_columns) - 1) / 2)\nax.set_xticklabels(df_plot[\"ADM2_EN\"], rotation=45, ha=\"right\")\nax.set_ylabel(\"Population exposed\")\nax.set_title(\"Population exposed by LGA and flood extent zone\")\nax.legend(title=\"Flood extent\")\n\nax.yaxis.set_major_formatter(mticker.StrMethodFormatter(\"{x:,.0f}\"))\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\nCode\nfig, ax = plt.subplots(dpi=200, figsize=(10, 3))\nmappable = da_density_interp.where(da_exp_reclass_buffer &gt;= 0).plot(\n    ax=ax, add_colorbar=False\n)\n\ncbar = fig.colorbar(mappable, ax=ax, fraction=0.02)\ncbar.ax.yaxis.set_major_formatter(\n    mticker.FuncFormatter(lambda x, _: f\"{int(x):,}\")\n)\ncbar.set_label(\"Population density (people / km$^2$)\")\nadm2.boundary.plot(linewidth=0.2, color=\"k\", ax=ax)\ngdf_benue.plot(linewidth=1, color=\"dodgerblue\", ax=ax)\nadm2_union = adm2.union_all()\nbuffer_kms = [10]\nfor buffer_km in buffer_kms:\n    # Create merged buffer around Benue\n    buffer_geom = gdf_benue.to_crs(3857).buffer(buffer_km * 1000).union_all()\n    buffer_geom = (\n        gpd.GeoSeries([buffer_geom], crs=3857).to_crs(4326).union_all()\n    )\n\n    # Get the boundary line\n    buffer_boundary = buffer_geom.boundary\n\n    # Clip the boundary to only the part that intersects ADM2\n    clipped_boundary = buffer_boundary.intersection(adm2_union)\n\n    # Plot (only if not empty)\n    if not clipped_boundary.is_empty:\n        gpd.GeoSeries([clipped_boundary], crs=4326).plot(\n            ax=ax, linewidth=0.5, linestyle=\"--\", alpha=0.5\n        )\n\nax.axis(\"off\")\nax.set_ylim(top=9.8, bottom=9)\nax.set_title(\n    \"Adamawa population distribution\\n\"\n    \"in 10-yr RP flood zone\\n\"\n    \"with Benue river buffer at \"\n    f\"{', '.join([str(x) for x in buffer_kms])} km\"\n)\n\n\nText(0.5, 1.0, 'Adamawa population distribution\\nin 10-yr RP flood zone\\nwith Benue river buffer at 10 km')",
    "crumbs": [
      "Targeting",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Flood risk exposure</span>"
    ]
  },
  {
    "objectID": "exploration/2025/glofas_new_reanalysis.html",
    "href": "exploration/2025/glofas_new_reanalysis.html",
    "title": "6  GloFAS new reanalysis",
    "section": "",
    "text": "6.1 Download, process, load\nLoading and processing GloFAS reanalysis\nCode\nstation_name = \"wuroboki\"\nCode\nglofas.download_glofas_reanalysis_to_blob(station_name=station_name)\n\n\n\n\n\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1979.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1980.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1981.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1982.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1983.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1984.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1985.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1986.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1987.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1988.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1989.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1990.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1991.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1992.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1993.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1994.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1995.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1996.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1997.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1998.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_1999.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2000.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2001.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2002.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2003.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2004.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2005.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2006.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2007.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2008.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2009.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2010.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2011.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2012.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2013.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2014.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2015.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2016.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2017.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2018.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2019.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2020.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2021.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2022.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2023.grib already exists in blob storage\nds-aa-nga-flooding/raw/glofas/reanalysis/glofas_raw_reanalysis_wuroboki_2024.grib already exists in blob storage\nCode\nglofas.process_glofas_reanalysis(station_name=station_name)\nCode\ndf_ra = glofas.load_glofas_reanalysis(station_name=station_name)\nCode\ndf_ra\n\n\n\n\n\n\n\n\n\ntime\ndis24\n\n\n\n\n0\n1979-01-01\n79.656250\n\n\n1\n1979-01-02\n77.609375\n\n\n2\n1979-01-03\n76.515625\n\n\n3\n1979-01-04\n75.671875\n\n\n4\n1979-01-05\n74.843750\n\n\n...\n...\n...\n\n\n16736\n2024-10-27\n1411.625000\n\n\n16737\n2024-10-28\n1280.859375\n\n\n16738\n2024-10-29\n1156.441406\n\n\n16739\n2024-10-30\n1043.812500\n\n\n16740\n2024-10-31\n943.191406\n\n\n\n\n16741 rows × 2 columns\nCode\ndf_nh = nihsa.load_wuroboki()\nCode\ndf_nh\n\n\n\n\n\n\n\n\n\ntime\nlevel\n\n\n\n\n2\n1954-05-25\n398.0\n\n\n3\n1954-05-26\n383.0\n\n\n4\n1954-05-27\n389.0\n\n\n5\n1954-05-28\n408.0\n\n\n6\n1954-05-29\n404.0\n\n\n...\n...\n...\n\n\n27234\n2024-12-27\n458.0\n\n\n27235\n2024-12-28\n455.0\n\n\n27236\n2024-12-29\n451.0\n\n\n27237\n2024-12-30\n457.0\n\n\n27238\n2024-12-31\n457.0\n\n\n\n\n26646 rows × 2 columns\nCode\ndf_compare = df_ra.merge(df_nh, how=\"left\")\nCode\ndf_compare\n\n\n\n\n\n\n\n\n\ntime\ndis24\nlevel\n\n\n\n\n0\n1979-01-01\n79.656250\n149.0\n\n\n1\n1979-01-02\n77.609375\n147.0\n\n\n2\n1979-01-03\n76.515625\n146.0\n\n\n3\n1979-01-04\n75.671875\n145.0\n\n\n4\n1979-01-05\n74.843750\n144.0\n\n\n...\n...\n...\n...\n\n\n31277\n2024-10-27\n1411.625000\n595.0\n\n\n31278\n2024-10-28\n1280.859375\n585.0\n\n\n31279\n2024-10-29\n1156.441406\n583.0\n\n\n31280\n2024-10-30\n1043.812500\n568.0\n\n\n31281\n2024-10-31\n943.191406\n543.0\n\n\n\n\n31282 rows × 3 columns",
    "crumbs": [
      "GloFAS processing",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>GloFAS new reanalysis</span>"
    ]
  },
  {
    "objectID": "exploration/2025/glofas_new_reanalysis.html#plot-comparison",
    "href": "exploration/2025/glofas_new_reanalysis.html#plot-comparison",
    "title": "6  GloFAS new reanalysis",
    "section": "6.2 Plot comparison",
    "text": "6.2 Plot comparison\n\n\nCode\nmonths = range(7, 11)\ndf_plot = df_compare[\n    (df_compare[\"time\"].dt.month.isin(months))\n    # & (df_compare[\"time\"].dt.year.isin(nihsa.WUROBOKI_COMPLETE_YEARS))\n]\n\ndis_max = df_plot[\"dis24\"].max()\nlevel_max = df_plot[\"level\"].max()\n\nn_years = df_plot[\"time\"].dt.year.nunique()\n\nncols = 3\nnrows = round(n_years / ncols) + 1\n\nfig, axes = plt.subplots(\n    nrows=nrows, ncols=ncols, figsize=(ncols * 5, nrows * 3)\n)\naxes = axes.flatten()\n\nfor j, year in enumerate(df_plot[\"time\"].dt.year.unique()):\n    dff = df_plot[df_plot[\"time\"].dt.year == year]\n    ax = axes[j]\n    ax2 = ax.twinx()\n\n    ax.plot(\n        dff[\"time\"],\n        dff[\"level\"],\n        color=\"dodgerblue\",\n        label=\"NiHSA\\n(mm, left axis)\",\n    )\n    ax.set_ylim(bottom=0, top=level_max * 1.1)\n\n    ax2.plot(\n        dff[\"time\"],\n        dff[\"dis24\"],\n        color=\"darkorange\",\n        label=\"GloFAS\\n(m$^{3}$/s, right axis)\",\n    )\n    ax2.set_ylim(bottom=0, top=dis_max * 1.1)\n\n    ax.xaxis.set_major_locator(mdates.MonthLocator())\n    ax.xaxis.set_major_formatter(mdates.DateFormatter(\"%b\"))\n    ax.set_title(year)\n\n    if j == 0:\n        ax.legend(loc=\"upper left\")\n        ax2.legend(loc=\"upper right\")\n\n\nfig.suptitle(\n    f\"Comparison of NiHSA and GloFAS reanalysis for {station_name.capitalize()}\",\n    fontsize=16,\n    y=1,\n)\n\nplt.tight_layout()\n\nplt.savefig(\n    \"temp/wuroboki_nihsa_glofas_comparison.png\", dpi=200, bbox_inches=\"tight\"\n)",
    "crumbs": [
      "GloFAS processing",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>GloFAS new reanalysis</span>"
    ]
  },
  {
    "objectID": "exploration/2025/glofas_new_reanalysis.html#check-correlations-and-yearly-peaks",
    "href": "exploration/2025/glofas_new_reanalysis.html#check-correlations-and-yearly-peaks",
    "title": "6  GloFAS new reanalysis",
    "section": "6.3 Check correlations and yearly peaks",
    "text": "6.3 Check correlations and yearly peaks\n\n\nCode\ndf_compare.corr()\n\n\n\n\n\n\n\n\n\ntime\ndis24\nlevel\n\n\n\n\ntime\n1.000000\n-0.104751\n0.273537\n\n\ndis24\n-0.104751\n1.000000\n0.431741\n\n\nlevel\n0.273537\n0.431741\n1.000000\n\n\n\n\n\n\n\n\n\nCode\ndf_peaks = df_compare.groupby(df_compare[\"time\"].dt.year.rename(\"year\")).agg(\n    dis24_max=(\"dis24\", \"max\"),\n    dis24_max_date=(\"dis24\", lambda x: df_compare.loc[x.idxmax(), \"time\"]),\n    level_max=(\"level\", \"max\"),\n    level_max_date=(\n        \"level\",\n        lambda x: (\n            df_compare.loc[x.idxmax(), \"time\"] if x.notna().any() else pd.NaT\n        ),\n    ),\n)\n\n\nFor all years\n\n\nCode\ndf_peaks.corr()\n\n\n\n\n\n\n\n\n\ndis24_max\ndis24_max_date\nlevel_max\nlevel_max_date\n\n\n\n\ndis24_max\n1.000000\n-0.237596\n-0.110596\n-0.000819\n\n\ndis24_max_date\n-0.237596\n1.000000\n0.486702\n0.254707\n\n\nlevel_max\n-0.110596\n0.486702\n1.000000\n0.490125\n\n\nlevel_max_date\n-0.000819\n0.254707\n0.490125\n1.000000\n\n\n\n\n\n\n\nFor complete years\n\n\nCode\ndf_peaks.loc[nihsa.WUROBOKI_COMPLETE_YEARS].corr()\n\n\n\n\n\n\n\n\n\ndis24_max\ndis24_max_date\nlevel_max\nlevel_max_date\n\n\n\n\ndis24_max\n1.000000\n-0.130591\n-0.049523\n-0.130661\n\n\ndis24_max_date\n-0.130591\n1.000000\n0.755940\n0.999996\n\n\nlevel_max\n-0.049523\n0.755940\n1.000000\n0.755662\n\n\nlevel_max_date\n-0.130661\n0.999996\n0.755662\n1.000000\n\n\n\n\n\n\n\n\n\nCode\n# df_plot = df_peaks.loc[nihsa.WUROBOKI_COMPLETE_YEARS].copy()\ndf_plot = df_peaks.loc[2013:]\n# df_plot = df_peaks.copy()\n\nrp = 3\n\nfig, ax = plt.subplots(dpi=200, figsize=(7, 7))\n\ndis24_thresh = df_plot[\"dis24_max\"].quantile(1 - 1 / rp)\nlevel_thresh = df_plot[\"level_max\"].quantile(1 - 1 / rp)\n\nfor year, row in df_plot.iterrows():\n    ax.annotate(\n        year,\n        (row[\"dis24_max\"], row[\"level_max\"]),\n        ha=\"center\",\n        va=\"center\",\n        fontsize=8,\n    )\n\nax.axvline(dis24_thresh)\nax.axhline(level_thresh)\n\nax.set_ylim(bottom=0, top=df_plot[\"level_max\"].max() * 1.1)\nax.set_xlim(left=0, right=df_plot[\"dis24_max\"].max() * 1.1)\n\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\nHard to say but doesn’t look great - NiHSA data is just too patchy",
    "crumbs": [
      "GloFAS processing",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>GloFAS new reanalysis</span>"
    ]
  },
  {
    "objectID": "exploration/2025/grrr_comparison.html",
    "href": "exploration/2025/grrr_comparison.html",
    "title": "7  GloFAS vs Google Reanalysis Comparison",
    "section": "",
    "text": "This notebook compares both Google and GloFAS reanalysis data against Floodscan, focusing particularly on how well they align in detecting 3-year exceedance events.\n\n\nCode\n%load_ext jupyter_black\n%load_ext autoreload\n%autoreload 2\n\n\n\n\nCode\nimport matplotlib.pyplot as plt\nfrom matplotlib.dates import DateFormatter\nimport pandas as pd\nimport ocha_stratus as stratus\nimport numpy as np\n\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\nfrom src.datasources import glofas, grrr\n\nSAPPHIRE = \"#007ce0\"\nTOMATO = \"#f2645a\"\nTOMATO_DARK = \"#c25048\"\nTOMATO_LIGHT = \"#f7a29c\"\nMINT = \"#1ebfb3\"\nGREY_DARK = \"#888888\"\nGREY_LIGHT = \"#cccccc\"\n\n\nGet the Google data\n\n\nCode\nds_ra = grrr.load_reanalysis()\ndf_ra_grrr = grrr.process_reanalysis(ds_ra)\n\nds_rf = grrr.load_reforecast()\ndf_rf_grrr = grrr.process_reforecast(ds_rf)\n\n\n/Users/hannahker/Desktop/ds-aa-nga-flooding/src/datasources/grrr.py:12: FutureWarning: In a future version of xarray decode_timedelta will default to False rather than None. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.\n  return xr.open_zarr(\n\n\nGet the GloFAS data\n\n\nCode\ndf_ra_glofas = glofas.load_reanalysis().rename(columns={\"time\": \"valid_time\"})\ndf_rf_glofas = glofas.load_reforecast()\n\n\nGet the Floodscan data\n\n\nCode\ndf_fs_raw = stratus.load_parquet_from_blob(\n    \"ds-aa-nga-flooding/processed/floodscan/fs_benue_pixels_1998_2024.parquet\"\n)\ndf_fs = df_fs_raw.groupby(\"date\")[\"SFED\"].mean().reset_index()\ndf_fs = df_fs.rename(columns={\"date\": \"valid_time\"})\n\n\nCompute return periods\n\n\nCode\ndf_ra_peaks_glofas = (\n    df_ra_glofas.groupby(df_ra_glofas[\"valid_time\"].dt.year.rename(\"year\"))\n    .agg(\n        dis24_max=(\"dis24\", \"max\"),\n        dis24_max_date=(\n            \"dis24\",\n            lambda x: df_ra_glofas.loc[x.idxmax(), \"valid_time\"],\n        ),\n    )\n    .reset_index()\n)\n\ndf_ra_peaks_grrr = (\n    df_ra_grrr.groupby(df_ra_grrr[\"valid_time\"].dt.year.rename(\"year\"))\n    .agg(\n        streamflow_max=(\"streamflow\", \"max\"),\n        streamflow_max_date=(\n            \"streamflow\",\n            lambda x: df_ra_grrr.loc[x.idxmax(), \"valid_time\"],\n        ),\n    )\n    .reset_index()\n)\n\ndf_peaks_fs = (\n    df_fs.groupby(df_fs[\"valid_time\"].dt.year.rename(\"year\"))\n    .agg(\n        sfed_max=(\"SFED\", \"max\"),\n        sfed_max_date=(\n            \"SFED\",\n            lambda x: df_fs.loc[x.idxmax(), \"valid_time\"],\n        ),\n    )\n    .reset_index()\n)\n\nrp = 3\nrp_glofas = df_ra_peaks_glofas[\"dis24_max\"].quantile(1 - 1 / rp)\nrp_grrr = df_ra_peaks_grrr[\"streamflow_max\"].quantile(1 - 1 / rp)\nrp_fs = df_peaks_fs[\"sfed_max\"].quantile(1 - 1 / rp)\n\n\nNow plot the yearly peaks\n\n\nCode\ndf_all_peaks = df_ra_peaks_glofas.merge(df_ra_peaks_grrr, how=\"inner\")\ndf_all_peaks_fs = df_all_peaks.merge(df_peaks_fs, how=\"inner\")\n\n\n\n\nCode\ndef determine_detection_type(row, rp_y, rp_yhat, y, yhat):\n    happened = row[y] &gt; rp_y\n    detected = row[yhat] &gt; rp_yhat\n\n    if happened and detected:\n        return \"TP\"  # True Positive\n    elif not happened and detected:\n        return \"FP\"  # False Positive\n    elif not happened and not detected:\n        return \"TN\"  # True Negative\n    else:\n        return \"FN\"  # False Negative\n\n\ndef get_more_stats(TP, FP, FN):\n    precision = TP / (TP + FP)\n    recall = TP / (TP + FN)\n    f1 = 2 / ((1 / recall) + (1 / precision))\n    return precision, recall, f1\n\n\ndef plot_yearly_peaks(\n    df_plot, x, y, x_lab, y_lab, rp_x, rp_y, title, output, offset\n):\n    fig, ax = plt.subplots()\n\n    ax.scatter(df_plot[x], df_plot[y], c=SAPPHIRE)\n\n    for idx, row in df_plot.iterrows():\n        ax.annotate(\n            row[\"year\"],\n            (row[x] + offset, row[y]),\n            ha=\"center\",\n            va=\"center\",\n            fontsize=8,\n            c=SAPPHIRE,\n        )\n\n    ax.axvline(rp_x, lw=0.5, c=TOMATO)\n    ax.axhline(rp_y, lw=0.5, c=TOMATO)\n\n    ax.set_ylim(bottom=0, top=df_plot[y].max() * 1.1)\n    ax.set_xlim(left=0, right=df_plot[x].max() * 1.1)\n    ax.set_xlabel(x_lab)\n    ax.set_ylabel(y_lab)\n    ax.set_title(title)\n    plt.savefig(output, dpi=300, bbox_inches=\"tight\")\n    plt.tight_layout()\n    plt.show()\n\n\n\n\nCode\nplot_yearly_peaks(\n    df_all_peaks,\n    \"streamflow_max\",\n    \"dis24_max\",\n    \"GRRR Reanalysis yearly peak (m$^{3}$/s)\",\n    \"GloFAS Reanalysis yearly peak (m$^{3}$/s)\",\n    rp_grrr,\n    rp_glofas,\n    \"Yearly peaks in GRRR and GloFAS Reanalysis\",\n    f\"temp/glofas_grrr_reanalysis_peaks_rp{rp}.png\",\n    80,\n)\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_yearly_peaks(\n    df_all_peaks_fs,\n    \"sfed_max\",\n    \"dis24_max\",\n    \"Floodscan yearly peak (flood fraction)\",\n    \"GloFAS Reanalysis yearly peak (m$^{3}$/s)\",\n    rp_fs,\n    rp_glofas,\n    \"Yearly peaks in Floodscan and GloFAS Reanalysis\",\n    f\"temp/glofas_floodscan_reanalysis_peaks_rp{rp}.png\",\n    0.015,\n)\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf_all_peaks_fs[\"detection_glofas\"] = df_all_peaks_fs.apply(\n    lambda row: determine_detection_type(\n        row, rp_fs, rp_glofas, \"sfed_max\", \"dis24_max\"\n    ),\n    axis=1,\n)\n\ncounts_glofas = df_all_peaks_fs[\"detection_glofas\"].value_counts().to_dict()\nprecision, recall, f1 = get_more_stats(\n    counts_glofas[\"TP\"], counts_glofas[\"FP\"], counts_glofas[\"FN\"]\n)\nprint(\"------ GloFAS detection stats agains Floodscan ------\")\nprint(f\"Precision: {precision}\")\nprint(f\"Recall: {recall}\")\nprint(f\"F1: {f1}\")\n\n\n------ GloFAS detection stats agains Floodscan ------\nPrecision: 0.6666666666666666\nRecall: 0.5\nF1: 0.5714285714285714\n\n\n\n\nCode\nplot_yearly_peaks(\n    df_all_peaks_fs,\n    \"sfed_max\",\n    \"streamflow_max\",\n    \"Floodscan yearly peak (flood fraction)\",\n    \"GRRR Reanalysis yearly peak (m$^{3}$/s)\",\n    rp_fs,\n    rp_grrr,\n    \"Yearly peaks in Floodscan and GRRR Reanalysis\",\n    f\"temp/grrr_floodscan_reanalysis_peaks_rp{rp}.png\",\n    0.015,\n)\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf_all_peaks_fs[\"detection_grrr\"] = df_all_peaks_fs.apply(\n    lambda row: determine_detection_type(\n        row, rp_fs, rp_grrr, \"sfed_max\", \"streamflow_max\"\n    ),\n    axis=1,\n)\n\ncounts_glofas = df_all_peaks_fs[\"detection_grrr\"].value_counts().to_dict()\nprecision, recall, f1 = get_more_stats(\n    counts_glofas[\"TP\"], counts_glofas[\"FP\"], counts_glofas[\"FN\"]\n)\nprint(\"------ GRRR detection stats agains Floodscan ------\")\nprint(f\"Precision: {precision}\")\nprint(f\"Recall: {recall}\")\nprint(f\"F1: {f1}\")\n\n\n------ GRRR detection stats agains Floodscan ------\nPrecision: 0.625\nRecall: 0.625\nF1: 0.625\n\n\nWhat if we triggered when GRRR &gt; 3-year RP?\n\n\nCode\ndf_grrr_events = (\n    df_ra_grrr[df_ra_grrr[\"streamflow\"] &gt; rp_grrr]\n    .groupby(df_ra_grrr[\"valid_time\"].dt.year.rename(\"year\"))\n    .first()\n    .reset_index()\n)[[\"year\", \"valid_time\"]]\n\ndf_glofas_events = (\n    df_ra_glofas[df_ra_glofas[\"dis24\"] &gt; rp_glofas]\n    .groupby(df_ra_glofas[\"valid_time\"].dt.year.rename(\"year\"))\n    .first()\n    .reset_index()\n)[[\"year\", \"valid_time\"]]\n\ndf_fs_events = (\n    df_fs[df_fs[\"SFED\"] &gt; rp_fs]\n    .groupby(df_fs[\"valid_time\"].dt.year.rename(\"year\"))\n    .first()\n    .reset_index()\n)[[\"year\", \"valid_time\"]]\n\n\nWhat do the other datasets look like at these events?\n\n\nCode\ndef get_continuous_periods(mask):\n    \"\"\"Returns list of (start_idx, end_idx) tuples for continuous True periods in mask\"\"\"\n    if not any(mask):\n        return []\n\n    mask_array = np.array(mask)\n    result = []\n\n    start_idx = None\n    for i, val in enumerate(mask_array):\n        if val and start_idx is None:  # Start of a run\n            start_idx = i\n        elif not val and start_idx is not None:  # End of a run\n            result.append((start_idx, i - 1))\n            start_idx = None\n\n    # Handle case where the last run extends to the end\n    if start_idx is not None:\n        result.append((start_idx, len(mask_array) - 1))\n\n    return result\n\n\n\n\nCode\n# Get all the events\ndf_events = pd.concat([df_fs_events, df_grrr_events]).sort_values(\"year\")\ndf_events = df_events[\n    (df_events.year &gt;= 1998) & (df_events.year &lt; 2024)\n].reset_index()\n\ndf_merged = df_ra_grrr.merge(df_fs, how=\"inner\")\n\n\n\n\nCode\n# Just get the flooding season\ndf_merged[\"month\"] = df_merged.valid_time.dt.month\ndf_merged[\"year\"] = df_merged.valid_time.dt.year\ndf_merged = df_merged[(df_merged.month &gt; 7) & (df_merged.month &lt; 12)]\n\n\n\n\nCode\nn_years = df_events[\"year\"].nunique()\nncols = 4\nnrows = round(n_years / ncols)\n\nfig, axes = plt.subplots(\n    nrows=nrows, ncols=ncols, figsize=(ncols * 5, nrows * 3)\n)\naxes = axes.flatten()\n\nfor j, year in enumerate(df_events[\"year\"].unique()):\n    dff = df_merged[df_merged[\"valid_time\"].dt.year == year]\n    ax = axes[j]\n    ax2 = ax.twinx()\n\n    ax.plot(dff[\"valid_time\"], dff[\"streamflow\"], c=SAPPHIRE)\n    ax2.plot(dff[\"valid_time\"], dff[\"SFED\"], c=TOMATO)\n\n    axes[j].xaxis.set_major_formatter(DateFormatter(\"%m-%d\"))\n\n    # Highlight streamflow exceedances\n    mask = dff[\"streamflow\"] &gt; rp_grrr\n    periods = list(get_continuous_periods(mask))\n\n    # Color y-axis labels and ticks\n    ax.tick_params(axis=\"y\", colors=SAPPHIRE, labelsize=8)\n    ax2.tick_params(axis=\"y\", colors=TOMATO, labelsize=8)\n\n    # Make x-axis font smaller\n    ax.tick_params(axis=\"x\", labelsize=8)\n\n    for start_idx, end_idx in get_continuous_periods(mask):\n        ax.axvspan(\n            dff[\"valid_time\"].iloc[start_idx],\n            dff[\"valid_time\"].iloc[end_idx],\n            alpha=0.1,\n            color=SAPPHIRE,\n        )\n\n    # Highlight SFED exceedances\n    mask = dff[\"SFED\"] &gt; rp_fs\n    for start_idx, end_idx in get_continuous_periods(mask):\n        ax2.axvspan(\n            dff[\"valid_time\"].iloc[start_idx],\n            dff[\"valid_time\"].iloc[end_idx],\n            alpha=0.2,\n            color=TOMATO,\n        )\n    ax.axhline(rp_grrr, lw=1, c=SAPPHIRE, linestyle=\"--\")\n    ax2.axhline(rp_fs, lw=1, c=TOMATO, linestyle=\"--\")\n    ax.set_title(year)\n\n# Add more spacing to avoid overlap\nplt.tight_layout(h_pad=2.0, w_pad=1.0, pad=3.0)\nplt.savefig(f\"temp/grrr_events_rp{rp}.png\")\n\n\n\n\n\n\n\n\n\nLet’s look at the overall correlation across roughly the flooding season\n\n\nCode\n# glofas vs floodscan\ndf_merged_glofas = df_fs.merge(df_ra_glofas, how=\"inner\")\n\ndf_merged_glofas[\"month\"] = df_merged_glofas.valid_time.dt.month\ndf_merged_glofas = df_merged_glofas[\n    (df_merged_glofas.month &gt; 7) & (df_merged_glofas.month &lt; 12)\n]\n\ncorr_glofas = df_merged_glofas[\"SFED\"].corr(\n    df_merged_glofas[\"dis24\"], method=\"spearman\"\n)\nprint(corr_glofas)\n\n\n0.6800855356773761\n\n\n\n\nCode\n# grrr vs floodscan\ndf_merged_grrr = df_fs.merge(df_ra_grrr, how=\"inner\")\n\ndf_merged_grrr[\"month\"] = df_merged_grrr.valid_time.dt.month\ndf_merged_grrr = df_merged_grrr[\n    (df_merged_grrr.month &gt; 7) & (df_merged_grrr.month &lt; 12)\n]\n\ncorr_grrr = df_merged_grrr[\"SFED\"].corr(\n    df_merged_grrr[\"streamflow\"], method=\"spearman\"\n)\nprint(corr_grrr)\n\n\n0.6951278240841906",
    "crumbs": [
      "Google processing",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>GloFAS vs Google Reanalysis Comparison</span>"
    ]
  },
  {
    "objectID": "exploration/2025/grrr_explore.html",
    "href": "exploration/2025/grrr_explore.html",
    "title": "8  GRRR Forecast Skill and NiHSA Comparison",
    "section": "",
    "text": "8.1 Load in the GRRR data\nThis notebook investigates Google’s forecast skill at Wuro Bokki, Nigeria, and compares the reanalysis data against observational water level data from NiHSA.\nCode\nds_ra = grrr.load_reanalysis()\ndf_ra = grrr.process_reanalysis(ds_ra)\n\nds_rf = grrr.load_reforecast()\ndf_rf = grrr.process_reforecast(ds_rf)\n\nds_return_periods = grrr.load_return_periods()\n\n\n/Users/hannahker/Desktop/ds-aa-nga-flooding/src/datasources/grrr.py:12: FutureWarning: In a future version of xarray decode_timedelta will default to False rather than None. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.\n  return xr.open_zarr(",
    "crumbs": [
      "Google processing",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>GRRR Forecast Skill and NiHSA Comparison</span>"
    ]
  },
  {
    "objectID": "exploration/2025/grrr_explore.html#load-in-the-grrr-data",
    "href": "exploration/2025/grrr_explore.html#load-in-the-grrr-data",
    "title": "8  GRRR Forecast Skill and NiHSA Comparison",
    "section": "",
    "text": "8.1.1 Return Periods\nGet the Google-derived return periods\n\n\nCode\nreturn_periods_dict = {}\n\nfor var_name in ds_return_periods.data_vars:\n    return_periods_dict[int(var_name.split(\"_\")[-1])] = ds_return_periods[\n        var_name\n    ].item()\n\ndf_rp = pd.DataFrame([return_periods_dict])\ndf_rp = (\n    df_rp.T.reset_index()\n    .rename(columns={\"index\": \"return_period\", 0: \"streamflow\"})\n    .sort_values(\"return_period\", ascending=True)\n)\n\n\nNow estimate return periods directly from the reanalysis data\n\n\nCode\nreturn_periods = df_rp[\"return_period\"]\ndf_rp_calculated = rp_calc.estimate_return_periods(\n    df_ra,\n    date_col=\"valid_time\",\n    val_col=\"streamflow\",\n    target_rps=list(return_periods),\n)\n\n\nNow plot both return periods\n\n\nCode\nplt.plot(\n    df_rp[\"return_period\"],\n    df_rp[\"streamflow\"],\n    \"o-\",\n    c=TOMATO,\n    label=\"Google Return Periods\",\n)\nplt.plot(\n    df_rp_calculated[\"return_period\"],\n    df_rp_calculated[\"value\"],\n    \"o-\",\n    c=SAPPHIRE,\n    label=\"Calculated Return Periods from Reanalysis\",\n)\nplt.xlabel(\"Return Period\")\nplt.ylabel(\"Streamflow (m$^3$/s)\")\nplt.title(\"Streamflow return periods from GRRR product\")\nplt.legend()\nplt.savefig(\n    f\"temp/{HYBAS_ID}_return_periods.png\", dpi=300, bbox_inches=\"tight\"\n)\nplt.show()",
    "crumbs": [
      "Google processing",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>GRRR Forecast Skill and NiHSA Comparison</span>"
    ]
  },
  {
    "objectID": "exploration/2025/grrr_explore.html#skill-against-reforecast",
    "href": "exploration/2025/grrr_explore.html#skill-against-reforecast",
    "title": "8  GRRR Forecast Skill and NiHSA Comparison",
    "section": "8.2 Skill against reforecast",
    "text": "8.2 Skill against reforecast\nHow well does the forecast match the model?\n\n\nCode\nfig1, ax1 = plt.subplots()\nfig2, ax2 = plt.subplots()\n\n\ndef percent_bias(obs, pred):\n    return 100.0 * sum(pred - obs) / sum(obs)\n\n\ndf_ra = df_ra.rename(columns={\"streamflow\": \"streamflow_ra\"})\ndf_rf = df_rf.rename(columns={\"streamflow\": \"streamflow_rf\"})\ndf_merged = df_rf.merge(df_ra, how=\"left\")\n\nfor rp in [None, 2, 5, 7]:\n    if rp:\n        thresh = float(\n            df_rp_calculated.loc[\n                df_rp_calculated[\"return_period\"] == rp, \"value\"\n            ].iloc[0]\n        )\n\n        df_merged = df_merged[df_merged[\"streamflow_rf\"] &gt;= thresh]\n\n    df_bias = (\n        df_merged.groupby(\"leadtime\")\n        .apply(\n            lambda x: percent_bias(x[\"streamflow_ra\"], x[\"streamflow_rf\"]),\n            include_groups=False,\n        )\n        .reset_index(name=\"percent_bias\")\n    )\n\n    dimension_cols = [\"issue_time\", \"valid_time\", \"leadtime\"]\n    data_vars = [\"streamflow_rf\", \"streamflow_ra\"]\n\n    indexed_df = df_merged.set_index(dimension_cols)\n    ds = indexed_df[data_vars].to_xarray()\n\n    df_skill = (\n        ds.xs.mape(\n            \"streamflow_ra\",\n            \"streamflow_rf\",\n            dim=[\"issue_time\", \"valid_time\"],\n            skipna=True,\n        )\n        .to_series()\n        .reset_index()\n        .rename(columns={0: \"mape\"})\n    )\n    label = f\"&gt;= 1 in {rp}-year\" if rp else \"All\"\n\n    ax1.plot(\n        df_skill[\"leadtime\"],\n        df_skill[\"mape\"] * 100,\n        label=label,\n    )\n\n    ax2.plot(\n        df_bias[\"leadtime\"],\n        df_bias[\"percent_bias\"],\n        label=label,\n    )\n\nax1.legend()\nax1.set_xlabel(\"Leadtime (days)\")\nax1.set_ylabel(\"Mean Absolute Percent Error (%)\")\nax1.set_title(\"Forecast error across leadtimes\")\n\nfig1.savefig(\n    f\"temp/{HYBAS_ID}_forecast_mape.png\", dpi=300, bbox_inches=\"tight\"\n)\n\nax2.legend()\nax2.axhline(y=0, color=\"r\", linestyle=\"--\", alpha=0.7)\nax2.set_xlabel(\"Leadtime (days)\")\nax2.set_ylabel(\"Percent Bias (%)\")\nax2.set_title(\"Forecast percent bias by lead time\")\n\nfig2.savefig(\n    f\"temp/{HYBAS_ID}_forecast_bias.png\", dpi=300, bbox_inches=\"tight\"\n)",
    "crumbs": [
      "Google processing",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>GRRR Forecast Skill and NiHSA Comparison</span>"
    ]
  },
  {
    "objectID": "exploration/2025/grrr_explore.html#load-in-the-observational-nihsa-data",
    "href": "exploration/2025/grrr_explore.html#load-in-the-observational-nihsa-data",
    "title": "8  GRRR Forecast Skill and NiHSA Comparison",
    "section": "8.3 Load in the observational NIHSA data",
    "text": "8.3 Load in the observational NIHSA data\n\n\nCode\ndf_nh = nihsa.load_wuroboki().rename(columns={\"time\": \"valid_time\"})\n\n\nHow well is the GRRR reanalysis data correlated with observational water levels at Wuro Boki?\n\n\nCode\ndf_merged = (\n    df_nh.merge(df_ra, how=\"left\")\n    .dropna()\n    .rename(columns={\"streamflow_ra\": \"streamflow\"})\n)\n\n\nLet’s first break down by year\n\n\nCode\nstation_name = \"Wuroboki\"\n\ndis_max = df_merged[\"streamflow\"].max()\nlevel_max = df_merged[\"level\"].max()\n\nn_years = df_merged[\"valid_time\"].dt.year.nunique()\n\nncols = 4\nnrows = round(n_years / ncols)\n\nfig, axes = plt.subplots(\n    nrows=nrows, ncols=ncols, figsize=(ncols * 5, nrows * 3)\n)\naxes = axes.flatten()\n\nyear_correlations = {}\n\nfor j, year in enumerate(df_merged[\"valid_time\"].dt.year.unique()):\n    dff = df_merged[df_merged[\"valid_time\"].dt.year == year]\n    ax = axes[j]\n    ax2 = ax.twinx()\n\n    ax.plot(\n        dff[\"valid_time\"],\n        dff[\"level\"],\n        color=SAPPHIRE,\n        label=\"NiHSA\\n(mm, left axis)\",\n    )\n    ax.set_ylim(bottom=0, top=level_max * 1.1)\n\n    ax2.plot(\n        dff[\"valid_time\"],\n        dff[\"streamflow\"],\n        color=TOMATO,\n        label=\"GRRR\\n(m$^{3}$/s, right axis)\",\n    )\n\n    ax2.set_ylim(bottom=0, top=dis_max * 1.1)\n\n    pearson_r = dff[\"level\"].corr(dff[\"streamflow\"], method=\"pearson\")\n    spearman_r = dff[\"level\"].corr(dff[\"streamflow\"], method=\"spearman\")\n\n    year_correlations[year] = {\n        \"pearson_r\": pearson_r,\n        \"spearman_r\": spearman_r,\n    }\n    if pearson_r &lt; 0.5 and spearman_r &lt; 0.5:\n        bbox_col = \"#ffa694\"  # Roughly which ones have bad relationship\n    else:\n        bbox_col = \"white\"\n\n    ax.text(\n        0.05,\n        0.95,\n        f\"Pearson r: {pearson_r:.2f}\\nSpearman r: {spearman_r:.2f}\",\n        transform=ax.transAxes,\n        verticalalignment=\"top\",\n        bbox=dict(boxstyle=\"round\", facecolor=bbox_col),\n    )\n\n    ax.xaxis.set_major_locator(mdates.MonthLocator())\n    ax.xaxis.set_major_formatter(mdates.DateFormatter(\"%b\"))\n    ax.set_title(year)\n\nfig.suptitle(\n    f\"Comparison of NiHSA and GRRR reanalysis for {station_name.capitalize()}\",\n    fontsize=16,\n    y=1,\n)\nplt.savefig(\n    f\"temp/{HYBAS_ID}_nihsa_correlation.png\", dpi=300, bbox_inches=\"tight\"\n)\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\nNow look at overall\n\n\nCode\npearson_corr = df_merged[\"level\"].corr(\n    df_merged[\"streamflow\"], method=\"pearson\"\n)\nspearman_corr = df_merged[\"level\"].corr(\n    df_merged[\"streamflow\"], method=\"spearman\"\n)\nprint(f\"\\nOverall Pearson correlation: {pearson_corr:.4f}\")\nprint(f\"Overall Spearman correlation: {spearman_corr:.4f}\")\n\nplt.figure(figsize=(10, 6))\nplt.scatter(df_merged[\"streamflow\"], df_merged[\"level\"], alpha=0.1, c=SAPPHIRE)\nplt.title(\"Water Level vs Streamflow\")\nplt.xlabel(\"Streamflow (m$^{3}$/s)\")\nplt.ylabel(\"Water level\")\n\nplt.savefig(\n    f\"temp/{HYBAS_ID}_nihsa_correlation_overall.png\",\n    dpi=300,\n    bbox_inches=\"tight\",\n)\n\nplt.show()\n\n\n\nOverall Pearson correlation: 0.3084\nOverall Spearman correlation: 0.3453",
    "crumbs": [
      "Google processing",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>GRRR Forecast Skill and NiHSA Comparison</span>"
    ]
  },
  {
    "objectID": "exploration/2025/grrr_explore.html#return-period-exceedance",
    "href": "exploration/2025/grrr_explore.html#return-period-exceedance",
    "title": "8  GRRR Forecast Skill and NiHSA Comparison",
    "section": "8.4 Return period exceedance",
    "text": "8.4 Return period exceedance\nLet’s start by calculating the yearly peaks\n\n\nCode\n# First let's only take the observational data since 1980\n# to match with the reanalysis\ndf_nh = df_nh[df_nh[\"valid_time\"] &gt; \"1980-01-01\"]\n\n# Also fill in all the date gaps with null values for better plotting\ndate_range = pd.date_range(\n    start=df_nh[\"valid_time\"].min(),\n    end=df_nh[\"valid_time\"].max(),\n    freq=\"D\",\n)\n\ndf_nh_complete = pd.DataFrame({\"valid_time\": date_range})\ndf_nh_complete = df_nh_complete.merge(df_nh, on=\"valid_time\", how=\"left\")\n\n\n\n\nCode\ndf_nh_peaks = (\n    df_nh.groupby(df_nh[\"valid_time\"].dt.year.rename(\"year\"))\n    .agg(\n        level_max=(\"level\", \"max\"),\n        level_max_date=(\n            \"level\",\n            lambda x: df_nh.loc[x.idxmax(), \"valid_time\"],\n        ),\n    )\n    .reset_index()\n)\n\ndf_nh_peaks_recent = df_nh_peaks[df_nh_peaks.year.isin(NH_YEARS_PEAKS)]\n\n\nFor the observational data\n\n\nCode\nrp_2_nh = df_nh_peaks_recent[\"level_max\"].quantile(1 - 1 / 2)\nrp_5_nh = df_nh_peaks_recent[\"level_max\"].quantile(1 - 1 / 5)\nrp_7_nh = df_nh_peaks_recent[\"level_max\"].quantile(1 - 1 / 7)\n\nfig, ax = plt.subplots(figsize=(25, 6))\n\nax.plot(df_nh_complete[\"valid_time\"], df_nh_complete[\"level\"], c=GREY_DARK)\nax.axhline(rp_2_nh, c=SAPPHIRE, label=\"1 in 2 rp\")\nax.axhline(rp_5_nh, c=MINT, label=\"1 in 5 rp\")\nax.axhline(rp_7_nh, c=TOMATO, label=\"1 in 7 rp\")\n\nmask_rp2 = df_nh_peaks[\"level_max\"] &gt;= rp_2_nh\nmask_rp5 = df_nh_peaks[\"level_max\"] &gt;= rp_5_nh\nmask_rp7 = df_nh_peaks[\"level_max\"] &gt;= rp_7_nh\n\nax.scatter(\n    df_nh_peaks.loc[mask_rp2 & ~mask_rp5, \"level_max_date\"],\n    df_nh_peaks.loc[mask_rp2 & ~mask_rp5, \"level_max\"],\n    c=SAPPHIRE,\n    s=60,\n    label=\"Exceeds 1 in 2 rp\",\n)\nax.scatter(\n    df_nh_peaks.loc[mask_rp5 & ~mask_rp7, \"level_max_date\"],\n    df_nh_peaks.loc[mask_rp5 & ~mask_rp7, \"level_max\"],\n    c=MINT,\n    s=60,\n    label=\"Exceeds 1 in 5 rp\",\n)\nax.scatter(\n    df_nh_peaks.loc[mask_rp7, \"level_max_date\"],\n    df_nh_peaks.loc[mask_rp7, \"level_max\"],\n    c=TOMATO,\n    s=60,\n    label=\"Exceeds 1 in 7 rp\",\n)\n\nax.set_ylabel(\"Water level\")\nax.set_title(\"Return period exceedance in NiHSA observations\")\nplt.savefig(f\"temp/nihsa_rp_exceedance.png\", dpi=300, bbox_inches=\"tight\")\nplt.legend()\n\n\n\n\n\n\n\n\n\nFor the reanalysis data\n\n\nCode\ndf_ra_peaks = (\n    df_ra.groupby(df_ra[\"valid_time\"].dt.year.rename(\"year\"))\n    .agg(\n        sf_max=(\"streamflow_ra\", \"max\"),\n        sf_max_date=(\n            \"streamflow_ra\",\n            lambda x: df_ra.loc[x.idxmax(), \"valid_time\"],\n        ),\n    )\n    .reset_index()\n)\n\n\n\n\nCode\nrp_2_ra = df_ra_peaks[\"sf_max\"].quantile(1 - 1 / 2)\nrp_5_ra = df_ra_peaks[\"sf_max\"].quantile(1 - 1 / 5)\nrp_7_ra = df_ra_peaks[\"sf_max\"].quantile(1 - 1 / 7)\n\nfig, ax = plt.subplots(figsize=(25, 6))\n\nax.plot(df_ra[\"valid_time\"], df_ra[\"streamflow_ra\"], c=GREY_DARK)\nax.axhline(rp_2_ra, c=SAPPHIRE, label=\"1 in 2 rp\")\nax.axhline(rp_5_ra, c=MINT, label=\"1 in 5 rp\")\nax.axhline(rp_7_ra, c=TOMATO, label=\"1 in 7 rp\")\n\nmask_rp2 = df_ra_peaks[\"sf_max\"] &gt;= rp_2_ra\nmask_rp5 = df_ra_peaks[\"sf_max\"] &gt;= rp_5_ra\nmask_rp7 = df_ra_peaks[\"sf_max\"] &gt;= rp_7_ra\n\nax.scatter(\n    df_ra_peaks.loc[mask_rp2 & ~mask_rp5, \"sf_max_date\"],\n    df_ra_peaks.loc[mask_rp2 & ~mask_rp5, \"sf_max\"],\n    c=SAPPHIRE,\n    s=30,\n    label=\"Exceeds 1 in 2 rp\",\n)\nax.scatter(\n    df_ra_peaks.loc[mask_rp5 & ~mask_rp7, \"sf_max_date\"],\n    df_ra_peaks.loc[mask_rp5 & ~mask_rp7, \"sf_max\"],\n    c=MINT,\n    s=30,\n    label=\"Exceeds 1 in 5 rp\",\n)\nax.scatter(\n    df_ra_peaks.loc[mask_rp7, \"sf_max_date\"],\n    df_ra_peaks.loc[mask_rp7, \"sf_max\"],\n    c=TOMATO,\n    s=30,\n    label=\"Exceeds 1 in 7 rp\",\n)\nax.set_ylabel(\"Streamflow (m$^3$/s)\")\nax.set_title(\"Return period exceedance in GRRR reforecast\")\nplt.savefig(f\"temp/{HYBAS_ID}_rp_exceedance.png\", dpi=300, bbox_inches=\"tight\")\nplt.legend()\n\n\n\n\n\n\n\n\n\nNow let’s look at the yearly peaks\n\n\nCode\ndf_all_peaks = df_nh_peaks.merge(df_ra_peaks, how=\"inner\")\ndf_all_peaks = df_all_peaks[df_all_peaks.year.isin(NH_YEARS_PEAKS)]\n\n\n\n\nCode\nfig, ax = plt.subplots()\n\nax.scatter(df_all_peaks[\"sf_max\"], df_all_peaks[\"level_max\"], c=\"#007ce0\")\n\nfor idx, row in df_all_peaks.iterrows():\n    ax.annotate(\n        row[\"year\"],\n        (row[\"sf_max\"] + 60, row[\"level_max\"]),\n        ha=\"center\",\n        va=\"center\",\n        fontsize=8,\n        c=\"#007ce0\",\n    )\n\nax.axvline(rp_5_ra, lw=0.5, c=TOMATO)\nax.axhline(rp_5_nh, lw=0.5, c=TOMATO)\n\nax.set_ylim(bottom=0, top=df_all_peaks[\"level_max\"].max() * 1.1)\nax.set_xlim(left=0, right=df_all_peaks[\"sf_max\"].max() * 1.1)\nax.set_xlabel(\"Reanalysis yearly peak (m$^{3}$/s)\")\nax.set_ylabel(\"Observational yearly peak\")\nax.set_title(\"Yearly peaks in reanalysis and observational data\")\nplt.savefig(f\"temp/{HYBAS_ID}_yearly_peaks.png\", dpi=300, bbox_inches=\"tight\")\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\n\n\nCode\ndef determine_detection_type(row, rp_5_nh, rp_5_ra):\n    happened = row[\"level_max\"] &gt; rp_5_nh\n    detected = row[\"sf_max\"] &gt; rp_5_ra\n\n    if happened and detected:\n        return \"TP\"  # True Positive\n    elif not happened and detected:\n        return \"FP\"  # False Positive\n    elif not happened and not detected:\n        return \"TN\"  # True Negative\n    else:\n        return \"FN\"  # False Negative\n\n\ndef get_more_stats(TP, FP, FN):\n    precision = TP / (TP + FP)\n    recall = TP / (TP + FN)\n    f1 = 2 / ((1 / recall) + (1 / precision))\n    return precision, recall, f1\n\n\ndf_all_peaks[\"detection_type\"] = df_all_peaks.apply(\n    lambda row: determine_detection_type(row, rp_5_nh, rp_5_ra), axis=1\n)\n\n\n\n\nCode\ncounts = df_all_peaks[\"detection_type\"].value_counts().to_dict()\n\n\n\n\nCode\ncounts\n\n\n{'TN': 11, 'FN': 3, 'FP': 2}\n\n\n\n\nCode\nif \"TP\" not in counts.keys():\n    counts[\"TP\"] = 0\n\n\nDivision by zero here… makes sense since there’s no TPs…\n\n\nCode\nprecision, recall, f1 = get_more_stats(\n    counts[\"TP\"], counts[\"FP\"], counts[\"FN\"]\n)\n\n\n\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\nCell In[31], line 1\n----&gt; 1 precision, recall, f1 = get_more_stats(\n      2     counts[\"TP\"], counts[\"FP\"], counts[\"FN\"]\n      3 )\n\nCell In[27], line 18, in get_more_stats(TP, FP, FN)\n     16 precision = TP / (TP + FP)\n     17 recall = TP / (TP + FN)\n---&gt; 18 f1 = 2 / ((1 / recall) + (1 / precision))\n     19 return precision, recall, f1\n\nZeroDivisionError: float division by zero",
    "crumbs": [
      "Google processing",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>GRRR Forecast Skill and NiHSA Comparison</span>"
    ]
  },
  {
    "objectID": "exploration/2025/grrr_inundation_history.html",
    "href": "exploration/2025/grrr_inundation_history.html",
    "title": "9  Exploring Google’s Inundation History products",
    "section": "",
    "text": "See here for the bucket holding the data and documentation. Some notes from the README:\n\n\nThis folder contains inundation history files created by Google’s floods team based on the GLAD dataset. These files provide historical data on how often each 128-meter pixel in the world has been wet between 1999 and 2020, derived from satellite imagery.\n\n\nEach GeoJSON file contains three layers, each representing a different level of inundation risk: - High_risk: Areas wet at least 5% of the time. - Medium_risk: Areas wet at least 1% of the time. - Low_risk: Areas wet at least 0.5% of the time.\n\n\nEach layer contains a single Shapely MultiPolygon geometry. Areas not covered by any of the polygons were wet less than 0.5% of the time. Constant water bodies have been removed from all layers.\n\n\nLet’s imagine that we want to pull in all the data covering Nigeria…\n\n\nCode\n%load_ext jupyter_black\n%load_ext autoreload\n%autoreload 2\n\n\n\n\nCode\nimport geopandas as gpd\nimport requests\nimport os\nimport re\nfrom shapely.ops import unary_union\nimport pandas as pd\nfrom tqdm.notebook import tqdm\n\nfrom src.datasources import codab\n\n\n\n\nCode\ngdf = codab.load_codab(admin_level=0)\nbounds = gdf.total_bounds\nmin_lng, min_lat, max_lng, max_lat = bounds\n\n\n\n\nCode\ndef list_available_geojson_files(bucket_name=\"flood-forecasting\"):\n    url = f\"https://storage.googleapis.com/storage/v1/b/{bucket_name}/o?prefix=inundation_history/data/&maxResults=1000\"\n\n    all_files = []\n    next_page_token = None\n\n    print(\"Listing files in Google Cloud Storage bucket...\")\n\n    while True:\n        # Add page token if we're paginating\n        request_url = url\n        if next_page_token:\n            request_url += f\"&pageToken={next_page_token}\"\n\n        # Request the list of files\n        response = requests.get(request_url)\n\n        if response.status_code != 200:\n            print(f\"Error listing files: HTTP {response.status_code}\")\n            break\n\n        data = response.json()\n        items = data.get(\"items\", [])\n\n        # Process each file\n        for item in items:\n            name = item[\"name\"]\n            if name.endswith(\".geojson\"):\n                # Extract coordinates from filename using regex\n                pattern = r\"inundation_history_([-\\d\\.]+)_([-\\d\\.]+)_([-\\d\\.]+)_([-\\d\\.]+)\\.geojson\"\n                match = re.search(pattern, name)\n\n                if match:\n                    min_lat, min_lng, max_lat, max_lng = map(\n                        float, match.groups()\n                    )\n                    all_files.append(\n                        {\n                            \"name\": name,\n                            \"min_lat\": min_lat,\n                            \"min_lng\": min_lng,\n                            \"max_lat\": max_lat,\n                            \"max_lng\": max_lng,\n                            \"url\": f\"https://storage.googleapis.com/{bucket_name}/{name}\",\n                        }\n                    )\n\n        # Check if there are more pages\n        next_page_token = data.get(\"nextPageToken\")\n        if not next_page_token:\n            break\n\n    print(f\"Found {len(all_files)} GeoJSON files\")\n    return all_files\n\n\ndef find_files_for_region(files_info, min_lat, min_lng, max_lat, max_lng):\n    relevant_files = []\n\n    for file_info in files_info:\n        if (\n            file_info[\"min_lat\"] &lt;= max_lat\n            and file_info[\"max_lat\"] &gt;= min_lat\n            and file_info[\"min_lng\"] &lt;= max_lng\n            and file_info[\"max_lng\"] &gt;= min_lng\n        ):\n            relevant_files.append(file_info)\n\n    return relevant_files\n\n\ndef download_geojson_file(file_info, download_dir=\"temp/inundation_data\"):\n    os.makedirs(download_dir, exist_ok=True)\n    filename = os.path.basename(file_info[\"name\"])\n    local_path = os.path.join(download_dir, filename)\n\n    if os.path.exists(local_path):\n        return local_path\n\n    response = requests.get(file_info[\"url\"])\n\n    if response.status_code == 200:\n        with open(local_path, \"wb\") as f:\n            f.write(response.content)\n        return local_path\n    else:\n        print(f\"Failed to download {filename}: HTTP {response.status_code}\")\n        return None\n\n\n\n\nCode\n# Step 2: List available files in the bucket\nall_files = list_available_geojson_files()\n\n# Step 3: Find files covering Nigeria\nnigeria_files = find_files_for_region(\n    all_files, min_lat, min_lng, max_lat, max_lng\n)\nprint(f\"Found {len(nigeria_files)} files that cover parts of Nigeria\")\n\n# Display a few files for verification\npd.DataFrame(nigeria_files[:5])\n\n\nListing files in Google Cloud Storage bucket...\nFound 1626 GeoJSON files\nFound 24 files that cover parts of Nigeria\n\n\n\n\n\n\n\n\n\nname\nmin_lat\nmin_lng\nmax_lat\nmax_lng\nurl\n\n\n\n\n0\ninundation_history/data/inundation_history_10....\n10.190\n13.544\n13.180\n16.535\nhttps://storage.googleapis.com/flood-forecasti...\n\n\n1\ninundation_history/data/inundation_history_10....\n10.331\n10.620\n13.320\n13.544\nhttps://storage.googleapis.com/flood-forecasti...\n\n\n2\ninundation_history/data/inundation_history_10....\n10.442\n7.785\n13.423\n10.620\nhttps://storage.googleapis.com/flood-forecasti...\n\n\n3\ninundation_history/data/inundation_history_10....\n10.524\n5.060\n13.493\n7.785\nhttps://storage.googleapis.com/flood-forecasti...\n\n\n4\ninundation_history/data/inundation_history_10....\n10.579\n2.460\n13.532\n5.060\nhttps://storage.googleapis.com/flood-forecasti...\n\n\n\n\n\n\n\n\n\nCode\n# Step 4: Download relevant files\ndownloaded_files = []\nprint(\"Downloading relevant files...\")\nfor file_info in tqdm(nigeria_files):\n    file_path = download_geojson_file(file_info)\n    if file_path:\n        downloaded_files.append(file_path)\n\nprint(f\"Downloaded {len(downloaded_files)} files\")\n\n\nDownloading relevant files...\n\n\n\n\n\nDownloaded 24 files\n\n\n\n\nCode\nrisk_gdfs = []\nfor file in downloaded_files:\n    gdf_ = gpd.read_file(file)\n    risk_gdfs.append(gdf_)\n\ncombined = pd.concat(risk_gdfs)\ngrouped = combined.groupby(\"name\")\n\n# Combine geometries for each group using unary_union\ncombined_geoms = {}\nfor name, group in grouped:\n    combined_geom = unary_union(group.geometry.values)\n    combined_geoms[name] = combined_geom\n\ngdf_combined = (\n    gpd.GeoDataFrame(\n        geometry=[combined_geoms[name] for name in combined_geoms.keys()],\n        index=combined_geoms.keys(),\n    )\n    .reset_index()\n    .rename(columns={\"index\": \"risk\"})\n)\n\n\n\n\nCode\ngdf_combined.to_file(\"temp/inundation_data/combined_nga.shp\")\n\n\n/Users/hannahker/Desktop/ds-aa-nga-flooding/venv/lib/python3.13/site-packages/pyogrio/geopandas.py:662: UserWarning: 'crs' was not provided.  The output dataset will not have projection information defined and may not be usable in other systems.\n  write(\n\n\n\n\nCode\nax = gdf_combined.plot(figsize=(12, 10), cmap=\"viridis\")",
    "crumbs": [
      "Google processing",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Exploring Google's Inundation History products</span>"
    ]
  },
  {
    "objectID": "exploration/2025/fs_pixels.html",
    "href": "exploration/2025/fs_pixels.html",
    "title": "10  Floodscan pixels",
    "section": "",
    "text": "10.1 Load data\nGrab Floodscan pixels along Benue in Adamawa. We need to do this because the NiHSA observational river level data is so patchy, so we can instead use the observed flood extent along the river as a proxy for the river level.",
    "crumbs": [
      "Floodscan processing",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Floodscan pixels</span>"
    ]
  },
  {
    "objectID": "exploration/2025/fs_pixels.html#load-data",
    "href": "exploration/2025/fs_pixels.html#load-data",
    "title": "10  Floodscan pixels",
    "section": "",
    "text": "10.1.1 Benue river\n\n\nCode\nbenue = hydrosheds.load_benue_aoi()\n\n\n\n\nCode\nbenue.to_crs(3857).plot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nbenue_buffer = benue.to_crs(3857).buffer(10 * 1000).to_crs(4326)\n\n\n\n\nCode\nbenue_buffer.plot()\n\n\n\n\n\n\n\n\n\n\n\n10.1.2 Floodscan\n\nOld .nc file\n\n\nCode\nfs_old = floodscan.load_raw_nga_floodscan()\n\n\n\n\nCode\nfs_old = fs_old.rio.write_crs(4326)\n\n\n\n\nCode\nfs_old_clip = fs_old.rio.clip(benue_buffer.geometry)\n\n\n\n\nCode\ndf_fs_old = fs_old_benue.to_dataframe()[\"SFED_AREA\"].reset_index().dropna()\ndf_fs_old\n\n\n\n\n\n\n\n\n\nlat\nlon\ntime\nSFED_AREA\n\n\n\n\n18970\n9.541667\n11.625\n1998-01-12\n0.0\n\n\n18971\n9.541667\n11.625\n1998-01-13\n0.0\n\n\n18972\n9.541667\n11.625\n1998-01-14\n0.0\n\n\n18973\n9.541667\n11.625\n1998-01-15\n0.0\n\n\n18974\n9.541667\n11.625\n1998-01-16\n0.0\n\n\n...\n...\n...\n...\n...\n\n\n863130\n9.208333\n12.625\n2023-12-27\n0.0\n\n\n863131\n9.208333\n12.625\n2023-12-28\n0.0\n\n\n863132\n9.208333\n12.625\n2023-12-29\n0.0\n\n\n863133\n9.208333\n12.625\n2023-12-30\n0.0\n\n\n863134\n9.208333\n12.625\n2023-12-31\n0.0\n\n\n\n\n407855 rows × 4 columns\n\n\n\n\n\nCode\ndf_fs_old.nunique()\n\n\nlat              5\nlon             18\ntime          9485\nSFED_AREA    32587\ndtype: int64\n\n\n\n\nNew COGs\n\n\nCode\nblob_name_format = (\n    \"floodscan/daily/v5/processed/aer_area_300s_v{date_str}_v05r01.tif\"\n)\n\n\n\n\nCode\ndates = pd.date_range(\"2024-01-01\", \"2024-12-31\")\n\n\n\n\nCode\nblob_names = [blob_name_format.format(date_str=x.date()) for x in dates]\n\n\n\n\nCode\ndas = []\nfor date in tqdm(dates):\n    blob_name = blob_name_format.format(date_str=date.date())\n    da_in = stratus.open_blob_cog(\n        blob_name, stage=\"prod\", container_name=\"raster\"\n    )\n    da_in = da_in.sel(band=1).drop_vars(\"band\")\n    da_in[\"date\"] = date\n    das.append(da_in)\n\n\n\n\n\n\n\nCode\nfs_new = xr.concat(das, dim=\"date\")\n\n\n\n\nCode\nfs_new\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray (date: 366, y: 1080, x: 1080)&gt; Size: 2GB\ndask.array&lt;concatenate, shape=(366, 1080, 1080), dtype=float32, chunksize=(1, 1080, 1080), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * x            (x) float64 9kB -29.96 -29.88 -29.79 ... 59.79 59.88 59.96\n  * y            (y) float64 9kB 39.96 39.88 39.79 ... -49.79 -49.88 -49.96\n    spatial_ref  int64 8B 0\n  * date         (date) datetime64[ns] 3kB 2024-01-01 2024-01-02 ... 2024-12-31\nAttributes: (12/19)\n    AREA_OR_POINT:     Area\n    averaging_period:  daily\n    date_issued:       None\n    date_valid:        1\n    download_date:     2024-11-01\n    grid_resolution:   0.08333\n    ...                ...\n    version:           5\n    year_issued:       None\n    year_valid:        2024\n    scale_factor:      1.0\n    add_offset:        0.0\n    long_name:         ('SFED', 'MFED')xarray.DataArraydate: 366y: 1080x: 1080dask.array&lt;chunksize=(1, 1080, 1080), meta=np.ndarray&gt;\n\n\n\n\n\n\n\n\n\n\n\nArray\nChunk\n\n\n\n\nBytes\n1.59 GiB\n4.45 MiB\n\n\nShape\n(366, 1080, 1080)\n(1, 1080, 1080)\n\n\nDask graph\n366 chunks in 1465 graph layers\n\n\nData type\nfloat32 numpy.ndarray\n\n\n\n\n                                                             1080 1080 366\n\n\n\n\nCoordinates: (4)x(x)float64-29.96 -29.88 ... 59.88 59.96array([-29.958333, -29.875   , -29.791667, ...,  59.791667,  59.875   ,\n        59.958333])y(y)float6439.96 39.88 39.79 ... -49.88 -49.96array([ 39.958333,  39.875   ,  39.791667, ..., -49.791667, -49.875   ,\n       -49.958333])spatial_ref()int640crs_wkt :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984grid_mapping_name :latitude_longitudespatial_ref :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]GeoTransform :-30.0 0.08333333333333334 0.0 40.0 0.0 -0.08333333333333334array(0)date(date)datetime64[ns]2024-01-01 ... 2024-12-31array(['2024-01-01T00:00:00.000000000', '2024-01-02T00:00:00.000000000',\n       '2024-01-03T00:00:00.000000000', ..., '2024-12-29T00:00:00.000000000',\n       '2024-12-30T00:00:00.000000000', '2024-12-31T00:00:00.000000000'],\n      dtype='datetime64[ns]')Indexes: (3)xPandasIndexPandasIndex(Index([-29.958333333333332,             -29.875, -29.791666666666664,\n       -29.708333333333332,             -29.625, -29.541666666666664,\n       -29.458333333333332,             -29.375, -29.291666666666664,\n       -29.208333333333332,\n       ...\n         59.20833333333334,  59.291666666666686,  59.375000000000014,\n         59.45833333333334,  59.541666666666686,  59.625000000000014,\n         59.70833333333334,  59.791666666666686,  59.875000000000014,\n         59.95833333333334],\n      dtype='float64', name='x', length=1080))yPandasIndexPandasIndex(Index([ 39.958333333333336,              39.875,   39.79166666666667,\n        39.708333333333336,              39.625,   39.54166666666667,\n        39.458333333333336,              39.375,   39.29166666666667,\n        39.208333333333336,\n       ...\n       -49.208333333333336,  -49.29166666666668,  -49.37500000000001,\n       -49.458333333333336,  -49.54166666666668,  -49.62500000000001,\n       -49.708333333333336,  -49.79166666666668,  -49.87500000000001,\n       -49.958333333333336],\n      dtype='float64', name='y', length=1080))datePandasIndexPandasIndex(DatetimeIndex(['2024-01-01', '2024-01-02', '2024-01-03', '2024-01-04',\n               '2024-01-05', '2024-01-06', '2024-01-07', '2024-01-08',\n               '2024-01-09', '2024-01-10',\n               ...\n               '2024-12-22', '2024-12-23', '2024-12-24', '2024-12-25',\n               '2024-12-26', '2024-12-27', '2024-12-28', '2024-12-29',\n               '2024-12-30', '2024-12-31'],\n              dtype='datetime64[ns]', name='date', length=366, freq=None))Attributes: (19)AREA_OR_POINT :Areaaveraging_period :dailydate_issued :Nonedate_valid :1download_date :2024-11-01grid_resolution :0.08333leadtime :Noneleadtime_units :Nonemonth_issued :Nonemonth_valid :1product :FloodScansource :Atmospheric and Environmental Research (AER) FloodScanunits :Flood fractionversion :5year_issued :Noneyear_valid :2024scale_factor :1.0add_offset :0.0long_name :('SFED', 'MFED')\n\n\n\n\nCode\nfs_new_clip = fs_new.rio.clip(benue_buffer.geometry)\n\n\n\n\nCode\nfig, ax = plt.subplots()\nfs_old_clip.sel(time=\"2022-08-24\").plot(ax=ax)\nbenue.plot(ax=ax)\n\n\n\n\n\n\n\n\n\n\n\nCode\nfig, ax = plt.subplots()\nfs_new_clip.sel(date=\"2024-02-01\").plot()\nbenue.plot(ax=ax)\n\n\n\n\n\n\n\n\n\n\n\n\n10.1.3 Merge old and new Floodscan\n\n\nCode\nwith ProgressBar():\n    df_fs_new_raw = fs_new_clip.to_dataframe(name=\"SFED\")\n\n\n[########################################] | 100% Completed | 86.42 s\n\n\n\n\nCode\ndf_fs_new = df_fs_new_raw[\"SFED\"].reset_index().dropna()\n\n\n\n\nCode\ndf_fs_new\n\n\n\n\n\n\n\n\n\ndate\ny\nx\nSFED\n\n\n\n\n2\n2024-01-01\n9.541667\n11.625000\n0.0\n\n\n3\n2024-01-01\n9.541667\n11.708333\n0.0\n\n\n4\n2024-01-01\n9.541667\n11.791667\n0.0\n\n\n5\n2024-01-01\n9.541667\n11.875000\n0.0\n\n\n6\n2024-01-01\n9.541667\n11.958333\n0.0\n\n\n...\n...\n...\n...\n...\n\n\n34749\n2024-12-31\n9.291667\n12.875000\n0.0\n\n\n34750\n2024-12-31\n9.291667\n12.958333\n0.0\n\n\n34763\n2024-12-31\n9.208333\n12.458333\n0.0\n\n\n34764\n2024-12-31\n9.208333\n12.541667\n0.0\n\n\n34765\n2024-12-31\n9.208333\n12.625000\n0.0\n\n\n\n\n16470 rows × 4 columns\n\n\n\nCheck if same pixels in each\n\n\nCode\ndf_fs_old.nunique()\n\n\nlat              5\nlon             18\ntime          9485\nSFED_AREA    32587\ndtype: int64\n\n\n\n\nCode\ndf_fs_new.nunique()\n\n\ndate     366\ny          5\nx         19\nSFED    5070\ndtype: int64\n\n\n\n\nCode\ndf_fs_new[\"x\"].round(4)\n\n\n2        11.6250\n3        11.7083\n4        11.7917\n5        11.8750\n6        11.9583\n          ...   \n34749    12.8750\n34750    12.9583\n34763    12.4583\n34764    12.5417\n34765    12.6250\nName: x, Length: 16470, dtype: float64\n\n\nCombine dfs, and found pixel coords so they line up\n\n\nCode\ndf_fs_combined = pd.concat(\n    [\n        df_fs_old.rename(\n            columns={\n                \"time\": \"date\",\n                \"lat\": \"y\",\n                \"lon\": \"x\",\n                \"SFED_AREA\": \"SFED\",\n            }\n        ),\n        df_fs_new,\n    ]\n)\ndf_fs_combined[\"x\"] = df_fs_combined[\"x\"].round(4)\ndf_fs_combined[\"y\"] = df_fs_combined[\"y\"].round(4)\n\n\n\n\nCode\ndf_fs_combined.groupby([\"x\", \"y\"]).size()\n\n\nx        y     \n11.4583  9.3750    9851\n         9.4583    9851\n11.5417  9.3750    9851\n         9.4583    9851\n11.6250  9.3750    9851\n         9.4583    9851\n         9.5417    9851\n11.7083  9.4583    9851\n         9.5417    9851\n11.7917  9.4583    9851\n         9.5417    9851\n11.8750  9.4583    9851\n         9.5417    9851\n11.9583  9.4583    9851\n         9.5417    9851\n12.0417  9.4583    9851\n         9.5417    9851\n12.1250  9.4583    9851\n         9.5417    9851\n12.2083  9.4583    9851\n         9.5417    9851\n12.2917  9.3750    9851\n         9.4583    9851\n         9.5417    9851\n12.3750  9.2917    9851\n         9.3750    9851\n         9.4583    9851\n         9.5417    9851\n12.4583  9.2083    9851\n         9.2917    9851\n         9.3750    9851\n12.5417  9.2083    9851\n         9.2917    9851\n12.6250  9.2083    9851\n         9.2917    9851\n         9.3750    9851\n12.7083  9.2917    9851\n         9.3750    9851\n12.7917  9.2917    9851\n         9.3750    9851\n         9.4583    9851\n12.8750  9.2917    9851\n         9.3750    9851\n12.9583  9.2917     366\n         9.3750     366\ndtype: int64\n\n\nDrop pixel that is missing\n\n\nCode\ndf_fs_combined = df_fs_combined[df_fs_combined[\"x\"] != 12.9583]\n\n\nDouble-check all pixels are there for all dates\n\n\nCode\ndf_fs_combined.groupby([\"x\", \"y\"]).size()\n\n\nx        y     \n11.4583  9.3750    9851\n         9.4583    9851\n11.5417  9.3750    9851\n         9.4583    9851\n11.6250  9.3750    9851\n         9.4583    9851\n         9.5417    9851\n11.7083  9.4583    9851\n         9.5417    9851\n11.7917  9.4583    9851\n         9.5417    9851\n11.8750  9.4583    9851\n         9.5417    9851\n11.9583  9.4583    9851\n         9.5417    9851\n12.0417  9.4583    9851\n         9.5417    9851\n12.1250  9.4583    9851\n         9.5417    9851\n12.2083  9.4583    9851\n         9.5417    9851\n12.2917  9.3750    9851\n         9.4583    9851\n         9.5417    9851\n12.3750  9.2917    9851\n         9.3750    9851\n         9.4583    9851\n         9.5417    9851\n12.4583  9.2083    9851\n         9.2917    9851\n         9.3750    9851\n12.5417  9.2083    9851\n         9.2917    9851\n12.6250  9.2083    9851\n         9.2917    9851\n         9.3750    9851\n12.7083  9.2917    9851\n         9.3750    9851\n12.7917  9.2917    9851\n         9.3750    9851\n         9.4583    9851\n12.8750  9.2917    9851\n         9.3750    9851\ndtype: int64\n\n\n\n\nCode\ndf_fs_combined.set_index([\"date\", \"y\", \"x\"]).to_xarray().sel(\n    date=\"2022-08-24\"\n)[\"SFED\"].plot()\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf_fs_combined.groupby([\"y\", \"x\"])[\"SFED\"].mean().to_xarray().plot()\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf_fs_combined.pivot(columns=[\"x\", \"y\"], index=\"date\").corr()\n\n\n\n\n\n\n\n\n\n\n\nSFED\n\n\n\n\nx\n11.6250\n11.7083\n11.7917\n11.8750\n11.9583\n12.0417\n12.1250\n12.2083\n12.2917\n12.3750\n12.4583\n12.5417\n12.6250\n12.7083\n12.7917\n12.8750\n12.4583\n12.5417\n12.6250\n\n\n\n\ny\n9.5417\n9.5417\n9.5417\n9.5417\n9.5417\n9.5417\n9.5417\n9.5417\n9.5417\n9.5417\n...\n9.2917\n9.2917\n9.2917\n9.2917\n9.2917\n9.2917\n9.2917\n9.2083\n9.2083\n9.2083\n\n\n\nx\ny\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFED\n11.6250\n9.5417\n1.000000\n0.907939\n0.800782\n0.786760\n0.737584\n0.750902\n0.746436\n0.756236\n0.761780\n0.589573\n...\n0.500673\n0.684214\n0.673469\n0.621803\n0.656830\n0.581316\n0.589262\n0.612775\n0.632849\n0.512426\n\n\n11.7083\n9.5417\n0.907939\n1.000000\n0.869257\n0.796112\n0.742633\n0.763790\n0.757247\n0.754780\n0.738635\n0.507407\n...\n0.526926\n0.713994\n0.680186\n0.661615\n0.713994\n0.632061\n0.654141\n0.614222\n0.657999\n0.534248\n\n\n11.7917\n9.5417\n0.800782\n0.869257\n1.000000\n0.865900\n0.789883\n0.793901\n0.757874\n0.757435\n0.729744\n0.505960\n...\n0.560624\n0.694437\n0.672795\n0.653434\n0.693137\n0.669934\n0.677255\n0.571182\n0.661546\n0.557758\n\n\n11.8750\n9.5417\n0.786760\n0.796112\n0.865900\n1.000000\n0.875718\n0.812298\n0.728240\n0.727231\n0.713988\n0.531709\n...\n0.533701\n0.662459\n0.649654\n0.609413\n0.632200\n0.608762\n0.616065\n0.549834\n0.620652\n0.540054\n\n\n11.9583\n9.5417\n0.737584\n0.742633\n0.789883\n0.875718\n1.000000\n0.843436\n0.746890\n0.736476\n0.718504\n0.553565\n...\n0.504556\n0.657493\n0.651501\n0.628477\n0.644789\n0.619680\n0.634011\n0.543941\n0.617018\n0.573205\n\n\n12.0417\n9.5417\n0.750902\n0.763790\n0.793901\n0.812298\n0.843436\n1.000000\n0.808198\n0.752451\n0.730787\n0.509542\n...\n0.529151\n0.691616\n0.664491\n0.685078\n0.705756\n0.666175\n0.675733\n0.594852\n0.656528\n0.609865\n\n\n12.1250\n9.5417\n0.746436\n0.757247\n0.757874\n0.728240\n0.746890\n0.808198\n1.000000\n0.907169\n0.866977\n0.558005\n...\n0.563188\n0.805963\n0.793299\n0.807180\n0.810018\n0.714969\n0.709680\n0.636742\n0.782686\n0.694755\n\n\n12.2083\n9.5417\n0.756236\n0.754780\n0.757435\n0.727231\n0.736476\n0.752451\n0.907169\n1.000000\n0.946203\n0.653788\n...\n0.594056\n0.847182\n0.862387\n0.809830\n0.803814\n0.720087\n0.707361\n0.664372\n0.824247\n0.697405\n\n\n12.2917\n9.5417\n0.761780\n0.738635\n0.729744\n0.713988\n0.718504\n0.730787\n0.866977\n0.946203\n1.000000\n0.724597\n...\n0.619042\n0.848737\n0.864222\n0.775472\n0.782820\n0.700724\n0.678754\n0.711291\n0.815156\n0.689348\n\n\n12.3750\n9.5417\n0.589573\n0.507407\n0.505960\n0.531709\n0.553565\n0.509542\n0.558005\n0.653788\n0.724597\n1.000000\n...\n0.364673\n0.533751\n0.609734\n0.426998\n0.455797\n0.435314\n0.422213\n0.460631\n0.474458\n0.434954\n\n\n11.4583\n9.4583\n0.508884\n0.461007\n0.394508\n0.419438\n0.399672\n0.391625\n0.279655\n0.290742\n0.315149\n0.269593\n...\n0.240104\n0.298795\n0.259488\n0.256629\n0.295126\n0.268027\n0.274076\n0.351558\n0.235416\n0.217384\n\n\n11.5417\n9.4583\n0.785127\n0.851794\n0.806077\n0.742023\n0.738742\n0.787140\n0.780624\n0.760325\n0.720372\n0.455435\n...\n0.515956\n0.709285\n0.665120\n0.715236\n0.752680\n0.672669\n0.707917\n0.604595\n0.663982\n0.589197\n\n\n11.6250\n9.4583\n0.850053\n0.881165\n0.861795\n0.806987\n0.791456\n0.816047\n0.825430\n0.821228\n0.790094\n0.542010\n...\n0.543775\n0.747595\n0.722237\n0.725356\n0.765146\n0.690786\n0.716334\n0.640344\n0.713527\n0.620210\n\n\n11.7083\n9.4583\n0.851039\n0.900507\n0.871875\n0.817338\n0.785291\n0.792138\n0.808200\n0.820248\n0.794440\n0.533432\n...\n0.555738\n0.746377\n0.728858\n0.696574\n0.739471\n0.678414\n0.694606\n0.637322\n0.714974\n0.601957\n\n\n11.7917\n9.4583\n0.758885\n0.814998\n0.832246\n0.761591\n0.757778\n0.765931\n0.825520\n0.834650\n0.794081\n0.482159\n...\n0.548693\n0.757332\n0.728142\n0.736772\n0.761108\n0.684157\n0.692603\n0.626444\n0.736285\n0.637445\n\n\n11.8750\n9.4583\n0.767728\n0.756873\n0.764687\n0.765195\n0.768421\n0.743757\n0.819172\n0.846600\n0.822553\n0.597474\n...\n0.516060\n0.738938\n0.744770\n0.688458\n0.701079\n0.646851\n0.638128\n0.614466\n0.714257\n0.632081\n\n\n11.9583\n9.4583\n0.731165\n0.770004\n0.779257\n0.743916\n0.762401\n0.800476\n0.870460\n0.849634\n0.792993\n0.461833\n...\n0.549882\n0.777545\n0.732424\n0.774830\n0.773576\n0.688732\n0.693297\n0.627703\n0.746060\n0.670139\n\n\n12.0417\n9.4583\n0.751992\n0.778046\n0.774555\n0.738851\n0.759195\n0.826031\n0.902414\n0.881655\n0.833867\n0.495123\n...\n0.581297\n0.803415\n0.765383\n0.802264\n0.804790\n0.725399\n0.715220\n0.668232\n0.778634\n0.687931\n\n\n12.1250\n9.4583\n0.690798\n0.726216\n0.778411\n0.736172\n0.724042\n0.767437\n0.864198\n0.853407\n0.819030\n0.475728\n...\n0.646220\n0.793408\n0.750187\n0.778103\n0.798628\n0.752399\n0.717331\n0.656136\n0.779609\n0.671336\n\n\n12.2083\n9.4583\n0.661357\n0.703922\n0.761562\n0.712873\n0.708039\n0.742134\n0.826739\n0.864871\n0.818183\n0.476204\n...\n0.655080\n0.804649\n0.762002\n0.788806\n0.800835\n0.782938\n0.749694\n0.656500\n0.785557\n0.680267\n\n\n12.2917\n9.4583\n0.668738\n0.682731\n0.732567\n0.709055\n0.703651\n0.733206\n0.808663\n0.847476\n0.871390\n0.575136\n...\n0.685022\n0.808436\n0.788930\n0.761157\n0.779362\n0.771642\n0.733609\n0.685875\n0.784689\n0.694967\n\n\n12.3750\n9.4583\n0.566127\n0.587806\n0.649495\n0.637816\n0.619800\n0.649002\n0.675950\n0.720837\n0.722122\n0.469373\n...\n0.677794\n0.719182\n0.674230\n0.672030\n0.683227\n0.730061\n0.671837\n0.604233\n0.694277\n0.612808\n\n\n12.7917\n9.4583\n0.447383\n0.464773\n0.424829\n0.420439\n0.443045\n0.492781\n0.487157\n0.484905\n0.510660\n0.304101\n...\n0.430359\n0.549424\n0.477465\n0.546918\n0.619289\n0.521047\n0.532383\n0.526526\n0.486081\n0.480069\n\n\n11.4583\n9.3750\n0.812322\n0.836153\n0.813181\n0.777115\n0.776988\n0.800456\n0.824285\n0.816683\n0.785781\n0.537479\n...\n0.536746\n0.747536\n0.723278\n0.749699\n0.781103\n0.704724\n0.730321\n0.627340\n0.704311\n0.641810\n\n\n11.5417\n9.3750\n0.796919\n0.856906\n0.822487\n0.767548\n0.758579\n0.809058\n0.837175\n0.810877\n0.766804\n0.457474\n...\n0.544355\n0.754313\n0.713931\n0.760250\n0.792926\n0.702119\n0.738634\n0.632601\n0.721913\n0.638479\n\n\n11.6250\n9.3750\n0.785957\n0.813345\n0.799015\n0.763877\n0.771193\n0.776632\n0.793018\n0.791229\n0.763922\n0.510904\n...\n0.519127\n0.724628\n0.699964\n0.702253\n0.729965\n0.656257\n0.686260\n0.625481\n0.694335\n0.613149\n\n\n12.2917\n9.3750\n0.343142\n0.362449\n0.428621\n0.457917\n0.468178\n0.444588\n0.409944\n0.421789\n0.425720\n0.297365\n...\n0.475530\n0.441437\n0.412207\n0.434038\n0.449157\n0.524850\n0.521356\n0.406583\n0.427450\n0.438991\n\n\n12.3750\n9.3750\n0.620744\n0.647387\n0.696987\n0.666864\n0.634420\n0.654629\n0.719441\n0.770154\n0.785226\n0.483368\n...\n0.785350\n0.803097\n0.754137\n0.709053\n0.740607\n0.763114\n0.705565\n0.685524\n0.783241\n0.636156\n\n\n12.4583\n9.3750\n0.654650\n0.654359\n0.628390\n0.608534\n0.597562\n0.626810\n0.734248\n0.778857\n0.805889\n0.569971\n...\n0.694280\n0.851678\n0.773636\n0.712599\n0.732265\n0.648544\n0.619482\n0.719125\n0.764704\n0.609863\n\n\n12.6250\n9.3750\n0.593221\n0.596721\n0.576631\n0.558577\n0.550397\n0.597725\n0.610900\n0.658526\n0.707844\n0.454518\n...\n0.554720\n0.735158\n0.665001\n0.641136\n0.684809\n0.615735\n0.588250\n0.730995\n0.644428\n0.537605\n\n\n12.7083\n9.3750\n0.731118\n0.743927\n0.712794\n0.679254\n0.690116\n0.720762\n0.820743\n0.851329\n0.867860\n0.628061\n...\n0.618769\n0.847774\n0.829456\n0.816834\n0.914185\n0.781328\n0.758227\n0.774466\n0.798716\n0.702512\n\n\n12.7917\n9.3750\n0.583237\n0.637727\n0.671261\n0.618272\n0.630234\n0.680446\n0.722695\n0.725844\n0.703778\n0.431390\n...\n0.683378\n0.746894\n0.698784\n0.761827\n0.811163\n0.946315\n0.888455\n0.636648\n0.723835\n0.689889\n\n\n12.8750\n9.3750\n0.624497\n0.655145\n0.681694\n0.649088\n0.669763\n0.699746\n0.723650\n0.743529\n0.740938\n0.533826\n...\n0.656857\n0.748275\n0.722103\n0.740954\n0.792982\n0.867285\n0.887757\n0.659581\n0.715871\n0.681188\n\n\n12.3750\n9.2917\n0.500673\n0.526926\n0.560624\n0.533701\n0.504556\n0.529151\n0.563188\n0.594056\n0.619042\n0.364673\n...\n1.000000\n0.740020\n0.603827\n0.603374\n0.617610\n0.680949\n0.614147\n0.635343\n0.660226\n0.531667\n\n\n12.4583\n9.2917\n0.684214\n0.713994\n0.694437\n0.662459\n0.657493\n0.691616\n0.805963\n0.847182\n0.848737\n0.533751\n...\n0.740020\n1.000000\n0.876943\n0.817901\n0.823806\n0.739723\n0.716635\n0.775477\n0.833421\n0.692047\n\n\n12.5417\n9.2917\n0.673469\n0.680186\n0.672795\n0.649654\n0.651501\n0.664491\n0.793299\n0.862387\n0.864222\n0.609734\n...\n0.603827\n0.876943\n1.000000\n0.753848\n0.764550\n0.690535\n0.685085\n0.710256\n0.888792\n0.660766\n\n\n12.6250\n9.2917\n0.621803\n0.661615\n0.653434\n0.609413\n0.628477\n0.685078\n0.807180\n0.809830\n0.775472\n0.426998\n...\n0.603374\n0.817901\n0.753848\n1.000000\n0.861387\n0.758877\n0.747856\n0.688633\n0.803177\n0.793600\n\n\n12.7083\n9.2917\n0.656830\n0.713994\n0.693137\n0.632200\n0.644789\n0.705756\n0.810018\n0.803814\n0.782820\n0.455797\n...\n0.617610\n0.823806\n0.764550\n0.861387\n1.000000\n0.835271\n0.817518\n0.735533\n0.788451\n0.714136\n\n\n12.7917\n9.2917\n0.581316\n0.632061\n0.669934\n0.608762\n0.619680\n0.666175\n0.714969\n0.720087\n0.700724\n0.435314\n...\n0.680949\n0.739723\n0.690535\n0.758877\n0.835271\n1.000000\n0.904223\n0.657066\n0.728414\n0.698923\n\n\n12.8750\n9.2917\n0.589262\n0.654141\n0.677255\n0.616065\n0.634011\n0.675733\n0.709680\n0.707361\n0.678754\n0.422213\n...\n0.614147\n0.716635\n0.685085\n0.747856\n0.817518\n0.904223\n1.000000\n0.620263\n0.704125\n0.682144\n\n\n12.4583\n9.2083\n0.612775\n0.614222\n0.571182\n0.549834\n0.543941\n0.594852\n0.636742\n0.664372\n0.711291\n0.460631\n...\n0.635343\n0.775477\n0.710256\n0.688633\n0.735533\n0.657066\n0.620263\n1.000000\n0.733065\n0.585845\n\n\n12.5417\n9.2083\n0.632849\n0.657999\n0.661546\n0.620652\n0.617018\n0.656528\n0.782686\n0.824247\n0.815156\n0.474458\n...\n0.660226\n0.833421\n0.888792\n0.803177\n0.788451\n0.728414\n0.704125\n0.733065\n1.000000\n0.725033\n\n\n12.6250\n9.2083\n0.512426\n0.534248\n0.557758\n0.540054\n0.573205\n0.609865\n0.694755\n0.697405\n0.689348\n0.434954\n...\n0.531667\n0.692047\n0.660766\n0.793600\n0.714136\n0.698923\n0.682144\n0.585845\n0.725033\n1.000000\n\n\n\n\n43 rows × 43 columns\n\n\n\n\n\nCode\ndf_fs_combined.dtypes\n\n\ny              float64\nx              float64\ndate    datetime64[ns]\nSFED           float32\ndtype: object",
    "crumbs": [
      "Floodscan processing",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Floodscan pixels</span>"
    ]
  },
  {
    "objectID": "exploration/2025/fs_pixels.html#write-to-blob",
    "href": "exploration/2025/fs_pixels.html#write-to-blob",
    "title": "10  Floodscan pixels",
    "section": "10.2 Write to blob",
    "text": "10.2 Write to blob\n\n\nCode\nimport src.constants\n\nblob_name = f\"{src.constants.PROJECT_PREFIX}/processed/floodscan/fs_benue_pixels_1998_2024.parquet\"\n\n\n\n\nCode\nblob_name\n\n\n'ds-aa-nga-flooding/processed/floodscan/fs_benue_pixels_1998_2024.parquet'\n\n\n\n\nCode\nstratus.upload_parquet_to_blob(df_fs_combined, blob_name)",
    "crumbs": [
      "Floodscan processing",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Floodscan pixels</span>"
    ]
  },
  {
    "objectID": "exploration/2025/floodscan_verify.html",
    "href": "exploration/2025/floodscan_verify.html",
    "title": "11  Verifying Floodscan data with NiHSA observations",
    "section": "",
    "text": "How well does our Floodscan data line up with the NiHSA observations?\n\n\nCode\n%load_ext jupyter_black\n%load_ext autoreload\n%autoreload 2\n\n\n\n                \n                \n\n\n\n\nCode\nimport pandas as pd\nimport ocha_stratus as stratus\nfrom src.constants import *\nfrom src.datasources import nihsa\nimport matplotlib.pyplot as plt\nfrom matplotlib.dates import DateFormatter\nimport numpy as np\n\nSAPPHIRE = \"#007ce0\"\nTOMATO = \"#f2645a\"\nTOMATO_DARK = \"#c25048\"\nTOMATO_LIGHT = \"#f7a29c\"\nMINT = \"#1ebfb3\"\nGREY_DARK = \"#888888\"\nGREY_LIGHT = \"#cccccc\"\n\n\n\n\nCode\nblob_name = (\n    f\"{PROJECT_PREFIX}/processed/floodscan/fs_benue_pixels_1998_2024.parquet\"\n)\ndf_fs_pixels = stratus.load_parquet_from_blob(blob_name)\n\n\n\n\nCode\ndf_nihsa = nihsa.load_wuroboki().rename(columns={\"time\": \"date\"})\n\n\n\n\nCode\ndf_nihsa\n\n\n\n\n\n\n\n\n\ndate\nlevel\n\n\n\n\n2\n1954-05-25\n398.0\n\n\n3\n1954-05-26\n383.0\n\n\n4\n1954-05-27\n389.0\n\n\n5\n1954-05-28\n408.0\n\n\n6\n1954-05-29\n404.0\n\n\n...\n...\n...\n\n\n27234\n2024-12-27\n458.0\n\n\n27235\n2024-12-28\n455.0\n\n\n27236\n2024-12-29\n451.0\n\n\n27237\n2024-12-30\n457.0\n\n\n27238\n2024-12-31\n457.0\n\n\n\n\n26646 rows × 2 columns\n\n\n\n\n\nCode\ndf_fs_mean = df_fs_pixels.groupby(\"date\")[[\"SFED\"]].mean().reset_index()\n\n\n\n\nCode\ndf_merged = df_fs_mean.merge(df_nihsa)\ndf_merged[\"year\"] = df_merged[\"date\"].dt.year\n\n\n\n\nCode\ndf_merged_complete = df_merged[\n    df_merged.year.isin(nihsa.WUROBOKI_COMPLETE_YEARS)\n]\n\n\n\n\nCode\ndf_merged_complete.corr()\n\n\n\n\n\n\n\n\n\ndate\nSFED\nlevel\nyear\n\n\n\n\ndate\n1.000000\n0.185615\n0.457062\n0.999020\n\n\nSFED\n0.185615\n1.000000\n0.611997\n0.172143\n\n\nlevel\n0.457062\n0.611997\n1.000000\n0.437714\n\n\nyear\n0.999020\n0.172143\n0.437714\n1.000000\n\n\n\n\n\n\n\n\n\nCode\ndf_peaks_fs = (\n    df_merged_complete.groupby(\"year\")\n    .agg(\n        sfed_max=(\"SFED\", \"max\"),\n        sfed_max_date=(\n            \"SFED\",\n            lambda x: df_merged_complete.loc[x.idxmax(), \"date\"],\n        ),\n    )\n    .reset_index()\n)\n\ndf_peaks_nihsa = (\n    df_merged_complete.groupby(\"year\")\n    .agg(\n        level_max=(\"level\", \"max\"),\n        level_max_date=(\n            \"level\",\n            lambda x: df_merged_complete.loc[x.idxmax(), \"date\"],\n        ),\n    )\n    .reset_index()\n)\n\nrp = 3\nrp_fs = df_peaks_fs[\"sfed_max\"].quantile(1 - 1 / rp)\nrp_nihsa = df_peaks_nihsa[\"level_max\"].quantile(1 - 1 / rp)\n\n\n\n\nCode\ndef get_continuous_periods(mask):\n    \"\"\"Returns list of (start_idx, end_idx) tuples for continuous True periods in mask\"\"\"\n    if not any(mask):\n        return []\n\n    mask_array = np.array(mask)\n    result = []\n\n    start_idx = None\n    for i, val in enumerate(mask_array):\n        if val and start_idx is None:  # Start of a run\n            start_idx = i\n        elif not val and start_idx is not None:  # End of a run\n            result.append((start_idx, i - 1))\n            start_idx = None\n\n    # Handle case where the last run extends to the end\n    if start_idx is not None:\n        result.append((start_idx, len(mask_array) - 1))\n\n    return result\n\n\n\n\nCode\nn_years = df_merged_complete[\"year\"].nunique()\nncols = 4\nnrows = round(n_years / ncols)\n\nfig, axes = plt.subplots(\n    nrows=nrows, ncols=ncols, figsize=(ncols * 5, nrows * 3)\n)\naxes = axes.flatten()\nyear_correlations = {}\n\nfor j, year in enumerate(df_merged_complete[\"year\"].unique()):\n    dff = df_merged_complete[df_merged_complete[\"date\"].dt.year == year]\n    ax = axes[j]\n    ax2 = ax.twinx()\n\n    ax.plot(dff[\"date\"], dff[\"level\"], c=SAPPHIRE)\n    ax2.plot(dff[\"date\"], dff[\"SFED\"], c=TOMATO)\n\n    axes[j].xaxis.set_major_formatter(DateFormatter(\"%m-%d\"))\n\n    # Color y-axis labels and ticks\n    ax.tick_params(axis=\"y\", colors=SAPPHIRE, labelsize=8)\n    ax2.tick_params(axis=\"y\", colors=TOMATO, labelsize=8)\n\n    # Make x-axis font smaller\n    ax.tick_params(axis=\"x\", labelsize=8)\n\n    # Highlight streamflow exceedances\n    mask = dff[\"level\"] &gt; rp_nihsa\n    for start_idx, end_idx in get_continuous_periods(mask):\n        ax.axvspan(\n            dff[\"date\"].iloc[start_idx],\n            dff[\"date\"].iloc[end_idx],\n            alpha=0.1,\n            color=SAPPHIRE,\n        )\n\n    # Highlight SFED exceedances\n    mask = dff[\"SFED\"] &gt; rp_fs\n    for start_idx, end_idx in get_continuous_periods(mask):\n        ax2.axvspan(\n            dff[\"date\"].iloc[start_idx],\n            dff[\"date\"].iloc[end_idx],\n            alpha=0.2,\n            color=TOMATO,\n        )\n    ax.axhline(rp_nihsa, lw=1, c=SAPPHIRE, linestyle=\"--\")\n    ax2.axhline(rp_fs, lw=1, c=TOMATO, linestyle=\"--\")\n    ax.set_title(year)\n\n    pearson_r = dff[\"level\"].corr(dff[\"SFED\"], method=\"pearson\")\n    spearman_r = dff[\"level\"].corr(dff[\"SFED\"], method=\"spearman\")\n\n    year_correlations[year] = {\n        \"pearson_r\": pearson_r,\n        \"spearman_r\": spearman_r,\n    }\n    if pearson_r &lt; 0.5 and spearman_r &lt; 0.5:\n        bbox_col = \"#ffa694\"  # Roughly which ones have bad relationship\n    else:\n        bbox_col = \"white\"\n\n    ax.text(\n        0.05,\n        0.95,\n        f\"Pearson r: {pearson_r:.2f}\\nSpearman r: {spearman_r:.2f}\",\n        transform=ax.transAxes,\n        verticalalignment=\"top\",\n        bbox=dict(boxstyle=\"round\", facecolor=bbox_col),\n    )\n\n# Add more spacing to avoid overlap\nplt.tight_layout(h_pad=2.0, w_pad=1.0, pad=3.0)",
    "crumbs": [
      "Floodscan processing",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Verifying Floodscan data with NiHSA observations</span>"
    ]
  },
  {
    "objectID": "exploration/2025/combined_gf_grrr_reanalysis.html",
    "href": "exploration/2025/combined_gf_grrr_reanalysis.html",
    "title": "12  Combined Google-GloFAS trigger - reanalysis",
    "section": "",
    "text": "12.1 Load data\nDetermine best balance of Google and GloFAS forecasts to maximize accuracy and leadtime.\nFor simplicity, just doing now with reanalysis. Later notebooks use the reanalysis-based thresholds and see how many leadtimes we can add before the accuracy drops off.",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Combined Google-GloFAS trigger - reanalysis</span>"
    ]
  },
  {
    "objectID": "exploration/2025/combined_gf_grrr_reanalysis.html#load-data",
    "href": "exploration/2025/combined_gf_grrr_reanalysis.html#load-data",
    "title": "12  Combined Google-GloFAS trigger - reanalysis",
    "section": "",
    "text": "12.1.1 GloFAS\n\n\nCode\ndf_gf = glofas.load_glofas_reanalysis(station_name=\"wuroboki\")\n\n\n\n\nCode\ndf_gf = df_gf.rename(columns={\"time\": \"valid_time\"})\n\n\n\n\n12.1.2 Floodscan\n\n\nCode\ndf_fs_raw = stratus.load_parquet_from_blob(\n    f\"{PROJECT_PREFIX}/processed/floodscan/fs_benue_pixels_1998_2024.parquet\"\n)\ndf_fs = (\n    df_fs_raw.groupby(\"date\")[\"SFED\"]\n    .mean()\n    .reset_index()\n    .rename(columns={\"date\": \"valid_time\"})\n)\n\n\n\n\n12.1.3 Google\n\n\nCode\nds_ra = grrr.load_reanalysis()\ndf_grrr = grrr.process_reanalysis(ds_ra)",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Combined Google-GloFAS trigger - reanalysis</span>"
    ]
  },
  {
    "objectID": "exploration/2025/combined_gf_grrr_reanalysis.html#process",
    "href": "exploration/2025/combined_gf_grrr_reanalysis.html#process",
    "title": "12  Combined Google-GloFAS trigger - reanalysis",
    "section": "12.2 Process",
    "text": "12.2 Process\n\n\nCode\ndf_compare = df_gf.merge(df_fs).merge(df_grrr)\n\n\n\n\nCode\ndf_compare[\"year\"] = df_compare[\"valid_time\"].dt.year\n\n\n\n\nCode\ndf_yearly_max = (\n    df_compare.groupby(\"year\").max().drop(columns=[\"valid_time\"]).reset_index()\n)\n\n\nDetermine dates of peak for each indicator.\n\n\nCode\nfor col in [\"dis24\", \"SFED\", \"streamflow\"]:\n    df_yearly_max[f\"{col}_maxdate\"] = df_compare.loc[\n        df_compare.groupby(\"year\").idxmax()[col]\n    ][\"valid_time\"].values\n\n\nLeadtime between peaks.\n\n\nCode\nfor col in [\"dis24\", \"streamflow\"]:\n    df_yearly_max[f\"{col}_peak_leadtime\"] = (\n        df_yearly_max[\"SFED_maxdate\"] - df_yearly_max[f\"{col}_maxdate\"]\n    )\n\n\nReturn periods.\n\n\nCode\nfor col in [\"dis24\", \"SFED\", \"streamflow\"]:\n    df_yearly_max = rp_calc.calculate_one_group_rp(\n        df_yearly_max, col_name=col, ascending=False\n    )\n\n\nSet whether to target each year, depending on return period severity.\nThis is admittedly not the best way to do this (would be easier filtering by ranks later), but will leave it for now because the rest of the code was already set up for this format.\n\n\nCode\nrp_targets = [3, 4, 5]\n\n\n\n\nCode\nfor rp_target in rp_targets:\n    df_yearly_max[f\"{rp_target}yr_target\"] = (\n        df_yearly_max[\"SFED_rp\"] &gt;= rp_target\n    )\n\n\n\n\nCode\ndf_yearly_max\n\n\n\n\n\n\n\n\n\nyear\ndis24\nSFED\nstreamflow\ndis24_maxdate\nSFED_maxdate\nstreamflow_maxdate\ndis24_peak_leadtime\nstreamflow_peak_leadtime\ndis24_rank\ndis24_rp\nSFED_rank\nSFED_rp\nstreamflow_rank\nstreamflow_rp\n3yr_target\n4yr_target\n5yr_target\n\n\n\n\n0\n1998\n4300.250000\n0.142014\n1328.853149\n1998-09-03\n1998-09-29\n1998-10-06\n26 days\n-7 days\n3\n9.000000\n9\n3.000000\n4\n6.750000\nTrue\nFalse\nFalse\n\n\n1\n1999\n5244.656250\n0.192214\n1545.005493\n1999-09-11\n1999-10-21\n1999-10-17\n40 days\n4 days\n2\n13.500000\n5\n5.400000\n2\n13.500000\nTrue\nTrue\nTrue\n\n\n2\n2000\n2863.234375\n0.112231\n762.573181\n2000-09-07\n2000-09-02\n2000-10-06\n-5 days\n-34 days\n8\n3.375000\n14\n1.928571\n24\n1.125000\nFalse\nFalse\nFalse\n\n\n3\n2001\n2399.468750\n0.061692\n1064.437988\n2001-09-20\n2001-09-17\n2001-10-04\n-3 days\n-17 days\n13\n2.076923\n25\n1.080000\n8\n3.375000\nFalse\nFalse\nFalse\n\n\n4\n2002\n1854.218750\n0.093438\n956.879333\n2002-09-19\n2002-09-24\n2002-09-16\n5 days\n8 days\n22\n1.227273\n18\n1.500000\n11\n2.454545\nFalse\nFalse\nFalse\n\n\n5\n2003\n3312.015625\n0.151862\n953.153015\n2003-09-19\n2003-09-21\n2003-09-30\n2 days\n-9 days\n4\n6.750000\n7\n3.857143\n12\n2.250000\nTrue\nFalse\nFalse\n\n\n6\n2004\n1856.578125\n0.035491\n801.753296\n2004-09-07\n2004-09-11\n2004-09-26\n4 days\n-15 days\n21\n1.285714\n26\n1.038462\n20\n1.350000\nFalse\nFalse\nFalse\n\n\n7\n2005\n2077.328125\n0.082421\n903.818298\n2005-08-15\n2005-08-23\n2005-10-07\n8 days\n-45 days\n19\n1.421053\n23\n1.173913\n15\n1.800000\nFalse\nFalse\nFalse\n\n\n8\n2006\n1733.757812\n0.113096\n847.273560\n2006-09-23\n2006-09-16\n2006-09-17\n-7 days\n-1 days\n23\n1.173913\n13\n2.076923\n18\n1.500000\nFalse\nFalse\nFalse\n\n\n9\n2007\n2235.781250\n0.103586\n836.369751\n2007-09-22\n2007-09-12\n2007-09-11\n-10 days\n1 days\n17\n1.588235\n15\n1.800000\n19\n1.421053\nFalse\nFalse\nFalse\n\n\n10\n2008\n2627.976562\n0.083352\n1063.593872\n2008-08-27\n2008-06-28\n2008-10-03\n-60 days\n-97 days\n9\n3.000000\n22\n1.227273\n9\n3.000000\nFalse\nFalse\nFalse\n\n\n11\n2009\n2169.906250\n0.103484\n766.465027\n2009-09-05\n2009-09-08\n2009-09-10\n3 days\n-2 days\n18\n1.500000\n16\n1.687500\n23\n1.173913\nFalse\nFalse\nFalse\n\n\n12\n2010\n3109.257812\n0.115183\n1100.995361\n2010-09-07\n2010-09-10\n2010-10-01\n3 days\n-21 days\n6\n4.500000\n12\n2.250000\n7\n3.857143\nFalse\nFalse\nFalse\n\n\n13\n2011\n2461.625000\n0.080652\n778.979004\n2011-09-14\n2011-09-21\n2011-10-18\n7 days\n-27 days\n11\n2.454545\n24\n1.125000\n21\n1.285714\nFalse\nFalse\nFalse\n\n\n14\n2012\n3110.078125\n0.286909\n1394.855469\n2012-08-21\n2012-09-21\n2012-09-23\n31 days\n-2 days\n5\n5.400000\n1\n27.000000\n3\n9.000000\nTrue\nTrue\nTrue\n\n\n15\n2013\n1611.937500\n0.092912\n775.987488\n2013-08-28\n2013-09-02\n2013-09-07\n5 days\n-5 days\n25\n1.080000\n19\n1.421053\n22\n1.227273\nFalse\nFalse\nFalse\n\n\n16\n2014\n2918.125000\n0.100249\n926.234802\n2014-08-23\n2014-08-31\n2014-10-06\n8 days\n-36 days\n7\n3.857143\n17\n1.588235\n14\n1.928571\nFalse\nFalse\nFalse\n\n\n17\n2015\n1563.804688\n0.206910\n738.006592\n2015-09-20\n2015-09-05\n2015-10-12\n-15 days\n-37 days\n26\n1.038462\n3\n9.000000\n25\n1.080000\nTrue\nTrue\nTrue\n\n\n18\n2016\n2364.773438\n0.118837\n969.453369\n2016-09-22\n2016-09-25\n2016-10-09\n3 days\n-14 days\n15\n1.800000\n11\n2.454545\n10\n2.700000\nFalse\nFalse\nFalse\n\n\n19\n2017\n1717.898438\n0.088970\n952.680115\n2017-08-22\n2017-08-19\n2017-09-26\n-3 days\n-38 days\n24\n1.125000\n20\n1.350000\n13\n2.076923\nFalse\nFalse\nFalse\n\n\n20\n2018\n2547.906250\n0.165637\n1157.043457\n2018-09-28\n2018-09-12\n2018-09-16\n-16 days\n-4 days\n10\n2.700000\n6\n4.500000\n6\n4.500000\nTrue\nTrue\nFalse\n\n\n21\n2019\n2440.054688\n0.147553\n1212.237061\n2019-10-11\n2019-10-30\n2019-10-27\n19 days\n3 days\n12\n2.250000\n8\n3.375000\n5\n5.400000\nTrue\nFalse\nFalse\n\n\n22\n2020\n1946.828125\n0.087079\n901.907959\n2020-09-30\n2020-10-05\n2020-10-05\n5 days\n0 days\n20\n1.350000\n21\n1.285714\n16\n1.687500\nFalse\nFalse\nFalse\n\n\n23\n2021\n2253.296875\n0.134848\n676.297546\n2021-07-09\n2021-08-29\n2021-09-05\n51 days\n-7 days\n16\n1.687500\n10\n2.700000\n26\n1.038462\nFalse\nFalse\nFalse\n\n\n24\n2022\n5347.171875\n0.269161\n1793.780396\n2022-08-19\n2022-09-21\n2022-09-24\n33 days\n-3 days\n1\n27.000000\n2\n13.500000\n1\n27.000000\nTrue\nTrue\nTrue\n\n\n25\n2023\n2379.328125\n0.203958\n900.323486\n2023-08-26\n2023-10-09\n2023-10-07\n44 days\n2 days\n14\n1.928571\n4\n6.750000\n17\n1.588235\nTrue\nTrue\nTrue\n\n\n\n\n\n\n\nQuick comparing peak leadtimes. As expected GloFAS is quite early.\n\n\nCode\ndf_yearly_max.set_index(\"year\")[\n    [f\"{x}_peak_leadtime\" for x in [\"dis24\", \"streamflow\"]]\n].plot()\n\n\n\n\n\n\n\n\n\nCheck against severity of flooding. Slight positive relationship? Which is good, because this means that the more severe flooding is, the earlier we will be.\n\n\nCode\ndf_yearly_max.set_index(\"SFED\")[\n    [f\"{x}_peak_leadtime\" for x in [\"dis24\", \"streamflow\"]]\n].plot(marker=\".\", linewidth=0)\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf_in = pd.DataFrame(columns=[\"year\"])\n\nfor rp_target in rp_targets:\n    dicts = []\n    thresh_fs = df_yearly_max[df_yearly_max[f\"{rp_target}yr_target\"]][\n        \"SFED\"\n    ].min()\n    for year, group in df_fs.groupby(df_fs[\"valid_time\"].dt.year):\n        dff = group[group[\"SFED\"] &gt;= thresh_fs]\n        if not dff.empty:\n            dicts.append(\n                {\n                    \"year\": year,\n                    f\"SFED_{rp_target}yr_thresh_date\": dff[\"valid_time\"].min(),\n                }\n            )\n    df_in_rp = pd.DataFrame(dicts)\n    df_in = df_in.merge(df_in_rp, how=\"outer\")\n\n\ndf_yearly_max = df_yearly_max.merge(df_in, how=\"left\")\n\n\nClunky way to do this, but determining the first day that the target RP threshold would’ve been reached (i.e., the day our target flooding starts).\n\n\nCode\n# to avoid divide by zero warnings\nnp.seterr(divide=\"ignore\", invalid=\"ignore\")\n\n\n{'divide': 'warn', 'over': 'warn', 'under': 'ignore', 'invalid': 'warn'}\n\n\n\n12.2.1 Iterate\nIterate over all possible combinations of GloFAS and Google forecast thresholds. Also iterate over the target RPs.\n\n\nCode\ntotal_years = len(df_yearly_max)\nranks = range(total_years + 1)\n\ndicts = []\ndfs_yearly = []\n\nfor gf_rank in tqdm(ranks):\n    if gf_rank &gt; 0:\n        thresh_gf = df_yearly_max.set_index(\"dis24_rank\").loc[gf_rank][\"dis24\"]\n    else:\n        thresh_gf = np.inf\n    for gr_rank in ranks:\n        if gr_rank &gt; 0:\n            thresh_gr = df_yearly_max.set_index(\"streamflow_rank\").loc[\n                gr_rank\n            ][\"streamflow\"]\n        else:\n            thresh_gr = np.inf\n        dff = df_yearly_max[\n            (df_yearly_max[\"dis24_rank\"] &lt;= gf_rank)\n            | (df_yearly_max[\"streamflow_rank\"] &lt;= gr_rank)\n        ]\n        dff_daily = df_compare[\n            (df_compare[\"dis24\"] &gt;= thresh_gf)\n            | (df_compare[\"streamflow\"] &gt;= thresh_gr)\n        ]\n        pp_daily = dff_daily[\"year\"].nunique()\n        df_trig_dates = (\n            dff_daily.groupby(\"year\")[\"valid_time\"]\n            .min()\n            .reset_index()\n            .rename(columns={\"valid_time\": \"trig_date\"})\n        )\n        dff = dff.merge(df_trig_dates, how=\"left\")\n        for ind_name, thresh in zip(\n            [\"dis24\", \"streamflow\"], [thresh_gf, thresh_gr]\n        ):\n            dff_daily_ind = df_compare[df_compare[ind_name] &gt;= thresh]\n            df_trig_dates_ind = (\n                dff_daily_ind.groupby(\"year\")[\"valid_time\"]\n                .min()\n                .reset_index()\n                .rename(columns={\"valid_time\": f\"{ind_name}_trig_date\"})\n            )\n            dff = dff.merge(df_trig_dates_ind, how=\"left\")\n        dff[\"leadtime_peak\"] = dff[\"SFED_maxdate\"] - dff[\"trig_date\"]\n        for rp_target in rp_targets:\n            dff[f\"leadtime_{rp_target}yr_target\"] = (\n                dff[f\"SFED_{rp_target}yr_thresh_date\"] - dff[\"trig_date\"]\n            )\n\n            p = df_yearly_max[f\"{rp_target}yr_target\"].sum()\n            pp = len(dff)\n            # just double check that the two ways to calculate\n            # positives agree\n            assert pp_daily == pp\n            tp = dff[f\"{rp_target}yr_target\"].sum()\n            fp = pp - tp\n            tpr = tp / p\n            ppv = tp / (tp + fp)\n            f1 = 2 * ppv * tpr / (ppv + tpr)\n            dicts.append(\n                {\n                    \"rp_target\": rp_target,\n                    \"rp_gf\": np.divide((total_years + 1), gf_rank),\n                    \"rp_gr\": np.divide((total_years + 1), gr_rank),\n                    \"rp_combined\": np.divide((total_years + 1), pp),\n                    \"tpr\": tpr,\n                    \"lt\": dff[f\"leadtime_{rp_target}yr_target\"].mean(),\n                    \"f1\": f1,\n                    \"lt_peak\": dff[dff[f\"{rp_target}yr_target\"]][\n                        \"leadtime_peak\"\n                    ].mean(),\n                }\n            )\n        dff[\"rp_gf\"] = np.divide((total_years + 1), gf_rank)\n        dff[\"rp_gr\"] = np.divide((total_years + 1), gr_rank)\n        dfs_yearly.append(dff)\n\ndf_rps = pd.DataFrame(dicts)\n\ndf_rps\n\n\n\n\n\n\n\n\n\n\n\n\nrp_target\nrp_gf\nrp_gr\nrp_combined\ntpr\nlt\nf1\nlt_peak\n\n\n\n\n0\n3\ninf\ninf\ninf\n0.000000\nNaT\nNaN\nNaT\n\n\n1\n4\ninf\ninf\ninf\n0.000000\nNaT\nNaN\nNaT\n\n\n2\n5\ninf\ninf\ninf\n0.000000\nNaT\nNaN\nNaT\n\n\n3\n3\ninf\n27.000000\n27.000000\n0.111111\n-28 days +00:00:00\n0.200000\n-3 days +00:00:00\n\n\n4\n4\ninf\n27.000000\n27.000000\n0.166667\n-26 days +00:00:00\n0.285714\n-3 days +00:00:00\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2182\n4\n1.038462\n1.080000\n1.038462\n1.000000\n33 days 08:00:00\n0.375000\n42 days 20:00:00\n\n\n2183\n5\n1.038462\n1.080000\n1.038462\n1.000000\n38 days 14:24:00\n0.322581\n46 days 09:36:00\n\n\n2184\n3\n1.038462\n1.038462\n1.038462\n1.000000\n39 days 02:40:00\n0.514286\n49 days 16:00:00\n\n\n2185\n4\n1.038462\n1.038462\n1.038462\n1.000000\n34 days 00:00:00\n0.375000\n43 days 12:00:00\n\n\n2186\n5\n1.038462\n1.038462\n1.038462\n1.000000\n39 days 09:36:00\n0.322581\n47 days 04:48:00\n\n\n\n\n2187 rows × 8 columns\n\n\n\n\n\nCode\n# set this to grab values easily later\ndf_all_simulations = pd.concat(dfs_yearly, ignore_index=True)\n\n\n\n\nCode\n# set probabilities\nfor x in [\"gr\", \"gf\", \"combined\"]:\n    df_rps[f\"prob_{x}\"] = 1 / df_rps[f\"rp_{x}\"]\n\n\nCome up with a measure rel_prob_gr that represents the balance between Google and GloFAS. When it is 1, we always trigger with Google (never with GloFAS), and when it is -1, we always trigger with GloFAS (never with Google).\n\n\nCode\ndf_rps[\"rel_prob_gr\"] = (df_rps[\"prob_gr\"] - df_rps[\"prob_gf\"]) / df_rps[\n    \"prob_combined\"\n]\n\ndf_rps\n\n\n\n\n\n\n\n\n\nrp_target\nrp_gf\nrp_gr\nrp_combined\ntpr\nlt\nf1\nlt_peak\nprob_gr\nprob_gf\nprob_combined\nrel_prob_gr\n\n\n\n\n0\n3\ninf\ninf\ninf\n0.000000\nNaT\nNaN\nNaT\n0.000000\n0.000000\n0.000000\nNaN\n\n\n1\n4\ninf\ninf\ninf\n0.000000\nNaT\nNaN\nNaT\n0.000000\n0.000000\n0.000000\nNaN\n\n\n2\n5\ninf\ninf\ninf\n0.000000\nNaT\nNaN\nNaT\n0.000000\n0.000000\n0.000000\nNaN\n\n\n3\n3\ninf\n27.000000\n27.000000\n0.111111\n-28 days +00:00:00\n0.200000\n-3 days +00:00:00\n0.037037\n0.000000\n0.037037\n1.000000\n\n\n4\n4\ninf\n27.000000\n27.000000\n0.166667\n-26 days +00:00:00\n0.285714\n-3 days +00:00:00\n0.037037\n0.000000\n0.037037\n1.000000\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2182\n4\n1.038462\n1.080000\n1.038462\n1.000000\n33 days 08:00:00\n0.375000\n42 days 20:00:00\n0.925926\n0.962963\n0.962963\n-0.038462\n\n\n2183\n5\n1.038462\n1.080000\n1.038462\n1.000000\n38 days 14:24:00\n0.322581\n46 days 09:36:00\n0.925926\n0.962963\n0.962963\n-0.038462\n\n\n2184\n3\n1.038462\n1.038462\n1.038462\n1.000000\n39 days 02:40:00\n0.514286\n49 days 16:00:00\n0.962963\n0.962963\n0.962963\n0.000000\n\n\n2185\n4\n1.038462\n1.038462\n1.038462\n1.000000\n34 days 00:00:00\n0.375000\n43 days 12:00:00\n0.962963\n0.962963\n0.962963\n0.000000\n\n\n2186\n5\n1.038462\n1.038462\n1.038462\n1.000000\n39 days 09:36:00\n0.322581\n47 days 04:48:00\n0.962963\n0.962963\n0.962963\n0.000000\n\n\n\n\n2187 rows × 12 columns",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Combined Google-GloFAS trigger - reanalysis</span>"
    ]
  },
  {
    "objectID": "exploration/2025/combined_gf_grrr_reanalysis.html#plots",
    "href": "exploration/2025/combined_gf_grrr_reanalysis.html#plots",
    "title": "12  Combined Google-GloFAS trigger - reanalysis",
    "section": "12.3 Plots",
    "text": "12.3 Plots\n\n\nCode\ndef plot_metrics_rel_prob(\n    rp_target: int,\n    plot_metric: str,\n    peak_lt: bool = False,\n    max_plot_rp: int = 5,\n    min_plot_rp: int = 3,\n):\n    \"\"\"Plot accuracy metrics and leadtime for multiple overall RPs\"\"\"\n    lt_col = \"lt_peak\" if peak_lt else \"lt\"\n    df_plot = df_rps[\n        (df_rps[\"rp_combined\"] &lt;= max_plot_rp)\n        & (df_rps[\"rp_combined\"] &gt;= min_plot_rp)\n        & (df_rps[\"rp_target\"] == rp_target)\n    ]\n\n    fig, ax = plt.subplots(dpi=200, figsize=(7, 7))\n    ax2 = ax.twinx()\n\n    color_cycle = plt.rcParams[\"axes.prop_cycle\"].by_key()[\"color\"]\n\n    for i, (rp_combined, group) in enumerate(df_plot.groupby(\"rp_combined\")):\n        group = group.sort_values(\"rel_prob_gr\")\n        color = color_cycle[\n            i % len(color_cycle)\n        ]  # cycle through colors safely\n\n        ax.plot(\n            group[\"rel_prob_gr\"],\n            group[plot_metric],\n            label=f\"{rp_combined:.1f}\",\n            color=color,\n            linestyle=\"-\",\n        )\n        ax2.plot(\n            group[\"rel_prob_gr\"],\n            group[lt_col].dt.days,\n            color=color,\n            linestyle=\"--\",\n        )\n\n    # Only add legend for rp_combined once (from ax)\n    ax.legend(\n        title=\"Overall RP (years)\\nsolid: accuracy metric\\ndashed: leadtime\",\n        bbox_to_anchor=(1.1, 1),\n        loc=\"upper left\",\n    )\n    ax.axvline(0, color=\"lightgrey\", linewidth=0.5, linestyle=\"--\")\n\n    # Labels\n    ax.set_xlabel(\n        \"Relative probability of activating\\n\"\n        \"&lt;-- more likely with GloFAS              more likely with Google --&gt;\"\n    )\n    ax.set_ylabel(plot_metric.upper())\n    lt_label = \"peak flooding\" if peak_lt else \"target flooding threshold\"\n    ax2.set_ylabel(f\"Leadtime to {lt_label} (days)\")\n    ax.set_xlim([-1, 1])\n    ax.set_ylim([0, 1])\n    ax2.set_ylim([0, 40])\n    ax.set_title(\n        f\"GloFAS/Google comparison, target {rp_target}-yr RP flooding\\n\"\n        \"solid: accruacy metric, dashed: leadtime\"\n    )\n\n\n\n\nCode\nplot_metrics_rel_prob(5, \"f1\", peak_lt=True)\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_metrics_rel_prob(3, \"f1\", peak_lt=False)\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_metrics_rel_prob(4, \"f1\", peak_lt=False)\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_metrics_rel_prob(5, \"f1\", peak_lt=False)\n\n\n\n\n\n\n\n\n\n\n12.3.1 Specific overall RP\nLook at only the overall RP specified by CERF (4.5 years).\n\n\nCode\n# df_rps_acceptable = df_rps[\n#     (df_rps[\"rp_combined\"] &lt;= 5) & (df_rps[\"rp_combined\"] &gt;= 3)\n# ]\nacceptable_rp = (total_years + 1) / 6\ndf_rps_acceptable = df_rps[df_rps[\"rp_combined\"] == acceptable_rp].copy()\n\n\n\n\nCode\ndf_rps_acceptable\n\n\n\n\n\n\n\n\n\nrp_target\nrp_gf\nrp_gr\nrp_combined\ntpr\nlt\nf1\nlt_peak\nprob_gr\nprob_gf\nprob_combined\nrel_prob_gr\n\n\n\n\n18\n3\ninf\n4.50\n4.5\n0.666667\n0 days 20:00:00\n0.800000\n15 days 08:00:00\n0.222222\n0.000000\n0.222222\n1.000000\n\n\n19\n4\ninf\n4.50\n4.5\n0.666667\n7 days 12:00:00\n0.666667\n20 days 12:00:00\n0.222222\n0.000000\n0.222222\n1.000000\n\n\n20\n5\ninf\n4.50\n4.5\n0.600000\n16 days 16:00:00\n0.545455\n28 days 16:00:00\n0.222222\n0.000000\n0.222222\n1.000000\n\n\n99\n3\n27.00\n4.50\n4.5\n0.666667\n3 days 12:00:00\n0.800000\n18 days 00:00:00\n0.222222\n0.037037\n0.222222\n0.833333\n\n\n100\n4\n27.00\n4.50\n4.5\n0.666667\n11 days 12:00:00\n0.666667\n24 days 12:00:00\n0.222222\n0.037037\n0.222222\n0.833333\n\n\n101\n5\n27.00\n4.50\n4.5\n0.600000\n22 days 00:00:00\n0.545455\n34 days 00:00:00\n0.222222\n0.037037\n0.222222\n0.833333\n\n\n180\n3\n13.50\n4.50\n4.5\n0.666667\n3 days 12:00:00\n0.800000\n18 days 00:00:00\n0.222222\n0.074074\n0.222222\n0.666667\n\n\n181\n4\n13.50\n4.50\n4.5\n0.666667\n11 days 12:00:00\n0.666667\n24 days 12:00:00\n0.222222\n0.074074\n0.222222\n0.666667\n\n\n182\n5\n13.50\n4.50\n4.5\n0.600000\n22 days 00:00:00\n0.545455\n34 days 00:00:00\n0.222222\n0.074074\n0.222222\n0.666667\n\n\n261\n3\n9.00\n4.50\n4.5\n0.666667\n7 days 08:00:00\n0.800000\n21 days 20:00:00\n0.222222\n0.111111\n0.222222\n0.500000\n\n\n262\n4\n9.00\n4.50\n4.5\n0.666667\n11 days 12:00:00\n0.666667\n24 days 12:00:00\n0.222222\n0.111111\n0.222222\n0.500000\n\n\n263\n5\n9.00\n4.50\n4.5\n0.600000\n22 days 00:00:00\n0.545455\n34 days 00:00:00\n0.222222\n0.111111\n0.222222\n0.500000\n\n\n339\n3\n6.75\n5.40\n4.5\n0.666667\n11 days 08:00:00\n0.800000\n23 days 16:00:00\n0.185185\n0.148148\n0.222222\n0.166667\n\n\n340\n4\n6.75\n5.40\n4.5\n0.500000\n14 days 16:00:00\n0.500000\n32 days 00:00:00\n0.185185\n0.148148\n0.222222\n0.166667\n\n\n341\n5\n6.75\n5.40\n4.5\n0.600000\n20 days 00:00:00\n0.545455\n32 days 00:00:00\n0.185185\n0.148148\n0.222222\n0.166667\n\n\n420\n3\n5.40\n5.40\n4.5\n0.666667\n13 days 16:00:00\n0.800000\n26 days 00:00:00\n0.185185\n0.185185\n0.222222\n0.000000\n\n\n421\n4\n5.40\n5.40\n4.5\n0.500000\n19 days 08:00:00\n0.500000\n36 days 16:00:00\n0.185185\n0.185185\n0.222222\n0.000000\n\n\n422\n5\n5.40\n5.40\n4.5\n0.600000\n24 days 16:00:00\n0.545455\n36 days 16:00:00\n0.185185\n0.185185\n0.222222\n0.000000\n\n\n486\n3\n4.50\ninf\n4.5\n0.555556\n15 days 19:12:00\n0.666667\n30 days 14:24:00\n0.000000\n0.222222\n0.222222\n-1.000000\n\n\n487\n4\n4.50\ninf\n4.5\n0.500000\n19 days 08:00:00\n0.500000\n36 days 16:00:00\n0.000000\n0.222222\n0.222222\n-1.000000\n\n\n488\n5\n4.50\ninf\n4.5\n0.600000\n24 days 16:00:00\n0.545455\n36 days 16:00:00\n0.000000\n0.222222\n0.222222\n-1.000000\n\n\n489\n3\n4.50\n27.00\n4.5\n0.555556\n15 days 19:12:00\n0.666667\n30 days 14:24:00\n0.037037\n0.222222\n0.222222\n-0.833333\n\n\n490\n4\n4.50\n27.00\n4.5\n0.500000\n19 days 08:00:00\n0.500000\n36 days 16:00:00\n0.037037\n0.222222\n0.222222\n-0.833333\n\n\n491\n5\n4.50\n27.00\n4.5\n0.600000\n24 days 16:00:00\n0.545455\n36 days 16:00:00\n0.037037\n0.222222\n0.222222\n-0.833333\n\n\n492\n3\n4.50\n13.50\n4.5\n0.555556\n15 days 19:12:00\n0.666667\n30 days 14:24:00\n0.074074\n0.222222\n0.222222\n-0.666667\n\n\n493\n4\n4.50\n13.50\n4.5\n0.500000\n19 days 08:00:00\n0.500000\n36 days 16:00:00\n0.074074\n0.222222\n0.222222\n-0.666667\n\n\n494\n5\n4.50\n13.50\n4.5\n0.600000\n24 days 16:00:00\n0.545455\n36 days 16:00:00\n0.074074\n0.222222\n0.222222\n-0.666667\n\n\n495\n3\n4.50\n9.00\n4.5\n0.555556\n15 days 19:12:00\n0.666667\n30 days 14:24:00\n0.111111\n0.222222\n0.222222\n-0.500000\n\n\n496\n4\n4.50\n9.00\n4.5\n0.500000\n19 days 08:00:00\n0.500000\n36 days 16:00:00\n0.111111\n0.222222\n0.222222\n-0.500000\n\n\n497\n5\n4.50\n9.00\n4.5\n0.600000\n24 days 16:00:00\n0.545455\n36 days 16:00:00\n0.111111\n0.222222\n0.222222\n-0.500000\n\n\n498\n3\n4.50\n6.75\n4.5\n0.555556\n15 days 19:12:00\n0.666667\n30 days 14:24:00\n0.148148\n0.222222\n0.222222\n-0.333333\n\n\n499\n4\n4.50\n6.75\n4.5\n0.500000\n19 days 08:00:00\n0.500000\n36 days 16:00:00\n0.148148\n0.222222\n0.222222\n-0.333333\n\n\n500\n5\n4.50\n6.75\n4.5\n0.600000\n24 days 16:00:00\n0.545455\n36 days 16:00:00\n0.148148\n0.222222\n0.222222\n-0.333333\n\n\n\n\n\n\n\n\n\nCode\ndef plot_metrics_one_overallrp(\n    plot_metric: str,\n    peak_lt: bool = False,\n):\n    lt_col = \"lt_peak\" if peak_lt else \"lt\"\n    df_plot = df_rps_acceptable.copy()\n\n    fig, ax = plt.subplots(dpi=200, figsize=(7, 7))\n    ax2 = ax.twinx()\n\n    color_cycle = plt.rcParams[\"axes.prop_cycle\"].by_key()[\"color\"]\n\n    for i, (rp_target, group) in enumerate(df_plot.groupby(\"rp_target\")):\n        group = group.sort_values(\"rel_prob_gr\")\n        color = color_cycle[\n            i % len(color_cycle)\n        ]  # cycle through colors safely\n\n        ax.plot(\n            group[\"rel_prob_gr\"],\n            group[plot_metric],\n            label=rp_target,\n            color=color,\n            linestyle=\"-\",\n        )\n        ax2.plot(\n            group[\"rel_prob_gr\"],\n            group[lt_col].dt.days,\n            color=color,\n            linestyle=\"--\",\n        )\n\n    # Only add legend for rp_combined once (from ax)\n    ax.legend(\n        title=\"Target RP (years)\\nsolid: accuracy metric\\ndashed: leadtime\",\n        bbox_to_anchor=(1.1, 1),\n        loc=\"upper left\",\n    )\n    ax.axvline(0, color=\"lightgrey\", linewidth=0.5, linestyle=\"--\")\n\n    # Labels\n    ax.set_xlabel(\n        \"Relative probability of activating\\n\"\n        \"&lt;-- more likely with GloFAS              more likely with Google --&gt;\"\n    )\n    ax.set_ylabel(plot_metric.upper())\n    lt_label = \"peak flooding\" if peak_lt else \"target flooding threshold\"\n    ax2.set_ylabel(f\"Leadtime to {lt_label} (days)\")\n    ax.set_xlim([-1, 1])\n    ax.set_ylim([0, 1])\n    ax2.set_ylim([0, 40])\n    ax.set_title(\n        f\"GloFAS/Google comparison, overall {acceptable_rp:.1f}-yr RP\\n\"\n        \"solid: accruacy metric, dashed: leadtime\"\n    )\n\n\n\n\nCode\nplot_metrics_one_overallrp(\"f1\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_metrics_one_overallrp(\"tpr\")",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Combined Google-GloFAS trigger - reanalysis</span>"
    ]
  },
  {
    "objectID": "exploration/2025/combined_gf_grrr_reanalysis.html#specific-combination",
    "href": "exploration/2025/combined_gf_grrr_reanalysis.html#specific-combination",
    "title": "12  Combined Google-GloFAS trigger - reanalysis",
    "section": "12.4 Specific combination",
    "text": "12.4 Specific combination\nPick specification combination based on accuracy metrics. Looks like a balanced trigger (equal probability to activate with both) seems to provide decent combination of accuracy and leadtime. We can then look at the historical performance in more detail.\n\n\nCode\ndf_rps_acceptable[df_rps_acceptable[\"rel_prob_gr\"] == 0]\n\n\n\n\n\n\n\n\n\nrp_target\nrp_gf\nrp_gr\nrp_combined\ntpr\nlt\nf1\nlt_peak\nprob_gr\nprob_gf\nprob_combined\nrel_prob_gr\n\n\n\n\n420\n3\n5.4\n5.4\n4.5\n0.666667\n13 days 16:00:00\n0.800000\n26 days 00:00:00\n0.185185\n0.185185\n0.222222\n0.0\n\n\n421\n4\n5.4\n5.4\n4.5\n0.500000\n19 days 08:00:00\n0.500000\n36 days 16:00:00\n0.185185\n0.185185\n0.222222\n0.0\n\n\n422\n5\n5.4\n5.4\n4.5\n0.600000\n24 days 16:00:00\n0.545455\n36 days 16:00:00\n0.185185\n0.185185\n0.222222\n0.0\n\n\n\n\n\n\n\n\n\nCode\n# based on reading of above df, we want individual RPs 5.4 years\ndf_selected_trigger = df_all_simulations[\n    (df_all_simulations[\"rp_gf\"] == 5.4) & (df_all_simulations[\"rp_gr\"] == 5.4)\n]\n\n\n\n\nCode\ndf_selected_trigger = df_yearly_max.merge(df_selected_trigger, how=\"outer\")\n\n\n\n\nCode\nrp_target = 5\n\n\nGet actual thresholds\n\n\nCode\ndf_selected_trigger.sort_values(\"dis24\", ascending=False)\n\n\n\n\n\n\n\n\n\nyear\ndis24\nSFED\nstreamflow\ndis24_maxdate\nSFED_maxdate\nstreamflow_maxdate\ndis24_peak_leadtime\nstreamflow_peak_leadtime\ndis24_rank\n...\nSFED_5yr_thresh_date\ntrig_date\ndis24_trig_date\nstreamflow_trig_date\nleadtime_peak\nleadtime_3yr_target\nleadtime_4yr_target\nleadtime_5yr_target\nrp_gf\nrp_gr\n\n\n\n\n24\n2022\n5347.171875\n0.269161\n1793.780396\n2022-08-19\n2022-09-21\n2022-09-24\n33 days\n-3 days\n1\n...\n2022-09-10\n2022-08-19\n2022-08-19\n2022-09-04\n33 days\n8 days\n10 days\n22 days\n5.4\n5.4\n\n\n1\n1999\n5244.656250\n0.192214\n1545.005493\n1999-09-11\n1999-10-21\n1999-10-17\n40 days\n4 days\n2\n...\n1999-10-21\n1999-09-05\n1999-09-05\n1999-09-10\n46 days\n27 days\n43 days\n46 days\n5.4\n5.4\n\n\n0\n1998\n4300.250000\n0.142014\n1328.853149\n1998-09-03\n1998-09-29\n1998-10-06\n26 days\n-7 days\n3\n...\nNaT\n1998-08-19\n1998-08-19\n1998-09-28\n41 days\n41 days\nNaT\nNaT\n5.4\n5.4\n\n\n5\n2003\n3312.015625\n0.151862\n953.153015\n2003-09-19\n2003-09-21\n2003-09-30\n2 days\n-9 days\n4\n...\nNaT\n2003-09-19\n2003-09-19\nNaT\n2 days\n1 days\nNaT\nNaT\n5.4\n5.4\n\n\n14\n2012\n3110.078125\n0.286909\n1394.855469\n2012-08-21\n2012-09-21\n2012-09-23\n31 days\n-2 days\n5\n...\n2012-08-27\n2012-08-21\n2012-08-21\n2012-09-02\n31 days\n2 days\n5 days\n6 days\n5.4\n5.4\n\n\n12\n2010\n3109.257812\n0.115183\n1100.995361\n2010-09-07\n2010-09-10\n2010-10-01\n3 days\n-21 days\n6\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n16\n2014\n2918.125000\n0.100249\n926.234802\n2014-08-23\n2014-08-31\n2014-10-06\n8 days\n-36 days\n7\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n2\n2000\n2863.234375\n0.112231\n762.573181\n2000-09-07\n2000-09-02\n2000-10-06\n-5 days\n-34 days\n8\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n10\n2008\n2627.976562\n0.083352\n1063.593872\n2008-08-27\n2008-06-28\n2008-10-03\n-60 days\n-97 days\n9\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n20\n2018\n2547.906250\n0.165637\n1157.043457\n2018-09-28\n2018-09-12\n2018-09-16\n-16 days\n-4 days\n10\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n13\n2011\n2461.625000\n0.080652\n778.979004\n2011-09-14\n2011-09-21\n2011-10-18\n7 days\n-27 days\n11\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n21\n2019\n2440.054688\n0.147553\n1212.237061\n2019-10-11\n2019-10-30\n2019-10-27\n19 days\n3 days\n12\n...\nNaT\n2019-10-27\nNaT\n2019-10-27\n3 days\n3 days\nNaT\nNaT\n5.4\n5.4\n\n\n3\n2001\n2399.468750\n0.061692\n1064.437988\n2001-09-20\n2001-09-17\n2001-10-04\n-3 days\n-17 days\n13\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n25\n2023\n2379.328125\n0.203958\n900.323486\n2023-08-26\n2023-10-09\n2023-10-07\n44 days\n2 days\n14\n...\n2023-10-07\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n18\n2016\n2364.773438\n0.118837\n969.453369\n2016-09-22\n2016-09-25\n2016-10-09\n3 days\n-14 days\n15\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n23\n2021\n2253.296875\n0.134848\n676.297546\n2021-07-09\n2021-08-29\n2021-09-05\n51 days\n-7 days\n16\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n9\n2007\n2235.781250\n0.103586\n836.369751\n2007-09-22\n2007-09-12\n2007-09-11\n-10 days\n1 days\n17\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n11\n2009\n2169.906250\n0.103484\n766.465027\n2009-09-05\n2009-09-08\n2009-09-10\n3 days\n-2 days\n18\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n7\n2005\n2077.328125\n0.082421\n903.818298\n2005-08-15\n2005-08-23\n2005-10-07\n8 days\n-45 days\n19\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n22\n2020\n1946.828125\n0.087079\n901.907959\n2020-09-30\n2020-10-05\n2020-10-05\n5 days\n0 days\n20\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n6\n2004\n1856.578125\n0.035491\n801.753296\n2004-09-07\n2004-09-11\n2004-09-26\n4 days\n-15 days\n21\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n4\n2002\n1854.218750\n0.093438\n956.879333\n2002-09-19\n2002-09-24\n2002-09-16\n5 days\n8 days\n22\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n8\n2006\n1733.757812\n0.113096\n847.273560\n2006-09-23\n2006-09-16\n2006-09-17\n-7 days\n-1 days\n23\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n19\n2017\n1717.898438\n0.088970\n952.680115\n2017-08-22\n2017-08-19\n2017-09-26\n-3 days\n-38 days\n24\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n15\n2013\n1611.937500\n0.092912\n775.987488\n2013-08-28\n2013-09-02\n2013-09-07\n5 days\n-5 days\n25\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n17\n2015\n1563.804688\n0.206910\n738.006592\n2015-09-20\n2015-09-05\n2015-10-12\n-15 days\n-37 days\n26\n...\n2015-09-04\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n\n\n26 rows × 30 columns\n\n\n\n\n\nCode\ndf_selected_trigger.columns\n\n\nIndex(['year', 'dis24', 'SFED', 'streamflow', 'dis24_maxdate', 'SFED_maxdate',\n       'streamflow_maxdate', 'dis24_peak_leadtime', 'streamflow_peak_leadtime',\n       'dis24_rank', 'dis24_rp', 'SFED_rank', 'SFED_rp', 'streamflow_rank',\n       'streamflow_rp', '3yr_target', '4yr_target', '5yr_target',\n       'SFED_3yr_thresh_date', 'SFED_4yr_thresh_date', 'SFED_5yr_thresh_date',\n       'trig_date', 'dis24_trig_date', 'streamflow_trig_date', 'leadtime_peak',\n       'leadtime_3yr_target', 'leadtime_4yr_target', 'leadtime_5yr_target',\n       'rp_gf', 'rp_gr'],\n      dtype='object')\n\n\n\n\nCode\ndf_selected_trigger.sort_values(\"streamflow\", ascending=False)\n\n\n\n\n\n\n\n\n\nyear\ndis24\nSFED\nstreamflow\ndis24_maxdate\nSFED_maxdate\nstreamflow_maxdate\ndis24_peak_leadtime\nstreamflow_peak_leadtime\ndis24_rank\n...\nSFED_5yr_thresh_date\ntrig_date\ndis24_trig_date\nstreamflow_trig_date\nleadtime_peak\nleadtime_3yr_target\nleadtime_4yr_target\nleadtime_5yr_target\nrp_gf\nrp_gr\n\n\n\n\n24\n2022\n5347.171875\n0.269161\n1793.780396\n2022-08-19\n2022-09-21\n2022-09-24\n33 days\n-3 days\n1\n...\n2022-09-10\n2022-08-19\n2022-08-19\n2022-09-04\n33 days\n8 days\n10 days\n22 days\n5.4\n5.4\n\n\n1\n1999\n5244.656250\n0.192214\n1545.005493\n1999-09-11\n1999-10-21\n1999-10-17\n40 days\n4 days\n2\n...\n1999-10-21\n1999-09-05\n1999-09-05\n1999-09-10\n46 days\n27 days\n43 days\n46 days\n5.4\n5.4\n\n\n14\n2012\n3110.078125\n0.286909\n1394.855469\n2012-08-21\n2012-09-21\n2012-09-23\n31 days\n-2 days\n5\n...\n2012-08-27\n2012-08-21\n2012-08-21\n2012-09-02\n31 days\n2 days\n5 days\n6 days\n5.4\n5.4\n\n\n0\n1998\n4300.250000\n0.142014\n1328.853149\n1998-09-03\n1998-09-29\n1998-10-06\n26 days\n-7 days\n3\n...\nNaT\n1998-08-19\n1998-08-19\n1998-09-28\n41 days\n41 days\nNaT\nNaT\n5.4\n5.4\n\n\n21\n2019\n2440.054688\n0.147553\n1212.237061\n2019-10-11\n2019-10-30\n2019-10-27\n19 days\n3 days\n12\n...\nNaT\n2019-10-27\nNaT\n2019-10-27\n3 days\n3 days\nNaT\nNaT\n5.4\n5.4\n\n\n20\n2018\n2547.906250\n0.165637\n1157.043457\n2018-09-28\n2018-09-12\n2018-09-16\n-16 days\n-4 days\n10\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n12\n2010\n3109.257812\n0.115183\n1100.995361\n2010-09-07\n2010-09-10\n2010-10-01\n3 days\n-21 days\n6\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n3\n2001\n2399.468750\n0.061692\n1064.437988\n2001-09-20\n2001-09-17\n2001-10-04\n-3 days\n-17 days\n13\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n10\n2008\n2627.976562\n0.083352\n1063.593872\n2008-08-27\n2008-06-28\n2008-10-03\n-60 days\n-97 days\n9\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n18\n2016\n2364.773438\n0.118837\n969.453369\n2016-09-22\n2016-09-25\n2016-10-09\n3 days\n-14 days\n15\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n4\n2002\n1854.218750\n0.093438\n956.879333\n2002-09-19\n2002-09-24\n2002-09-16\n5 days\n8 days\n22\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n5\n2003\n3312.015625\n0.151862\n953.153015\n2003-09-19\n2003-09-21\n2003-09-30\n2 days\n-9 days\n4\n...\nNaT\n2003-09-19\n2003-09-19\nNaT\n2 days\n1 days\nNaT\nNaT\n5.4\n5.4\n\n\n19\n2017\n1717.898438\n0.088970\n952.680115\n2017-08-22\n2017-08-19\n2017-09-26\n-3 days\n-38 days\n24\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n16\n2014\n2918.125000\n0.100249\n926.234802\n2014-08-23\n2014-08-31\n2014-10-06\n8 days\n-36 days\n7\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n7\n2005\n2077.328125\n0.082421\n903.818298\n2005-08-15\n2005-08-23\n2005-10-07\n8 days\n-45 days\n19\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n22\n2020\n1946.828125\n0.087079\n901.907959\n2020-09-30\n2020-10-05\n2020-10-05\n5 days\n0 days\n20\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n25\n2023\n2379.328125\n0.203958\n900.323486\n2023-08-26\n2023-10-09\n2023-10-07\n44 days\n2 days\n14\n...\n2023-10-07\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n8\n2006\n1733.757812\n0.113096\n847.273560\n2006-09-23\n2006-09-16\n2006-09-17\n-7 days\n-1 days\n23\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n9\n2007\n2235.781250\n0.103586\n836.369751\n2007-09-22\n2007-09-12\n2007-09-11\n-10 days\n1 days\n17\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n6\n2004\n1856.578125\n0.035491\n801.753296\n2004-09-07\n2004-09-11\n2004-09-26\n4 days\n-15 days\n21\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n13\n2011\n2461.625000\n0.080652\n778.979004\n2011-09-14\n2011-09-21\n2011-10-18\n7 days\n-27 days\n11\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n15\n2013\n1611.937500\n0.092912\n775.987488\n2013-08-28\n2013-09-02\n2013-09-07\n5 days\n-5 days\n25\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n11\n2009\n2169.906250\n0.103484\n766.465027\n2009-09-05\n2009-09-08\n2009-09-10\n3 days\n-2 days\n18\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n2\n2000\n2863.234375\n0.112231\n762.573181\n2000-09-07\n2000-09-02\n2000-10-06\n-5 days\n-34 days\n8\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n17\n2015\n1563.804688\n0.206910\n738.006592\n2015-09-20\n2015-09-05\n2015-10-12\n-15 days\n-37 days\n26\n...\n2015-09-04\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n23\n2021\n2253.296875\n0.134848\n676.297546\n2021-07-09\n2021-08-29\n2021-09-05\n51 days\n-7 days\n16\n...\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaT\nNaN\nNaN\n\n\n\n\n26 rows × 30 columns\n\n\n\n\n\nCode\nfor x in [\"dis24\", \"streamflow\"]:\n    thresh = df_selected_trigger[\n        ~df_selected_trigger[f\"{x}_trig_date\"].isnull()\n    ][x].min()\n    print(x, thresh)\n\n\ndis24 3110.0781\nstreamflow 1212.237\n\n\n\n12.4.1 True positives\n\n\nCode\ndff = df_selected_trigger[\n    (df_selected_trigger[f\"{rp_target}yr_target\"])\n    & (~df_selected_trigger[\"rp_gf\"].isnull())\n]\n\nfor _, row in dff.iterrows():\n    print(row)\n    print()\n\n\nyear                                       1999\ndis24                                5244.65625\nSFED                                   0.192214\nstreamflow                          1545.005493\ndis24_maxdate               1999-09-11 00:00:00\nSFED_maxdate                1999-10-21 00:00:00\nstreamflow_maxdate          1999-10-17 00:00:00\ndis24_peak_leadtime            40 days 00:00:00\nstreamflow_peak_leadtime        4 days 00:00:00\ndis24_rank                                    2\ndis24_rp                                   13.5\nSFED_rank                                     5\nSFED_rp                                     5.4\nstreamflow_rank                               2\nstreamflow_rp                              13.5\n3yr_target                                 True\n4yr_target                                 True\n5yr_target                                 True\nSFED_3yr_thresh_date        1999-10-02 00:00:00\nSFED_4yr_thresh_date        1999-10-18 00:00:00\nSFED_5yr_thresh_date        1999-10-21 00:00:00\ntrig_date                   1999-09-05 00:00:00\ndis24_trig_date             1999-09-05 00:00:00\nstreamflow_trig_date        1999-09-10 00:00:00\nleadtime_peak                  46 days 00:00:00\nleadtime_3yr_target            27 days 00:00:00\nleadtime_4yr_target            43 days 00:00:00\nleadtime_5yr_target            46 days 00:00:00\nrp_gf                                       5.4\nrp_gr                                       5.4\nName: 1, dtype: object\n\nyear                                       2012\ndis24                               3110.078125\nSFED                                   0.286909\nstreamflow                          1394.855469\ndis24_maxdate               2012-08-21 00:00:00\nSFED_maxdate                2012-09-21 00:00:00\nstreamflow_maxdate          2012-09-23 00:00:00\ndis24_peak_leadtime            31 days 00:00:00\nstreamflow_peak_leadtime      -2 days +00:00:00\ndis24_rank                                    5\ndis24_rp                                    5.4\nSFED_rank                                     1\nSFED_rp                                    27.0\nstreamflow_rank                               3\nstreamflow_rp                               9.0\n3yr_target                                 True\n4yr_target                                 True\n5yr_target                                 True\nSFED_3yr_thresh_date        2012-08-23 00:00:00\nSFED_4yr_thresh_date        2012-08-26 00:00:00\nSFED_5yr_thresh_date        2012-08-27 00:00:00\ntrig_date                   2012-08-21 00:00:00\ndis24_trig_date             2012-08-21 00:00:00\nstreamflow_trig_date        2012-09-02 00:00:00\nleadtime_peak                  31 days 00:00:00\nleadtime_3yr_target             2 days 00:00:00\nleadtime_4yr_target             5 days 00:00:00\nleadtime_5yr_target             6 days 00:00:00\nrp_gf                                       5.4\nrp_gr                                       5.4\nName: 14, dtype: object\n\nyear                                       2022\ndis24                               5347.171875\nSFED                                   0.269161\nstreamflow                          1793.780396\ndis24_maxdate               2022-08-19 00:00:00\nSFED_maxdate                2022-09-21 00:00:00\nstreamflow_maxdate          2022-09-24 00:00:00\ndis24_peak_leadtime            33 days 00:00:00\nstreamflow_peak_leadtime      -3 days +00:00:00\ndis24_rank                                    1\ndis24_rp                                   27.0\nSFED_rank                                     2\nSFED_rp                                    13.5\nstreamflow_rank                               1\nstreamflow_rp                              27.0\n3yr_target                                 True\n4yr_target                                 True\n5yr_target                                 True\nSFED_3yr_thresh_date        2022-08-27 00:00:00\nSFED_4yr_thresh_date        2022-08-29 00:00:00\nSFED_5yr_thresh_date        2022-09-10 00:00:00\ntrig_date                   2022-08-19 00:00:00\ndis24_trig_date             2022-08-19 00:00:00\nstreamflow_trig_date        2022-09-04 00:00:00\nleadtime_peak                  33 days 00:00:00\nleadtime_3yr_target             8 days 00:00:00\nleadtime_4yr_target            10 days 00:00:00\nleadtime_5yr_target            22 days 00:00:00\nrp_gf                                       5.4\nrp_gr                                       5.4\nName: 24, dtype: object\n\n\n\n\n\n12.4.2 False positives\n\n\nCode\ndff = df_selected_trigger[\n    (~df_selected_trigger[f\"{rp_target}yr_target\"])\n    & (~df_selected_trigger[\"rp_gf\"].isnull())\n]\n\nfor _, row in dff.iterrows():\n    print(row)\n    print()\n\n\nyear                                       1998\ndis24                                   4300.25\nSFED                                   0.142014\nstreamflow                          1328.853149\ndis24_maxdate               1998-09-03 00:00:00\nSFED_maxdate                1998-09-29 00:00:00\nstreamflow_maxdate          1998-10-06 00:00:00\ndis24_peak_leadtime            26 days 00:00:00\nstreamflow_peak_leadtime      -7 days +00:00:00\ndis24_rank                                    3\ndis24_rp                                    9.0\nSFED_rank                                     9\nSFED_rp                                     3.0\nstreamflow_rank                               4\nstreamflow_rp                              6.75\n3yr_target                                 True\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date        1998-09-29 00:00:00\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                   1998-08-19 00:00:00\ndis24_trig_date             1998-08-19 00:00:00\nstreamflow_trig_date        1998-09-28 00:00:00\nleadtime_peak                  41 days 00:00:00\nleadtime_3yr_target            41 days 00:00:00\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       5.4\nrp_gr                                       5.4\nName: 0, dtype: object\n\nyear                                       2003\ndis24                               3312.015625\nSFED                                   0.151862\nstreamflow                           953.153015\ndis24_maxdate               2003-09-19 00:00:00\nSFED_maxdate                2003-09-21 00:00:00\nstreamflow_maxdate          2003-09-30 00:00:00\ndis24_peak_leadtime             2 days 00:00:00\nstreamflow_peak_leadtime      -9 days +00:00:00\ndis24_rank                                    4\ndis24_rp                                   6.75\nSFED_rank                                     7\nSFED_rp                                3.857143\nstreamflow_rank                              12\nstreamflow_rp                              2.25\n3yr_target                                 True\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date        2003-09-20 00:00:00\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                   2003-09-19 00:00:00\ndis24_trig_date             2003-09-19 00:00:00\nstreamflow_trig_date                        NaT\nleadtime_peak                   2 days 00:00:00\nleadtime_3yr_target             1 days 00:00:00\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       5.4\nrp_gr                                       5.4\nName: 5, dtype: object\n\nyear                                       2019\ndis24                               2440.054688\nSFED                                   0.147553\nstreamflow                          1212.237061\ndis24_maxdate               2019-10-11 00:00:00\nSFED_maxdate                2019-10-30 00:00:00\nstreamflow_maxdate          2019-10-27 00:00:00\ndis24_peak_leadtime            19 days 00:00:00\nstreamflow_peak_leadtime        3 days 00:00:00\ndis24_rank                                   12\ndis24_rp                                   2.25\nSFED_rank                                     8\nSFED_rp                                   3.375\nstreamflow_rank                               5\nstreamflow_rp                               5.4\n3yr_target                                 True\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date        2019-10-30 00:00:00\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                   2019-10-27 00:00:00\ndis24_trig_date                             NaT\nstreamflow_trig_date        2019-10-27 00:00:00\nleadtime_peak                   3 days 00:00:00\nleadtime_3yr_target             3 days 00:00:00\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       5.4\nrp_gr                                       5.4\nName: 21, dtype: object\n\n\n\n\n\n12.4.3 False negatives\n\n\nCode\ndff = df_selected_trigger[\n    (df_selected_trigger[f\"{rp_target}yr_target\"])\n    & (df_selected_trigger[\"rp_gf\"].isnull())\n]\n\nfor _, row in dff.iterrows():\n    print(row)\n    print()\n\n\nyear                                       2015\ndis24                               1563.804688\nSFED                                    0.20691\nstreamflow                           738.006592\ndis24_maxdate               2015-09-20 00:00:00\nSFED_maxdate                2015-09-05 00:00:00\nstreamflow_maxdate          2015-10-12 00:00:00\ndis24_peak_leadtime          -15 days +00:00:00\nstreamflow_peak_leadtime     -37 days +00:00:00\ndis24_rank                                   26\ndis24_rp                               1.038462\nSFED_rank                                     3\nSFED_rp                                     9.0\nstreamflow_rank                              25\nstreamflow_rp                              1.08\n3yr_target                                 True\n4yr_target                                 True\n5yr_target                                 True\nSFED_3yr_thresh_date        2015-09-01 00:00:00\nSFED_4yr_thresh_date        2015-09-02 00:00:00\nSFED_5yr_thresh_date        2015-09-04 00:00:00\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 17, dtype: object\n\nyear                                       2023\ndis24                               2379.328125\nSFED                                   0.203958\nstreamflow                           900.323486\ndis24_maxdate               2023-08-26 00:00:00\nSFED_maxdate                2023-10-09 00:00:00\nstreamflow_maxdate          2023-10-07 00:00:00\ndis24_peak_leadtime            44 days 00:00:00\nstreamflow_peak_leadtime        2 days 00:00:00\ndis24_rank                                   14\ndis24_rp                               1.928571\nSFED_rank                                     4\nSFED_rp                                    6.75\nstreamflow_rank                              17\nstreamflow_rp                          1.588235\n3yr_target                                 True\n4yr_target                                 True\n5yr_target                                 True\nSFED_3yr_thresh_date        2023-10-06 00:00:00\nSFED_4yr_thresh_date        2023-10-07 00:00:00\nSFED_5yr_thresh_date        2023-10-07 00:00:00\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 25, dtype: object\n\n\n\n\n\n12.4.4 True negatives\n\n\nCode\ndff = df_selected_trigger[\n    (~df_selected_trigger[f\"{rp_target}yr_target\"])\n    & (df_selected_trigger[\"rp_gf\"].isnull())\n]\n\nfor _, row in dff.iterrows():\n    print(row)\n    print()\n\n\nyear                                       2000\ndis24                               2863.234375\nSFED                                   0.112231\nstreamflow                           762.573181\ndis24_maxdate               2000-09-07 00:00:00\nSFED_maxdate                2000-09-02 00:00:00\nstreamflow_maxdate          2000-10-06 00:00:00\ndis24_peak_leadtime           -5 days +00:00:00\nstreamflow_peak_leadtime     -34 days +00:00:00\ndis24_rank                                    8\ndis24_rp                                  3.375\nSFED_rank                                    14\nSFED_rp                                1.928571\nstreamflow_rank                              24\nstreamflow_rp                             1.125\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 2, dtype: object\n\nyear                                       2001\ndis24                                2399.46875\nSFED                                   0.061692\nstreamflow                          1064.437988\ndis24_maxdate               2001-09-20 00:00:00\nSFED_maxdate                2001-09-17 00:00:00\nstreamflow_maxdate          2001-10-04 00:00:00\ndis24_peak_leadtime           -3 days +00:00:00\nstreamflow_peak_leadtime     -17 days +00:00:00\ndis24_rank                                   13\ndis24_rp                               2.076923\nSFED_rank                                    25\nSFED_rp                                    1.08\nstreamflow_rank                               8\nstreamflow_rp                             3.375\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 3, dtype: object\n\nyear                                       2002\ndis24                                1854.21875\nSFED                                   0.093438\nstreamflow                           956.879333\ndis24_maxdate               2002-09-19 00:00:00\nSFED_maxdate                2002-09-24 00:00:00\nstreamflow_maxdate          2002-09-16 00:00:00\ndis24_peak_leadtime             5 days 00:00:00\nstreamflow_peak_leadtime        8 days 00:00:00\ndis24_rank                                   22\ndis24_rp                               1.227273\nSFED_rank                                    18\nSFED_rp                                     1.5\nstreamflow_rank                              11\nstreamflow_rp                          2.454545\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 4, dtype: object\n\nyear                                       2004\ndis24                               1856.578125\nSFED                                   0.035491\nstreamflow                           801.753296\ndis24_maxdate               2004-09-07 00:00:00\nSFED_maxdate                2004-09-11 00:00:00\nstreamflow_maxdate          2004-09-26 00:00:00\ndis24_peak_leadtime             4 days 00:00:00\nstreamflow_peak_leadtime     -15 days +00:00:00\ndis24_rank                                   21\ndis24_rp                               1.285714\nSFED_rank                                    26\nSFED_rp                                1.038462\nstreamflow_rank                              20\nstreamflow_rp                              1.35\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 6, dtype: object\n\nyear                                       2005\ndis24                               2077.328125\nSFED                                   0.082421\nstreamflow                           903.818298\ndis24_maxdate               2005-08-15 00:00:00\nSFED_maxdate                2005-08-23 00:00:00\nstreamflow_maxdate          2005-10-07 00:00:00\ndis24_peak_leadtime             8 days 00:00:00\nstreamflow_peak_leadtime     -45 days +00:00:00\ndis24_rank                                   19\ndis24_rp                               1.421053\nSFED_rank                                    23\nSFED_rp                                1.173913\nstreamflow_rank                              15\nstreamflow_rp                               1.8\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 7, dtype: object\n\nyear                                       2006\ndis24                               1733.757812\nSFED                                   0.113096\nstreamflow                            847.27356\ndis24_maxdate               2006-09-23 00:00:00\nSFED_maxdate                2006-09-16 00:00:00\nstreamflow_maxdate          2006-09-17 00:00:00\ndis24_peak_leadtime           -7 days +00:00:00\nstreamflow_peak_leadtime      -1 days +00:00:00\ndis24_rank                                   23\ndis24_rp                               1.173913\nSFED_rank                                    13\nSFED_rp                                2.076923\nstreamflow_rank                              18\nstreamflow_rp                               1.5\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 8, dtype: object\n\nyear                                       2007\ndis24                                2235.78125\nSFED                                   0.103586\nstreamflow                           836.369751\ndis24_maxdate               2007-09-22 00:00:00\nSFED_maxdate                2007-09-12 00:00:00\nstreamflow_maxdate          2007-09-11 00:00:00\ndis24_peak_leadtime          -10 days +00:00:00\nstreamflow_peak_leadtime        1 days 00:00:00\ndis24_rank                                   17\ndis24_rp                               1.588235\nSFED_rank                                    15\nSFED_rp                                     1.8\nstreamflow_rank                              19\nstreamflow_rp                          1.421053\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 9, dtype: object\n\nyear                                       2008\ndis24                               2627.976562\nSFED                                   0.083352\nstreamflow                          1063.593872\ndis24_maxdate               2008-08-27 00:00:00\nSFED_maxdate                2008-06-28 00:00:00\nstreamflow_maxdate          2008-10-03 00:00:00\ndis24_peak_leadtime          -60 days +00:00:00\nstreamflow_peak_leadtime     -97 days +00:00:00\ndis24_rank                                    9\ndis24_rp                                    3.0\nSFED_rank                                    22\nSFED_rp                                1.227273\nstreamflow_rank                               9\nstreamflow_rp                               3.0\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 10, dtype: object\n\nyear                                       2009\ndis24                                2169.90625\nSFED                                   0.103484\nstreamflow                           766.465027\ndis24_maxdate               2009-09-05 00:00:00\nSFED_maxdate                2009-09-08 00:00:00\nstreamflow_maxdate          2009-09-10 00:00:00\ndis24_peak_leadtime             3 days 00:00:00\nstreamflow_peak_leadtime      -2 days +00:00:00\ndis24_rank                                   18\ndis24_rp                                    1.5\nSFED_rank                                    16\nSFED_rp                                  1.6875\nstreamflow_rank                              23\nstreamflow_rp                          1.173913\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 11, dtype: object\n\nyear                                       2010\ndis24                               3109.257812\nSFED                                   0.115183\nstreamflow                          1100.995361\ndis24_maxdate               2010-09-07 00:00:00\nSFED_maxdate                2010-09-10 00:00:00\nstreamflow_maxdate          2010-10-01 00:00:00\ndis24_peak_leadtime             3 days 00:00:00\nstreamflow_peak_leadtime     -21 days +00:00:00\ndis24_rank                                    6\ndis24_rp                                    4.5\nSFED_rank                                    12\nSFED_rp                                    2.25\nstreamflow_rank                               7\nstreamflow_rp                          3.857143\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 12, dtype: object\n\nyear                                       2011\ndis24                                  2461.625\nSFED                                   0.080652\nstreamflow                           778.979004\ndis24_maxdate               2011-09-14 00:00:00\nSFED_maxdate                2011-09-21 00:00:00\nstreamflow_maxdate          2011-10-18 00:00:00\ndis24_peak_leadtime             7 days 00:00:00\nstreamflow_peak_leadtime     -27 days +00:00:00\ndis24_rank                                   11\ndis24_rp                               2.454545\nSFED_rank                                    24\nSFED_rp                                   1.125\nstreamflow_rank                              21\nstreamflow_rp                          1.285714\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 13, dtype: object\n\nyear                                       2013\ndis24                                 1611.9375\nSFED                                   0.092912\nstreamflow                           775.987488\ndis24_maxdate               2013-08-28 00:00:00\nSFED_maxdate                2013-09-02 00:00:00\nstreamflow_maxdate          2013-09-07 00:00:00\ndis24_peak_leadtime             5 days 00:00:00\nstreamflow_peak_leadtime      -5 days +00:00:00\ndis24_rank                                   25\ndis24_rp                                   1.08\nSFED_rank                                    19\nSFED_rp                                1.421053\nstreamflow_rank                              22\nstreamflow_rp                          1.227273\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 15, dtype: object\n\nyear                                       2014\ndis24                                  2918.125\nSFED                                   0.100249\nstreamflow                           926.234802\ndis24_maxdate               2014-08-23 00:00:00\nSFED_maxdate                2014-08-31 00:00:00\nstreamflow_maxdate          2014-10-06 00:00:00\ndis24_peak_leadtime             8 days 00:00:00\nstreamflow_peak_leadtime     -36 days +00:00:00\ndis24_rank                                    7\ndis24_rp                               3.857143\nSFED_rank                                    17\nSFED_rp                                1.588235\nstreamflow_rank                              14\nstreamflow_rp                          1.928571\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 16, dtype: object\n\nyear                                       2016\ndis24                               2364.773438\nSFED                                   0.118837\nstreamflow                           969.453369\ndis24_maxdate               2016-09-22 00:00:00\nSFED_maxdate                2016-09-25 00:00:00\nstreamflow_maxdate          2016-10-09 00:00:00\ndis24_peak_leadtime             3 days 00:00:00\nstreamflow_peak_leadtime     -14 days +00:00:00\ndis24_rank                                   15\ndis24_rp                                    1.8\nSFED_rank                                    11\nSFED_rp                                2.454545\nstreamflow_rank                              10\nstreamflow_rp                               2.7\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 18, dtype: object\n\nyear                                       2017\ndis24                               1717.898438\nSFED                                    0.08897\nstreamflow                           952.680115\ndis24_maxdate               2017-08-22 00:00:00\nSFED_maxdate                2017-08-19 00:00:00\nstreamflow_maxdate          2017-09-26 00:00:00\ndis24_peak_leadtime           -3 days +00:00:00\nstreamflow_peak_leadtime     -38 days +00:00:00\ndis24_rank                                   24\ndis24_rp                                  1.125\nSFED_rank                                    20\nSFED_rp                                    1.35\nstreamflow_rank                              13\nstreamflow_rp                          2.076923\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 19, dtype: object\n\nyear                                       2018\ndis24                                2547.90625\nSFED                                   0.165637\nstreamflow                          1157.043457\ndis24_maxdate               2018-09-28 00:00:00\nSFED_maxdate                2018-09-12 00:00:00\nstreamflow_maxdate          2018-09-16 00:00:00\ndis24_peak_leadtime          -16 days +00:00:00\nstreamflow_peak_leadtime      -4 days +00:00:00\ndis24_rank                                   10\ndis24_rp                                    2.7\nSFED_rank                                     6\nSFED_rp                                     4.5\nstreamflow_rank                               6\nstreamflow_rp                               4.5\n3yr_target                                 True\n4yr_target                                 True\n5yr_target                                False\nSFED_3yr_thresh_date        2018-08-29 00:00:00\nSFED_4yr_thresh_date        2018-09-12 00:00:00\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 20, dtype: object\n\nyear                                       2020\ndis24                               1946.828125\nSFED                                   0.087079\nstreamflow                           901.907959\ndis24_maxdate               2020-09-30 00:00:00\nSFED_maxdate                2020-10-05 00:00:00\nstreamflow_maxdate          2020-10-05 00:00:00\ndis24_peak_leadtime             5 days 00:00:00\nstreamflow_peak_leadtime        0 days 00:00:00\ndis24_rank                                   20\ndis24_rp                                   1.35\nSFED_rank                                    21\nSFED_rp                                1.285714\nstreamflow_rank                              16\nstreamflow_rp                            1.6875\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 22, dtype: object\n\nyear                                       2021\ndis24                               2253.296875\nSFED                                   0.134848\nstreamflow                           676.297546\ndis24_maxdate               2021-07-09 00:00:00\nSFED_maxdate                2021-08-29 00:00:00\nstreamflow_maxdate          2021-09-05 00:00:00\ndis24_peak_leadtime            51 days 00:00:00\nstreamflow_peak_leadtime      -7 days +00:00:00\ndis24_rank                                   16\ndis24_rp                                 1.6875\nSFED_rank                                    10\nSFED_rp                                     2.7\nstreamflow_rank                              26\nstreamflow_rp                          1.038462\n3yr_target                                False\n4yr_target                                False\n5yr_target                                False\nSFED_3yr_thresh_date                        NaT\nSFED_4yr_thresh_date                        NaT\nSFED_5yr_thresh_date                        NaT\ntrig_date                                   NaT\ndis24_trig_date                             NaT\nstreamflow_trig_date                        NaT\nleadtime_peak                               NaT\nleadtime_3yr_target                         NaT\nleadtime_4yr_target                         NaT\nleadtime_5yr_target                         NaT\nrp_gf                                       NaN\nrp_gr                                       NaN\nName: 23, dtype: object\n\n\n\n\n\n12.4.5 Timeline\nPlot historical timing of trigger and flood extent severities.\nFirst check average leadtimes of specific indicators:\n\n\nCode\ndf_selected_trigger[\"dis24_5yr_leadtime\"] = (\n    df_selected_trigger[\"SFED_5yr_thresh_date\"]\n    - df_selected_trigger[\"dis24_trig_date\"]\n)\n\n\n\n\nCode\ndf_selected_trigger[\"dis24_5yr_leadtime\"].mean()\n\n\nTimedelta('24 days 16:00:00')\n\n\n\n\nCode\ndf_selected_trigger[\"streamflow_5yr_leadtime\"] = (\n    df_selected_trigger[\"SFED_5yr_thresh_date\"]\n    - df_selected_trigger[\"streamflow_trig_date\"]\n)\n\n\n\n\nCode\ndf_selected_trigger[\"streamflow_5yr_leadtime\"].mean()\n\n\nTimedelta('13 days 16:00:00')\n\n\n\n\nCode\ndf_selected_trigger[\"leadtime_5yr_target\"].mean()\n\n\nTimedelta('24 days 16:00:00')\n\n\nCreate plot showing when each year both triggers would have been met, and when flood extent reached 3-, 4-, and 5-yr RP severity, as well as yearly maximum.\n\n\nCode\ndf_plot = df_selected_trigger.copy()\n\n\n\n\nCode\n# Ensure datetime format\ndate_cols = [\n    \"trig_date\",\n    \"dis24_trig_date\",\n    \"streamflow_trig_date\",\n    \"SFED_3yr_thresh_date\",\n    \"SFED_4yr_thresh_date\",\n    \"SFED_5yr_thresh_date\",\n    \"SFED_maxdate\",\n]\n# df_plot[date_cols] = df_plot[date_cols].apply(pd.to_datetime)\n\n\n# Normalize to fixed year for x-axis alignment\ndef normalize_date(dt):\n    if pd.isnull(dt):\n        return None\n    return dt.replace(year=2000)\n\n\nfor col in date_cols:\n    df_plot[f\"{col}_norm\"] = df_plot[col].apply(normalize_date)\n\n# Define full style config for each date column\n# Format: col_name -&gt; (color, label, marker, size, zorder, annotate_above_line)\ndate_styles = {\n    \"trig_date_norm\": (\"black\", \"Overall trigger\", \"|\", 100, -2, False),\n    \"dis24_trig_date_norm\": (\n        \"dodgerblue\",\n        \"GloFAS trigger\",\n        \"|\",\n        50,\n        5,\n        False,\n    ),\n    \"streamflow_trig_date_norm\": (\n        \"green\",\n        \"Google trigger\",\n        \"|\",\n        50,\n        5,\n        False,\n    ),\n    \"SFED_maxdate_norm\": (\"k\", \"Max. flood extent\", \"o\", 10, 4, True),\n    \"SFED_3yr_thresh_date_norm\": (\n        \"darkorange\",\n        \"3-yr RP flood extent\",\n        \"o\",\n        40,\n        4,\n        True,\n    ),\n    \"SFED_4yr_thresh_date_norm\": (\n        \"crimson\",\n        \"4-yr RP flood extent\",\n        \"o\",\n        70,\n        4,\n        True,\n    ),\n    \"SFED_5yr_thresh_date_norm\": (\n        \"purple\",\n        \"5-yr RP flood extent\",\n        \"o\",\n        100,\n        4,\n        True,\n    ),\n}\n\n# Setup plot\nfig, ax = plt.subplots(figsize=(12, 10), dpi=300)\nyears_sorted = sorted(df_plot[\"year\"].unique(), reverse=True)\ny_positions = {year: i for i, year in enumerate(years_sorted)}\nplotted_labels = set()\n\n# Draw timelines\nfor _, row in df_plot.iterrows():\n    y = y_positions[row[\"year\"]]\n\n    # Horizontal baseline\n    ax.hlines(\n        y,\n        pd.Timestamp(\"2000-08-01\"),\n        pd.Timestamp(\"2000-11-01\"),\n        color=\"lightgray\",\n        linewidth=1,\n    )\n\n    # Plot and annotate each date\n    for col_norm, (\n        color,\n        label,\n        marker,\n        size,\n        zorder,\n        annotate_above,\n    ) in date_styles.items():\n        date_val = row.get(col_norm)\n        if pd.notnull(date_val):\n            # Plot marker\n            show_label = label if label not in plotted_labels else None\n            ax.scatter(\n                date_val,\n                y,\n                facecolor=color,\n                edgecolor=\"none\",\n                s=size,\n                marker=marker,\n                zorder=zorder,\n                label=show_label,\n                alpha=0.5,\n            )\n            if show_label:\n                plotted_labels.add(label)\n\n            # Format label date\n            label_text = date_val.strftime(\"%b %d\")\n            offset = 0.4 if annotate_above else -0.4\n            ax.annotate(\n                label_text,\n                (date_val, y + offset),\n                ha=\"center\",\n                va=\"center\",\n                fontsize=8,\n                color=color,\n                alpha=0.5,\n            )\n\n# Add vertical lines for month boundaries\nfor month_start in pd.date_range(\"2000-08-01\", \"2000-11-01\", freq=\"MS\"):\n    ax.axvline(month_start, color=\"lightgray\", linestyle=\":\", linewidth=0.8)\n\n# Axes formatting\nax.set_yticks(list(y_positions.values()))\nax.set_yticklabels(list(y_positions.keys()))\nax.set_ylabel(\"Year\")\nax.set_xlabel(\"Date\")\nax.set_title(\"Historical trigger timing\")\nax.invert_yaxis()\n\n# X-axis date formatting\nax.set_xlim(pd.Timestamp(\"2000-08-01\"), pd.Timestamp(\"2000-11-01\"))\nax.xaxis.set_major_formatter(mdates.DateFormatter(\"%b %d\"))\n# ax.xaxis.set_major_locator(mdates.WeekdayLocator(interval=7))\n\n# Legend\nhandles, labels = ax.get_legend_handles_labels()\nby_label = dict(zip(labels, handles))\nax.legend(\n    by_label.values(),\n    by_label.keys(),\n    loc=\"upper left\",\n    bbox_to_anchor=(1, 1),\n)\n\nplt.tight_layout()\nplt.show()\n\n\n/var/folders/66/764yc5p92nvdc_nm3xmy5rn40000gn/T/ipykernel_97399/795225929.py:103: UserWarning: You passed a edgecolor/edgecolors ('none') for an unfilled marker ('|').  Matplotlib is ignoring the edgecolor in favor of the facecolor.  This behavior may change in the future.\n  ax.scatter(\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf_plot = df_selected_trigger.copy()\n\n\n\n\nCode\ndf_plot[\"leadtime_5yr_target_days\"] = df_plot[\"leadtime_5yr_target\"].dt.days\ndf_plot[\"leadtime_4yr_target_days\"] = df_plot[\"leadtime_4yr_target\"].dt.days\ndf_plot[\"leadtime_3yr_target_days\"] = df_plot[\"leadtime_3yr_target\"].dt.days\n\n\n\n\nCode\ndf_plot\n\n\n\n\n\n\n\n\n\nyear\ndis24\nSFED\nstreamflow\ndis24_maxdate\nSFED_maxdate\nstreamflow_maxdate\ndis24_peak_leadtime\nstreamflow_peak_leadtime\ndis24_rank\n...\nleadtime_3yr_target\nleadtime_4yr_target\nleadtime_5yr_target\nrp_gf\nrp_gr\ndis24_5yr_leadtime\nstreamflow_5yr_leadtime\nleadtime_5yr_target_days\nleadtime_4yr_target_days\nleadtime_3yr_target_days\n\n\n\n\n0\n1998\n4300.250000\n0.142014\n1328.853149\n1998-09-03\n1998-09-29\n1998-10-06\n26 days\n-7 days\n3\n...\n41 days\nNaT\nNaT\n5.4\n5.4\nNaT\nNaT\nNaN\nNaN\n41.0\n\n\n1\n1999\n5244.656250\n0.192214\n1545.005493\n1999-09-11\n1999-10-21\n1999-10-17\n40 days\n4 days\n2\n...\n27 days\n43 days\n46 days\n5.4\n5.4\n46 days\n41 days\n46.0\n43.0\n27.0\n\n\n2\n2000\n2863.234375\n0.112231\n762.573181\n2000-09-07\n2000-09-02\n2000-10-06\n-5 days\n-34 days\n8\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n3\n2001\n2399.468750\n0.061692\n1064.437988\n2001-09-20\n2001-09-17\n2001-10-04\n-3 days\n-17 days\n13\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n4\n2002\n1854.218750\n0.093438\n956.879333\n2002-09-19\n2002-09-24\n2002-09-16\n5 days\n8 days\n22\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n5\n2003\n3312.015625\n0.151862\n953.153015\n2003-09-19\n2003-09-21\n2003-09-30\n2 days\n-9 days\n4\n...\n1 days\nNaT\nNaT\n5.4\n5.4\nNaT\nNaT\nNaN\nNaN\n1.0\n\n\n6\n2004\n1856.578125\n0.035491\n801.753296\n2004-09-07\n2004-09-11\n2004-09-26\n4 days\n-15 days\n21\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n7\n2005\n2077.328125\n0.082421\n903.818298\n2005-08-15\n2005-08-23\n2005-10-07\n8 days\n-45 days\n19\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n8\n2006\n1733.757812\n0.113096\n847.273560\n2006-09-23\n2006-09-16\n2006-09-17\n-7 days\n-1 days\n23\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n9\n2007\n2235.781250\n0.103586\n836.369751\n2007-09-22\n2007-09-12\n2007-09-11\n-10 days\n1 days\n17\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n10\n2008\n2627.976562\n0.083352\n1063.593872\n2008-08-27\n2008-06-28\n2008-10-03\n-60 days\n-97 days\n9\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n11\n2009\n2169.906250\n0.103484\n766.465027\n2009-09-05\n2009-09-08\n2009-09-10\n3 days\n-2 days\n18\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n12\n2010\n3109.257812\n0.115183\n1100.995361\n2010-09-07\n2010-09-10\n2010-10-01\n3 days\n-21 days\n6\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n13\n2011\n2461.625000\n0.080652\n778.979004\n2011-09-14\n2011-09-21\n2011-10-18\n7 days\n-27 days\n11\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n14\n2012\n3110.078125\n0.286909\n1394.855469\n2012-08-21\n2012-09-21\n2012-09-23\n31 days\n-2 days\n5\n...\n2 days\n5 days\n6 days\n5.4\n5.4\n6 days\n-6 days\n6.0\n5.0\n2.0\n\n\n15\n2013\n1611.937500\n0.092912\n775.987488\n2013-08-28\n2013-09-02\n2013-09-07\n5 days\n-5 days\n25\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n16\n2014\n2918.125000\n0.100249\n926.234802\n2014-08-23\n2014-08-31\n2014-10-06\n8 days\n-36 days\n7\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n17\n2015\n1563.804688\n0.206910\n738.006592\n2015-09-20\n2015-09-05\n2015-10-12\n-15 days\n-37 days\n26\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n18\n2016\n2364.773438\n0.118837\n969.453369\n2016-09-22\n2016-09-25\n2016-10-09\n3 days\n-14 days\n15\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n19\n2017\n1717.898438\n0.088970\n952.680115\n2017-08-22\n2017-08-19\n2017-09-26\n-3 days\n-38 days\n24\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n20\n2018\n2547.906250\n0.165637\n1157.043457\n2018-09-28\n2018-09-12\n2018-09-16\n-16 days\n-4 days\n10\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n21\n2019\n2440.054688\n0.147553\n1212.237061\n2019-10-11\n2019-10-30\n2019-10-27\n19 days\n3 days\n12\n...\n3 days\nNaT\nNaT\n5.4\n5.4\nNaT\nNaT\nNaN\nNaN\n3.0\n\n\n22\n2020\n1946.828125\n0.087079\n901.907959\n2020-09-30\n2020-10-05\n2020-10-05\n5 days\n0 days\n20\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n23\n2021\n2253.296875\n0.134848\n676.297546\n2021-07-09\n2021-08-29\n2021-09-05\n51 days\n-7 days\n16\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n24\n2022\n5347.171875\n0.269161\n1793.780396\n2022-08-19\n2022-09-21\n2022-09-24\n33 days\n-3 days\n1\n...\n8 days\n10 days\n22 days\n5.4\n5.4\n22 days\n6 days\n22.0\n10.0\n8.0\n\n\n25\n2023\n2379.328125\n0.203958\n900.323486\n2023-08-26\n2023-10-09\n2023-10-07\n44 days\n2 days\n14\n...\nNaT\nNaT\nNaT\nNaN\nNaN\nNaT\nNaT\nNaN\nNaN\nNaN\n\n\n\n\n26 rows × 35 columns\n\n\n\nHave a look at how the leadtime varies with flood severity - doesn’t seem to be much of a relationship.\n\n\nCode\ndf_plot.plot(x=\"SFED\", y=\"leadtime_3yr_target_days\", marker=\".\")",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Combined Google-GloFAS trigger - reanalysis</span>"
    ]
  },
  {
    "objectID": "exploration/2025/gf_reforecast.html",
    "href": "exploration/2025/gf_reforecast.html",
    "title": "13  GloFAS reforecast threshold check",
    "section": "",
    "text": "13.1 Load data\nCheck how long we can extend the leadtime using the same threshold as the reanalysis before the years we trigger on changes.\nCode\ndf_ref_ens = pd.read_parquet(\n    glofas.GF_PROC_DIR / \"wuroboki_glofas_reforecast_ens.parquet\"\n)\nCode\ndf_ref = (\n    df_ref_ens.groupby([\"valid_time\", \"leadtime\"])[\"dis24\"]\n    .mean()\n    .reset_index()\n)\nPlot one year and leadtime to check\nCode\ndf_ref[\n    (df_ref[\"valid_time\"].dt.year == 2003) & (df_ref[\"leadtime\"] == 1)\n].set_index(\"valid_time\").plot(y=\"dis24\")\nCode\ndf_ref_peaks = (\n    df_ref.groupby([df_ref[\"valid_time\"].dt.year, \"leadtime\"])[\"dis24\"]\n    .max()\n    .reset_index()\n)\nCode\ndf_ref_peaks = calculate_groups_rp(\n    df_ref_peaks, by=[\"leadtime\"], col_name=\"dis24\", ascending=False\n)\nCode\ndf_rea = glofas.load_glofas_reanalysis(station_name=\"wuroboki\")\nCode\ndf_rea = df_rea.rename(columns={\"time\": \"valid_time\"})\nPlot reanalysis year to quickly compare\nCode\ndf_rea[df_rea[\"valid_time\"].dt.year == 2003].set_index(\"valid_time\").plot()\nCode\ndf_rea_peaks = (\n    df_rea.groupby(df_rea[\"valid_time\"].dt.year)[\"dis24\"].max().reset_index()\n)\nPlot yearly peaks\nCode\ndf_rea_peaks.plot(x=\"valid_time\", y=\"dis24\")\nCode\ndf_rea_peaks = calculate_one_group_rp(\n    df_rea_peaks, col_name=\"dis24\", ascending=False\n)",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>GloFAS reforecast threshold check</span>"
    ]
  },
  {
    "objectID": "exploration/2025/gf_reforecast.html#check-against-reanalysis-threshold",
    "href": "exploration/2025/gf_reforecast.html#check-against-reanalysis-threshold",
    "title": "13  GloFAS reforecast threshold check",
    "section": "13.2 Check against reanalysis threshold",
    "text": "13.2 Check against reanalysis threshold\nWe set the threshold to the value for the reanalysis (3110).\n\n\nCode\nrp_ra = 5.4\n\n\n\n\nCode\nthresh_ra = 3110\n\n\n\n\nCode\n# df_rea_peaks[\"trig\"] = df_rea_peaks[\"dis24_rp\"] &gt;= rp_ra\ndf_rea_peaks[\"trig\"] = df_rea_peaks[\"dis24\"] &gt;= thresh_ra\n\n\n\n\nCode\ndf_compare = df_rea_peaks.merge(\n    df_ref_peaks, suffixes=(\"_a\", \"_f\"), on=\"valid_time\"\n)\n\n\nThen we iterate over the leadtimes to see the yearly ranking per leadtime.\n\n\nCode\nfor lt, group in df_compare.groupby(\"leadtime\"):\n    print(lt)\n    display(group.sort_values(\"dis24_rank_f\"))\n\n\n1\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.000000\n\n\n371\n2012\n3110.078125\n15\n3.133333\nTrue\n1\n3142.276611\n2\n10.500000\n\n\n294\n2010\n3109.257812\n16\n2.937500\nFalse\n1\n3121.492188\n3\n7.000000\n\n\n0\n2003\n3312.015625\n13\n3.615385\nTrue\n1\n2764.023438\n4\n5.250000\n\n\n581\n2018\n2547.906250\n23\n2.043478\nFalse\n1\n2593.005371\n5\n4.200000\n\n\n210\n2008\n2627.976562\n22\n2.136364\nFalse\n1\n2551.941406\n6\n3.500000\n\n\n336\n2011\n2461.625000\n25\n1.880000\nFalse\n1\n2469.128906\n7\n3.000000\n\n\n616\n2019\n2440.054688\n26\n1.807692\nFalse\n1\n2394.621826\n8\n2.625000\n\n\n511\n2016\n2364.773438\n30\n1.566667\nFalse\n1\n2316.237549\n9\n2.333333\n\n\n441\n2014\n2918.125000\n17\n2.764706\nFalse\n1\n2307.178223\n10\n2.100000\n\n\n168\n2007\n2235.781250\n32\n1.468750\nFalse\n1\n2131.725098\n11\n1.909091\n\n\n252\n2009\n2169.906250\n33\n1.424242\nFalse\n1\n2106.525879\n12\n1.750000\n\n\n686\n2021\n2253.296875\n31\n1.516129\nFalse\n1\n2024.487549\n13\n1.615385\n\n\n84\n2005\n2077.328125\n34\n1.382353\nFalse\n1\n1952.024170\n14\n1.500000\n\n\n42\n2004\n1856.578125\n40\n1.175000\nFalse\n1\n1857.812500\n15\n1.400000\n\n\n406\n2013\n1611.937500\n45\n1.044444\nFalse\n1\n1832.609375\n16\n1.312500\n\n\n651\n2020\n1946.828125\n37\n1.270270\nFalse\n1\n1770.099976\n17\n1.235294\n\n\n476\n2015\n1563.804688\n46\n1.021739\nFalse\n1\n1743.678101\n18\n1.166667\n\n\n126\n2006\n1733.757812\n43\n1.093023\nFalse\n1\n1702.456299\n19\n1.105263\n\n\n546\n2017\n1717.898438\n44\n1.068182\nFalse\n1\n1567.088257\n20\n1.050000\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.000000\n\n\n372\n2012\n3110.078125\n15\n3.133333\nTrue\n2\n3098.944580\n2\n10.500000\n\n\n295\n2010\n3109.257812\n16\n2.937500\nFalse\n2\n3080.150879\n3\n7.000000\n\n\n1\n2003\n3312.015625\n13\n3.615385\nTrue\n2\n2746.835938\n4\n5.250000\n\n\n253\n2009\n2169.906250\n33\n1.424242\nFalse\n2\n2719.395996\n5\n4.200000\n\n\n617\n2019\n2440.054688\n26\n1.807692\nFalse\n2\n2579.762451\n6\n3.500000\n\n\n582\n2018\n2547.906250\n23\n2.043478\nFalse\n2\n2572.190674\n7\n3.000000\n\n\n512\n2016\n2364.773438\n30\n1.566667\nFalse\n2\n2537.560059\n8\n2.625000\n\n\n169\n2007\n2235.781250\n32\n1.468750\nFalse\n2\n2407.434326\n9\n2.333333\n\n\n442\n2014\n2918.125000\n17\n2.764706\nFalse\n2\n2304.465576\n10\n2.100000\n\n\n211\n2008\n2627.976562\n22\n2.136364\nFalse\n2\n2159.547607\n11\n1.909091\n\n\n337\n2011\n2461.625000\n25\n1.880000\nFalse\n2\n2158.757812\n12\n1.750000\n\n\n407\n2013\n1611.937500\n45\n1.044444\nFalse\n2\n2122.123535\n13\n1.615385\n\n\n85\n2005\n2077.328125\n34\n1.382353\nFalse\n2\n1980.974243\n14\n1.500000\n\n\n652\n2020\n1946.828125\n37\n1.270270\nFalse\n2\n1895.982788\n15\n1.400000\n\n\n477\n2015\n1563.804688\n46\n1.021739\nFalse\n2\n1850.859375\n16\n1.312500\n\n\n43\n2004\n1856.578125\n40\n1.175000\nFalse\n2\n1835.585938\n17\n1.235294\n\n\n127\n2006\n1733.757812\n43\n1.093023\nFalse\n2\n1730.171143\n18\n1.166667\n\n\n547\n2017\n1717.898438\n44\n1.068182\nFalse\n2\n1621.897705\n19\n1.105263\n\n\n687\n2021\n2253.296875\n31\n1.516129\nFalse\n2\n1445.991455\n20\n1.050000\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.000000\n\n\n373\n2012\n3110.078125\n15\n3.133333\nTrue\n3\n2951.924316\n2\n10.500000\n\n\n296\n2010\n3109.257812\n16\n2.937500\nFalse\n3\n2943.549316\n3\n7.000000\n\n\n2\n2003\n3312.015625\n13\n3.615385\nTrue\n3\n2736.531250\n4\n5.250000\n\n\n618\n2019\n2440.054688\n26\n1.807692\nFalse\n3\n2509.392090\n5\n4.200000\n\n\n254\n2009\n2169.906250\n33\n1.424242\nFalse\n3\n2492.485840\n6\n3.500000\n\n\n583\n2018\n2547.906250\n23\n2.043478\nFalse\n3\n2411.555420\n7\n3.000000\n\n\n513\n2016\n2364.773438\n30\n1.566667\nFalse\n3\n2404.971924\n8\n2.625000\n\n\n443\n2014\n2918.125000\n17\n2.764706\nFalse\n3\n2313.091309\n9\n2.333333\n\n\n170\n2007\n2235.781250\n32\n1.468750\nFalse\n3\n2180.134277\n10\n2.100000\n\n\n653\n2020\n1946.828125\n37\n1.270270\nFalse\n3\n2129.044434\n11\n1.909091\n\n\n408\n2013\n1611.937500\n45\n1.044444\nFalse\n3\n2089.903076\n12\n1.750000\n\n\n212\n2008\n2627.976562\n22\n2.136364\nFalse\n3\n2075.882080\n13\n1.615385\n\n\n86\n2005\n2077.328125\n34\n1.382353\nFalse\n3\n2004.200806\n14\n1.500000\n\n\n338\n2011\n2461.625000\n25\n1.880000\nFalse\n3\n1932.998413\n15\n1.400000\n\n\n44\n2004\n1856.578125\n40\n1.175000\nFalse\n3\n1841.010132\n16\n1.312500\n\n\n128\n2006\n1733.757812\n43\n1.093023\nFalse\n3\n1818.397705\n17\n1.235294\n\n\n478\n2015\n1563.804688\n46\n1.021739\nFalse\n3\n1724.767212\n18\n1.166667\n\n\n548\n2017\n1717.898438\n44\n1.068182\nFalse\n3\n1630.578857\n19\n1.105263\n\n\n688\n2021\n2253.296875\n31\n1.516129\nFalse\n3\n1509.117188\n20\n1.050000\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.000000\n\n\n374\n2012\n3110.078125\n15\n3.133333\nTrue\n4\n2883.801514\n2\n10.500000\n\n\n297\n2010\n3109.257812\n16\n2.937500\nFalse\n4\n2865.289062\n3\n7.000000\n\n\n3\n2003\n3312.015625\n13\n3.615385\nTrue\n4\n2776.615723\n4\n5.250000\n\n\n619\n2019\n2440.054688\n26\n1.807692\nFalse\n4\n2654.163330\n5\n4.200000\n\n\n584\n2018\n2547.906250\n23\n2.043478\nFalse\n4\n2438.839111\n6\n3.500000\n\n\n514\n2016\n2364.773438\n30\n1.566667\nFalse\n4\n2345.894531\n7\n3.000000\n\n\n255\n2009\n2169.906250\n33\n1.424242\nFalse\n4\n2307.078857\n8\n2.625000\n\n\n444\n2014\n2918.125000\n17\n2.764706\nFalse\n4\n2293.067139\n9\n2.333333\n\n\n213\n2008\n2627.976562\n22\n2.136364\nFalse\n4\n2160.913330\n10\n2.100000\n\n\n479\n2015\n1563.804688\n46\n1.021739\nFalse\n4\n2010.931274\n11\n1.909091\n\n\n87\n2005\n2077.328125\n34\n1.382353\nFalse\n4\n2008.734375\n12\n1.750000\n\n\n171\n2007\n2235.781250\n32\n1.468750\nFalse\n4\n1991.960205\n13\n1.615385\n\n\n45\n2004\n1856.578125\n40\n1.175000\nFalse\n4\n1940.969482\n14\n1.500000\n\n\n409\n2013\n1611.937500\n45\n1.044444\nFalse\n4\n1928.534424\n15\n1.400000\n\n\n654\n2020\n1946.828125\n37\n1.270270\nFalse\n4\n1923.319580\n16\n1.312500\n\n\n129\n2006\n1733.757812\n43\n1.093023\nFalse\n4\n1891.211670\n17\n1.235294\n\n\n339\n2011\n2461.625000\n25\n1.880000\nFalse\n4\n1881.832764\n18\n1.166667\n\n\n549\n2017\n1717.898438\n44\n1.068182\nFalse\n4\n1803.546875\n19\n1.105263\n\n\n689\n2021\n2253.296875\n31\n1.516129\nFalse\n4\n1580.937500\n20\n1.050000\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.000000\n\n\n298\n2010\n3109.257812\n16\n2.937500\nFalse\n5\n2840.712402\n2\n10.500000\n\n\n375\n2012\n3110.078125\n15\n3.133333\nTrue\n5\n2793.208496\n3\n7.000000\n\n\n620\n2019\n2440.054688\n26\n1.807692\nFalse\n5\n2772.688965\n4\n5.250000\n\n\n4\n2003\n3312.015625\n13\n3.615385\nTrue\n5\n2735.535889\n5\n4.200000\n\n\n445\n2014\n2918.125000\n17\n2.764706\nFalse\n5\n2467.003174\n6\n3.500000\n\n\n585\n2018\n2547.906250\n23\n2.043478\nFalse\n5\n2444.964844\n7\n3.000000\n\n\n515\n2016\n2364.773438\n30\n1.566667\nFalse\n5\n2343.916504\n8\n2.625000\n\n\n214\n2008\n2627.976562\n22\n2.136364\nFalse\n5\n2276.947754\n9\n2.333333\n\n\n550\n2017\n1717.898438\n44\n1.068182\nFalse\n5\n2158.274902\n10\n2.100000\n\n\n256\n2009\n2169.906250\n33\n1.424242\nFalse\n5\n2152.539795\n11\n1.909091\n\n\n130\n2006\n1733.757812\n43\n1.093023\nFalse\n5\n2123.482910\n12\n1.750000\n\n\n172\n2007\n2235.781250\n32\n1.468750\nFalse\n5\n2013.115601\n13\n1.615385\n\n\n88\n2005\n2077.328125\n34\n1.382353\nFalse\n5\n2000.530518\n14\n1.500000\n\n\n480\n2015\n1563.804688\n46\n1.021739\nFalse\n5\n1992.799194\n15\n1.400000\n\n\n340\n2011\n2461.625000\n25\n1.880000\nFalse\n5\n1912.156982\n16\n1.312500\n\n\n410\n2013\n1611.937500\n45\n1.044444\nFalse\n5\n1899.282837\n17\n1.235294\n\n\n46\n2004\n1856.578125\n40\n1.175000\nFalse\n5\n1888.944580\n18\n1.166667\n\n\n655\n2020\n1946.828125\n37\n1.270270\nFalse\n5\n1733.151611\n19\n1.105263\n\n\n690\n2021\n2253.296875\n31\n1.516129\nFalse\n5\n1618.898438\n20\n1.050000\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.000000\n\n\n446\n2014\n2918.125000\n17\n2.764706\nFalse\n6\n3250.750000\n2\n10.500000\n\n\n5\n2003\n3312.015625\n13\n3.615385\nTrue\n6\n3064.019531\n3\n7.000000\n\n\n621\n2019\n2440.054688\n26\n1.807692\nFalse\n6\n2845.327393\n4\n5.250000\n\n\n299\n2010\n3109.257812\n16\n2.937500\nFalse\n6\n2808.014160\n5\n4.200000\n\n\n516\n2016\n2364.773438\n30\n1.566667\nFalse\n6\n2696.894531\n6\n3.500000\n\n\n376\n2012\n3110.078125\n15\n3.133333\nTrue\n6\n2689.899902\n7\n3.000000\n\n\n586\n2018\n2547.906250\n23\n2.043478\nFalse\n6\n2399.631348\n8\n2.625000\n\n\n131\n2006\n1733.757812\n43\n1.093023\nFalse\n6\n2285.581299\n9\n2.333333\n\n\n215\n2008\n2627.976562\n22\n2.136364\nFalse\n6\n2241.678223\n10\n2.100000\n\n\n47\n2004\n1856.578125\n40\n1.175000\nFalse\n6\n2123.308594\n11\n1.909091\n\n\n257\n2009\n2169.906250\n33\n1.424242\nFalse\n6\n2094.320312\n12\n1.750000\n\n\n551\n2017\n1717.898438\n44\n1.068182\nFalse\n6\n2072.854004\n13\n1.615385\n\n\n89\n2005\n2077.328125\n34\n1.382353\nFalse\n6\n2046.618774\n14\n1.500000\n\n\n481\n2015\n1563.804688\n46\n1.021739\nFalse\n6\n2017.981201\n15\n1.400000\n\n\n411\n2013\n1611.937500\n45\n1.044444\nFalse\n6\n1988.037476\n16\n1.312500\n\n\n173\n2007\n2235.781250\n32\n1.468750\nFalse\n6\n1986.051514\n17\n1.235294\n\n\n341\n2011\n2461.625000\n25\n1.880000\nFalse\n6\n1880.637451\n18\n1.166667\n\n\n656\n2020\n1946.828125\n37\n1.270270\nFalse\n6\n1680.634399\n19\n1.105263\n\n\n691\n2021\n2253.296875\n31\n1.516129\nFalse\n6\n1542.740601\n20\n1.050000\n\n\n\n\n\n\n\n7\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.000000\n\n\n517\n2016\n2364.773438\n30\n1.566667\nFalse\n7\n3309.821045\n2\n10.500000\n\n\n447\n2014\n2918.125000\n17\n2.764706\nFalse\n7\n3096.893799\n3\n7.000000\n\n\n6\n2003\n3312.015625\n13\n3.615385\nTrue\n7\n3009.303223\n4\n5.250000\n\n\n622\n2019\n2440.054688\n26\n1.807692\nFalse\n7\n2808.813965\n5\n4.200000\n\n\n300\n2010\n3109.257812\n16\n2.937500\nFalse\n7\n2756.195312\n6\n3.500000\n\n\n377\n2012\n3110.078125\n15\n3.133333\nTrue\n7\n2690.712402\n7\n3.000000\n\n\n587\n2018\n2547.906250\n23\n2.043478\nFalse\n7\n2382.598389\n8\n2.625000\n\n\n216\n2008\n2627.976562\n22\n2.136364\nFalse\n7\n2300.543701\n9\n2.333333\n\n\n132\n2006\n1733.757812\n43\n1.093023\nFalse\n7\n2261.504639\n10\n2.100000\n\n\n90\n2005\n2077.328125\n34\n1.382353\nFalse\n7\n2234.020264\n11\n1.909091\n\n\n48\n2004\n1856.578125\n40\n1.175000\nFalse\n7\n2211.520264\n12\n1.750000\n\n\n258\n2009\n2169.906250\n33\n1.424242\nFalse\n7\n2082.295410\n13\n1.615385\n\n\n412\n2013\n1611.937500\n45\n1.044444\nFalse\n7\n2063.768066\n14\n1.500000\n\n\n692\n2021\n2253.296875\n31\n1.516129\nFalse\n7\n1984.978149\n15\n1.400000\n\n\n174\n2007\n2235.781250\n32\n1.468750\nFalse\n7\n1938.017944\n16\n1.312500\n\n\n552\n2017\n1717.898438\n44\n1.068182\nFalse\n7\n1890.542969\n17\n1.235294\n\n\n482\n2015\n1563.804688\n46\n1.021739\nFalse\n7\n1885.032837\n18\n1.166667\n\n\n342\n2011\n2461.625000\n25\n1.880000\nFalse\n7\n1815.300049\n19\n1.105263\n\n\n657\n2020\n1946.828125\n37\n1.270270\nFalse\n7\n1759.241455\n20\n1.050000\n\n\n\n\n\n\n\n8\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.000000\n\n\n7\n2003\n3312.015625\n13\n3.615385\nTrue\n8\n3513.040527\n2\n10.500000\n\n\n518\n2016\n2364.773438\n30\n1.566667\nFalse\n8\n3245.839844\n3\n7.000000\n\n\n301\n2010\n3109.257812\n16\n2.937500\nFalse\n8\n2951.446045\n4\n5.250000\n\n\n378\n2012\n3110.078125\n15\n3.133333\nTrue\n8\n2878.091309\n5\n4.200000\n\n\n448\n2014\n2918.125000\n17\n2.764706\nFalse\n8\n2866.851562\n6\n3.500000\n\n\n623\n2019\n2440.054688\n26\n1.807692\nFalse\n8\n2777.289795\n7\n3.000000\n\n\n217\n2008\n2627.976562\n22\n2.136364\nFalse\n8\n2516.689941\n8\n2.625000\n\n\n588\n2018\n2547.906250\n23\n2.043478\nFalse\n8\n2438.317139\n9\n2.333333\n\n\n413\n2013\n1611.937500\n45\n1.044444\nFalse\n8\n2335.428223\n10\n2.100000\n\n\n91\n2005\n2077.328125\n34\n1.382353\nFalse\n8\n2247.510986\n11\n1.909091\n\n\n133\n2006\n1733.757812\n43\n1.093023\nFalse\n8\n2209.033691\n12\n1.750000\n\n\n658\n2020\n1946.828125\n37\n1.270270\nFalse\n8\n2109.162598\n13\n1.615385\n\n\n49\n2004\n1856.578125\n40\n1.175000\nFalse\n8\n2080.824951\n14\n1.500000\n\n\n259\n2009\n2169.906250\n33\n1.424242\nFalse\n8\n2080.200684\n15\n1.400000\n\n\n693\n2021\n2253.296875\n31\n1.516129\nFalse\n8\n2055.500732\n16\n1.312500\n\n\n175\n2007\n2235.781250\n32\n1.468750\nFalse\n8\n2035.655518\n17\n1.235294\n\n\n483\n2015\n1563.804688\n46\n1.021739\nFalse\n8\n2011.271851\n18\n1.166667\n\n\n343\n2011\n2461.625000\n25\n1.880000\nFalse\n8\n1959.099976\n19\n1.105263\n\n\n553\n2017\n1717.898438\n44\n1.068182\nFalse\n8\n1869.302368\n20\n1.050000\n\n\n\n\n\n\n\n9\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.000000\n\n\n8\n2003\n3312.015625\n13\n3.615385\nTrue\n9\n4168.186035\n2\n10.500000\n\n\n519\n2016\n2364.773438\n30\n1.566667\nFalse\n9\n3272.172607\n3\n7.000000\n\n\n449\n2014\n2918.125000\n17\n2.764706\nFalse\n9\n3053.992188\n4\n5.250000\n\n\n379\n2012\n3110.078125\n15\n3.133333\nTrue\n9\n3002.795410\n5\n4.200000\n\n\n302\n2010\n3109.257812\n16\n2.937500\nFalse\n9\n2983.337402\n6\n3.500000\n\n\n624\n2019\n2440.054688\n26\n1.807692\nFalse\n9\n2884.680420\n7\n3.000000\n\n\n218\n2008\n2627.976562\n22\n2.136364\nFalse\n9\n2855.285889\n8\n2.625000\n\n\n414\n2013\n1611.937500\n45\n1.044444\nFalse\n9\n2598.707764\n9\n2.333333\n\n\n589\n2018\n2547.906250\n23\n2.043478\nFalse\n9\n2541.093750\n10\n2.100000\n\n\n176\n2007\n2235.781250\n32\n1.468750\nFalse\n9\n2462.813965\n11\n1.909091\n\n\n92\n2005\n2077.328125\n34\n1.382353\nFalse\n9\n2322.322754\n12\n1.750000\n\n\n484\n2015\n1563.804688\n46\n1.021739\nFalse\n9\n2248.845215\n13\n1.615385\n\n\n134\n2006\n1733.757812\n43\n1.093023\nFalse\n9\n2207.876465\n14\n1.500000\n\n\n659\n2020\n1946.828125\n37\n1.270270\nFalse\n9\n2153.165527\n15\n1.400000\n\n\n260\n2009\n2169.906250\n33\n1.424242\nFalse\n9\n2080.397705\n16\n1.312500\n\n\n50\n2004\n1856.578125\n40\n1.175000\nFalse\n9\n1986.338257\n17\n1.235294\n\n\n344\n2011\n2461.625000\n25\n1.880000\nFalse\n9\n1947.707764\n18\n1.166667\n\n\n554\n2017\n1717.898438\n44\n1.068182\nFalse\n9\n1893.875000\n19\n1.105263\n\n\n694\n2021\n2253.296875\n31\n1.516129\nFalse\n9\n1870.251587\n20\n1.050000\n\n\n\n\n\n\n\n10\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.000000\n\n\n9\n2003\n3312.015625\n13\n3.615385\nTrue\n10\n3884.729736\n2\n10.500000\n\n\n450\n2014\n2918.125000\n17\n2.764706\nFalse\n10\n3130.156250\n3\n7.000000\n\n\n219\n2008\n2627.976562\n22\n2.136364\nFalse\n10\n3102.133545\n4\n5.250000\n\n\n380\n2012\n3110.078125\n15\n3.133333\nTrue\n10\n3046.353027\n5\n4.200000\n\n\n520\n2016\n2364.773438\n30\n1.566667\nFalse\n10\n2987.764160\n6\n3.500000\n\n\n625\n2019\n2440.054688\n26\n1.807692\nFalse\n10\n2952.456299\n7\n3.000000\n\n\n303\n2010\n3109.257812\n16\n2.937500\nFalse\n10\n2949.857910\n8\n2.625000\n\n\n590\n2018\n2547.906250\n23\n2.043478\nFalse\n10\n2837.032715\n9\n2.333333\n\n\n177\n2007\n2235.781250\n32\n1.468750\nFalse\n10\n2570.506348\n10\n2.100000\n\n\n415\n2013\n1611.937500\n45\n1.044444\nFalse\n10\n2542.101562\n11\n1.909091\n\n\n93\n2005\n2077.328125\n34\n1.382353\nFalse\n10\n2399.562500\n12\n1.750000\n\n\n135\n2006\n1733.757812\n43\n1.093023\nFalse\n10\n2273.980469\n13\n1.615385\n\n\n555\n2017\n1717.898438\n44\n1.068182\nFalse\n10\n2194.556152\n14\n1.500000\n\n\n660\n2020\n1946.828125\n37\n1.270270\nFalse\n10\n2175.901611\n15\n1.400000\n\n\n485\n2015\n1563.804688\n46\n1.021739\nFalse\n10\n2161.073486\n16\n1.312500\n\n\n261\n2009\n2169.906250\n33\n1.424242\nFalse\n10\n2040.250732\n17\n1.235294\n\n\n345\n2011\n2461.625000\n25\n1.880000\nFalse\n10\n2030.774170\n18\n1.166667\n\n\n51\n2004\n1856.578125\n40\n1.175000\nFalse\n10\n2021.339111\n19\n1.105263\n\n\n695\n2021\n2253.296875\n31\n1.516129\nFalse\n10\n1825.745361\n20\n1.050000\n\n\n\n\n\n\n\n11\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.000000\n\n\n10\n2003\n3312.015625\n13\n3.615385\nTrue\n11\n3656.573486\n2\n10.500000\n\n\n626\n2019\n2440.054688\n26\n1.807692\nFalse\n11\n3207.782715\n3\n7.000000\n\n\n381\n2012\n3110.078125\n15\n3.133333\nTrue\n11\n3155.737549\n4\n5.250000\n\n\n304\n2010\n3109.257812\n16\n2.937500\nFalse\n11\n3005.026611\n5\n4.200000\n\n\n451\n2014\n2918.125000\n17\n2.764706\nFalse\n11\n2981.092285\n6\n3.500000\n\n\n521\n2016\n2364.773438\n30\n1.566667\nFalse\n11\n2966.846924\n7\n3.000000\n\n\n591\n2018\n2547.906250\n23\n2.043478\nFalse\n11\n2845.770264\n8\n2.625000\n\n\n220\n2008\n2627.976562\n22\n2.136364\nFalse\n11\n2740.811768\n9\n2.333333\n\n\n416\n2013\n1611.937500\n45\n1.044444\nFalse\n11\n2608.250000\n10\n2.100000\n\n\n178\n2007\n2235.781250\n32\n1.468750\nFalse\n11\n2531.921143\n11\n1.909091\n\n\n94\n2005\n2077.328125\n34\n1.382353\nFalse\n11\n2351.535889\n12\n1.750000\n\n\n136\n2006\n1733.757812\n43\n1.093023\nFalse\n11\n2298.617920\n13\n1.615385\n\n\n661\n2020\n1946.828125\n37\n1.270270\nFalse\n11\n2292.447754\n14\n1.500000\n\n\n556\n2017\n1717.898438\n44\n1.068182\nFalse\n11\n2232.194580\n15\n1.400000\n\n\n696\n2021\n2253.296875\n31\n1.516129\nFalse\n11\n2224.154785\n16\n1.312500\n\n\n486\n2015\n1563.804688\n46\n1.021739\nFalse\n11\n2105.766357\n17\n1.235294\n\n\n346\n2011\n2461.625000\n25\n1.880000\nFalse\n11\n2072.100830\n18\n1.166667\n\n\n52\n2004\n1856.578125\n40\n1.175000\nFalse\n11\n2069.242920\n19\n1.105263\n\n\n262\n2009\n2169.906250\n33\n1.424242\nFalse\n11\n2047.427368\n20\n1.050000\n\n\n\n\n\n\n\n12\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.000000\n\n\n11\n2003\n3312.015625\n13\n3.615385\nTrue\n12\n3436.365723\n2\n10.500000\n\n\n627\n2019\n2440.054688\n26\n1.807692\nFalse\n12\n3434.835938\n3\n7.000000\n\n\n382\n2012\n3110.078125\n15\n3.133333\nTrue\n12\n3430.692871\n4\n5.250000\n\n\n522\n2016\n2364.773438\n30\n1.566667\nFalse\n12\n3130.512451\n5\n4.200000\n\n\n305\n2010\n3109.257812\n16\n2.937500\nFalse\n12\n3091.381348\n6\n3.500000\n\n\n452\n2014\n2918.125000\n17\n2.764706\nFalse\n12\n2914.449951\n7\n3.000000\n\n\n592\n2018\n2547.906250\n23\n2.043478\nFalse\n12\n2847.493652\n8\n2.625000\n\n\n417\n2013\n1611.937500\n45\n1.044444\nFalse\n12\n2835.856201\n9\n2.333333\n\n\n221\n2008\n2627.976562\n22\n2.136364\nFalse\n12\n2770.804688\n10\n2.100000\n\n\n137\n2006\n1733.757812\n43\n1.093023\nFalse\n12\n2576.548340\n11\n1.909091\n\n\n179\n2007\n2235.781250\n32\n1.468750\nFalse\n12\n2574.446777\n12\n1.750000\n\n\n662\n2020\n1946.828125\n37\n1.270270\nFalse\n12\n2390.595215\n13\n1.615385\n\n\n95\n2005\n2077.328125\n34\n1.382353\nFalse\n12\n2355.550781\n14\n1.500000\n\n\n53\n2004\n1856.578125\n40\n1.175000\nFalse\n12\n2337.253906\n15\n1.400000\n\n\n557\n2017\n1717.898438\n44\n1.068182\nFalse\n12\n2127.640625\n16\n1.312500\n\n\n487\n2015\n1563.804688\n46\n1.021739\nFalse\n12\n2124.323486\n17\n1.235294\n\n\n263\n2009\n2169.906250\n33\n1.424242\nFalse\n12\n2085.184326\n18\n1.166667\n\n\n697\n2021\n2253.296875\n31\n1.516129\nFalse\n12\n2040.683594\n19\n1.105263\n\n\n347\n2011\n2461.625000\n25\n1.880000\nFalse\n12\n1984.993774\n20\n1.050000\n\n\n\n\n\n\n\n13\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.000000\n\n\n383\n2012\n3110.078125\n15\n3.133333\nTrue\n13\n3616.585938\n2\n10.500000\n\n\n628\n2019\n2440.054688\n26\n1.807692\nFalse\n13\n3606.074219\n3\n7.000000\n\n\n523\n2016\n2364.773438\n30\n1.566667\nFalse\n13\n3326.977295\n4\n5.250000\n\n\n222\n2008\n2627.976562\n22\n2.136364\nFalse\n13\n3310.464844\n5\n4.200000\n\n\n12\n2003\n3312.015625\n13\n3.615385\nTrue\n13\n3299.831299\n6\n3.500000\n\n\n306\n2010\n3109.257812\n16\n2.937500\nFalse\n13\n3074.898438\n7\n3.000000\n\n\n453\n2014\n2918.125000\n17\n2.764706\nFalse\n13\n2910.507812\n8\n2.625000\n\n\n593\n2018\n2547.906250\n23\n2.043478\nFalse\n13\n2837.528076\n9\n2.333333\n\n\n418\n2013\n1611.937500\n45\n1.044444\nFalse\n13\n2807.521973\n10\n2.100000\n\n\n54\n2004\n1856.578125\n40\n1.175000\nFalse\n13\n2543.754639\n11\n1.909091\n\n\n138\n2006\n1733.757812\n43\n1.093023\nFalse\n13\n2522.348389\n12\n1.750000\n\n\n180\n2007\n2235.781250\n32\n1.468750\nFalse\n13\n2480.971191\n13\n1.615385\n\n\n96\n2005\n2077.328125\n34\n1.382353\nFalse\n13\n2408.020264\n14\n1.500000\n\n\n663\n2020\n1946.828125\n37\n1.270270\nFalse\n13\n2338.998535\n15\n1.400000\n\n\n488\n2015\n1563.804688\n46\n1.021739\nFalse\n13\n2140.254639\n16\n1.312500\n\n\n558\n2017\n1717.898438\n44\n1.068182\nFalse\n13\n2128.586670\n17\n1.235294\n\n\n264\n2009\n2169.906250\n33\n1.424242\nFalse\n13\n2059.216309\n18\n1.166667\n\n\n698\n2021\n2253.296875\n31\n1.516129\nFalse\n13\n1985.189819\n19\n1.105263\n\n\n348\n2011\n2461.625000\n25\n1.880000\nFalse\n13\n1962.375000\n20\n1.050000\n\n\n\n\n\n\n\n14\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.000000\n\n\n629\n2019\n2440.054688\n26\n1.807692\nFalse\n14\n4206.456055\n2\n10.500000\n\n\n13\n2003\n3312.015625\n13\n3.615385\nTrue\n14\n3585.143799\n3\n7.000000\n\n\n384\n2012\n3110.078125\n15\n3.133333\nTrue\n14\n3555.796143\n4\n5.250000\n\n\n223\n2008\n2627.976562\n22\n2.136364\nFalse\n14\n3372.488281\n5\n4.200000\n\n\n524\n2016\n2364.773438\n30\n1.566667\nFalse\n14\n3361.499268\n6\n3.500000\n\n\n307\n2010\n3109.257812\n16\n2.937500\nFalse\n14\n3272.597656\n7\n3.000000\n\n\n594\n2018\n2547.906250\n23\n2.043478\nFalse\n14\n3150.574219\n8\n2.625000\n\n\n454\n2014\n2918.125000\n17\n2.764706\nFalse\n14\n2894.421143\n9\n2.333333\n\n\n419\n2013\n1611.937500\n45\n1.044444\nFalse\n14\n2753.554688\n10\n2.100000\n\n\n97\n2005\n2077.328125\n34\n1.382353\nFalse\n14\n2656.009277\n11\n1.909091\n\n\n55\n2004\n1856.578125\n40\n1.175000\nFalse\n14\n2600.258545\n12\n1.750000\n\n\n699\n2021\n2253.296875\n31\n1.516129\nFalse\n14\n2515.974121\n13\n1.615385\n\n\n139\n2006\n1733.757812\n43\n1.093023\nFalse\n14\n2460.826660\n14\n1.500000\n\n\n181\n2007\n2235.781250\n32\n1.468750\nFalse\n14\n2400.378906\n15\n1.400000\n\n\n559\n2017\n1717.898438\n44\n1.068182\nFalse\n14\n2199.871094\n16\n1.312500\n\n\n664\n2020\n1946.828125\n37\n1.270270\nFalse\n14\n2147.332031\n17\n1.235294\n\n\n489\n2015\n1563.804688\n46\n1.021739\nFalse\n14\n2124.542236\n18\n1.166667\n\n\n265\n2009\n2169.906250\n33\n1.424242\nFalse\n14\n2004.468018\n19\n1.105263\n\n\n349\n2011\n2461.625000\n25\n1.880000\nFalse\n14\n1983.193726\n20\n1.050000\n\n\n\n\n\n\n\n15\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.000000\n\n\n630\n2019\n2440.054688\n26\n1.807692\nFalse\n15\n4276.037598\n2\n10.500000\n\n\n14\n2003\n3312.015625\n13\n3.615385\nTrue\n15\n3611.556152\n3\n7.000000\n\n\n385\n2012\n3110.078125\n15\n3.133333\nTrue\n15\n3589.854004\n4\n5.250000\n\n\n595\n2018\n2547.906250\n23\n2.043478\nFalse\n15\n3478.265625\n5\n4.200000\n\n\n308\n2010\n3109.257812\n16\n2.937500\nFalse\n15\n3376.037598\n6\n3.500000\n\n\n224\n2008\n2627.976562\n22\n2.136364\nFalse\n15\n3294.430420\n7\n3.000000\n\n\n525\n2016\n2364.773438\n30\n1.566667\nFalse\n15\n3213.968018\n8\n2.625000\n\n\n455\n2014\n2918.125000\n17\n2.764706\nFalse\n15\n2862.593018\n9\n2.333333\n\n\n420\n2013\n1611.937500\n45\n1.044444\nFalse\n15\n2850.926514\n10\n2.100000\n\n\n98\n2005\n2077.328125\n34\n1.382353\nFalse\n15\n2759.575684\n11\n1.909091\n\n\n56\n2004\n1856.578125\n40\n1.175000\nFalse\n15\n2587.113281\n12\n1.750000\n\n\n182\n2007\n2235.781250\n32\n1.468750\nFalse\n15\n2440.589111\n13\n1.615385\n\n\n140\n2006\n1733.757812\n43\n1.093023\nFalse\n15\n2389.529785\n14\n1.500000\n\n\n700\n2021\n2253.296875\n31\n1.516129\nFalse\n15\n2355.988281\n15\n1.400000\n\n\n560\n2017\n1717.898438\n44\n1.068182\nFalse\n15\n2303.199951\n16\n1.312500\n\n\n665\n2020\n1946.828125\n37\n1.270270\nFalse\n15\n2221.981934\n17\n1.235294\n\n\n490\n2015\n1563.804688\n46\n1.021739\nFalse\n15\n2035.267944\n18\n1.166667\n\n\n350\n2011\n2461.625000\n25\n1.880000\nFalse\n15\n1994.336670\n19\n1.105263\n\n\n266\n2009\n2169.906250\n33\n1.424242\nFalse\n15\n1936.435913\n20\n1.050000\n\n\n\n\n\n\n\n16\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.000000\n\n\n631\n2019\n2440.054688\n26\n1.807692\nFalse\n16\n4280.247070\n2\n10.500000\n\n\n386\n2012\n3110.078125\n15\n3.133333\nTrue\n16\n3641.906250\n3\n7.000000\n\n\n596\n2018\n2547.906250\n23\n2.043478\nFalse\n16\n3500.192871\n4\n5.250000\n\n\n15\n2003\n3312.015625\n13\n3.615385\nTrue\n16\n3435.570312\n5\n4.200000\n\n\n309\n2010\n3109.257812\n16\n2.937500\nFalse\n16\n3422.400879\n6\n3.500000\n\n\n225\n2008\n2627.976562\n22\n2.136364\nFalse\n16\n3200.137451\n7\n3.000000\n\n\n526\n2016\n2364.773438\n30\n1.566667\nFalse\n16\n3093.049316\n8\n2.625000\n\n\n456\n2014\n2918.125000\n17\n2.764706\nFalse\n16\n3001.919434\n9\n2.333333\n\n\n421\n2013\n1611.937500\n45\n1.044444\nFalse\n16\n2796.359375\n10\n2.100000\n\n\n99\n2005\n2077.328125\n34\n1.382353\nFalse\n16\n2667.139893\n11\n1.909091\n\n\n57\n2004\n1856.578125\n40\n1.175000\nFalse\n16\n2564.686035\n12\n1.750000\n\n\n183\n2007\n2235.781250\n32\n1.468750\nFalse\n16\n2556.750732\n13\n1.615385\n\n\n141\n2006\n1733.757812\n43\n1.093023\nFalse\n16\n2387.848389\n14\n1.500000\n\n\n561\n2017\n1717.898438\n44\n1.068182\nFalse\n16\n2303.936035\n15\n1.400000\n\n\n701\n2021\n2253.296875\n31\n1.516129\nFalse\n16\n2206.438965\n16\n1.312500\n\n\n267\n2009\n2169.906250\n33\n1.424242\nFalse\n16\n2114.946777\n17\n1.235294\n\n\n666\n2020\n1946.828125\n37\n1.270270\nFalse\n16\n2091.325684\n18\n1.166667\n\n\n491\n2015\n1563.804688\n46\n1.021739\nFalse\n16\n1995.718750\n19\n1.105263\n\n\n351\n2011\n2461.625000\n25\n1.880000\nFalse\n16\n1974.437500\n20\n1.050000\n\n\n\n\n\n\n\n17\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.000000\n\n\n632\n2019\n2440.054688\n26\n1.807692\nFalse\n17\n4235.119629\n2\n10.500000\n\n\n387\n2012\n3110.078125\n15\n3.133333\nTrue\n17\n3607.707031\n3\n7.000000\n\n\n310\n2010\n3109.257812\n16\n2.937500\nFalse\n17\n3511.781250\n4\n5.250000\n\n\n597\n2018\n2547.906250\n23\n2.043478\nFalse\n17\n3384.812500\n5\n4.200000\n\n\n16\n2003\n3312.015625\n13\n3.615385\nTrue\n17\n3381.089844\n6\n3.500000\n\n\n100\n2005\n2077.328125\n34\n1.382353\nFalse\n17\n3363.745361\n7\n3.000000\n\n\n457\n2014\n2918.125000\n17\n2.764706\nFalse\n17\n3126.486816\n8\n2.625000\n\n\n226\n2008\n2627.976562\n22\n2.136364\nFalse\n17\n3124.878906\n9\n2.333333\n\n\n527\n2016\n2364.773438\n30\n1.566667\nFalse\n17\n3094.968750\n10\n2.100000\n\n\n58\n2004\n1856.578125\n40\n1.175000\nFalse\n17\n2714.354736\n11\n1.909091\n\n\n422\n2013\n1611.937500\n45\n1.044444\nFalse\n17\n2699.403076\n12\n1.750000\n\n\n184\n2007\n2235.781250\n32\n1.468750\nFalse\n17\n2579.688965\n13\n1.615385\n\n\n268\n2009\n2169.906250\n33\n1.424242\nFalse\n17\n2465.034424\n14\n1.500000\n\n\n142\n2006\n1733.757812\n43\n1.093023\nFalse\n17\n2402.655518\n15\n1.400000\n\n\n352\n2011\n2461.625000\n25\n1.880000\nFalse\n17\n2375.042236\n16\n1.312500\n\n\n562\n2017\n1717.898438\n44\n1.068182\nFalse\n17\n2297.554688\n17\n1.235294\n\n\n702\n2021\n2253.296875\n31\n1.516129\nFalse\n17\n2127.293701\n18\n1.166667\n\n\n667\n2020\n1946.828125\n37\n1.270270\nFalse\n17\n2030.507812\n19\n1.105263\n\n\n492\n2015\n1563.804688\n46\n1.021739\nFalse\n17\n1987.625000\n20\n1.050000\n\n\n\n\n\n\n\n18\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.000000\n\n\n633\n2019\n2440.054688\n26\n1.807692\nFalse\n18\n4221.865723\n2\n10.500000\n\n\n311\n2010\n3109.257812\n16\n2.937500\nFalse\n18\n3675.436035\n3\n7.000000\n\n\n388\n2012\n3110.078125\n15\n3.133333\nTrue\n18\n3671.963379\n4\n5.250000\n\n\n101\n2005\n2077.328125\n34\n1.382353\nFalse\n18\n3565.345215\n5\n4.200000\n\n\n598\n2018\n2547.906250\n23\n2.043478\nFalse\n18\n3413.993652\n6\n3.500000\n\n\n17\n2003\n3312.015625\n13\n3.615385\nTrue\n18\n3390.378174\n7\n3.000000\n\n\n528\n2016\n2364.773438\n30\n1.566667\nFalse\n18\n3209.057129\n8\n2.625000\n\n\n227\n2008\n2627.976562\n22\n2.136364\nFalse\n18\n3146.676514\n9\n2.333333\n\n\n458\n2014\n2918.125000\n17\n2.764706\nFalse\n18\n3107.274902\n10\n2.100000\n\n\n59\n2004\n1856.578125\n40\n1.175000\nFalse\n18\n2735.727295\n11\n1.909091\n\n\n423\n2013\n1611.937500\n45\n1.044444\nFalse\n18\n2732.317871\n12\n1.750000\n\n\n185\n2007\n2235.781250\n32\n1.468750\nFalse\n18\n2578.435059\n13\n1.615385\n\n\n143\n2006\n1733.757812\n43\n1.093023\nFalse\n18\n2564.401611\n14\n1.500000\n\n\n353\n2011\n2461.625000\n25\n1.880000\nFalse\n18\n2459.244629\n15\n1.400000\n\n\n269\n2009\n2169.906250\n33\n1.424242\nFalse\n18\n2440.768799\n16\n1.312500\n\n\n563\n2017\n1717.898438\n44\n1.068182\nFalse\n18\n2333.400879\n17\n1.235294\n\n\n703\n2021\n2253.296875\n31\n1.516129\nFalse\n18\n2152.481934\n18\n1.166667\n\n\n668\n2020\n1946.828125\n37\n1.270270\nFalse\n18\n2108.318848\n19\n1.105263\n\n\n493\n2015\n1563.804688\n46\n1.021739\nFalse\n18\n2044.080444\n20\n1.050000\n\n\n\n\n\n\n\n19\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.000000\n\n\n634\n2019\n2440.054688\n26\n1.807692\nFalse\n19\n4152.004883\n2\n10.500000\n\n\n389\n2012\n3110.078125\n15\n3.133333\nTrue\n19\n3962.628906\n3\n7.000000\n\n\n18\n2003\n3312.015625\n13\n3.615385\nTrue\n19\n3741.350098\n4\n5.250000\n\n\n312\n2010\n3109.257812\n16\n2.937500\nFalse\n19\n3498.435059\n5\n4.200000\n\n\n529\n2016\n2364.773438\n30\n1.566667\nFalse\n19\n3443.883545\n6\n3.500000\n\n\n102\n2005\n2077.328125\n34\n1.382353\nFalse\n19\n3313.789795\n7\n3.000000\n\n\n599\n2018\n2547.906250\n23\n2.043478\nFalse\n19\n3276.764160\n8\n2.625000\n\n\n228\n2008\n2627.976562\n22\n2.136364\nFalse\n19\n3195.050049\n9\n2.333333\n\n\n459\n2014\n2918.125000\n17\n2.764706\nFalse\n19\n3104.677246\n10\n2.100000\n\n\n424\n2013\n1611.937500\n45\n1.044444\nFalse\n19\n2830.760986\n11\n1.909091\n\n\n60\n2004\n1856.578125\n40\n1.175000\nFalse\n19\n2692.922607\n12\n1.750000\n\n\n186\n2007\n2235.781250\n32\n1.468750\nFalse\n19\n2554.841309\n13\n1.615385\n\n\n144\n2006\n1733.757812\n43\n1.093023\nFalse\n19\n2478.762451\n14\n1.500000\n\n\n564\n2017\n1717.898438\n44\n1.068182\nFalse\n19\n2437.750732\n15\n1.400000\n\n\n354\n2011\n2461.625000\n25\n1.880000\nFalse\n19\n2336.671143\n16\n1.312500\n\n\n270\n2009\n2169.906250\n33\n1.424242\nFalse\n19\n2295.481934\n17\n1.235294\n\n\n494\n2015\n1563.804688\n46\n1.021739\nFalse\n19\n2193.509277\n18\n1.166667\n\n\n704\n2021\n2253.296875\n31\n1.516129\nFalse\n19\n2128.141357\n19\n1.105263\n\n\n669\n2020\n1946.828125\n37\n1.270270\nFalse\n19\n2122.813232\n20\n1.050000\n\n\n\n\n\n\n\n20\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n740\n2022\n5347.171875\n3\n15.666667\nTrue\n20\n4370.446777\n1\n21.000000\n\n\n635\n2019\n2440.054688\n26\n1.807692\nFalse\n20\n4100.204590\n2\n10.500000\n\n\n390\n2012\n3110.078125\n15\n3.133333\nTrue\n20\n4093.915527\n3\n7.000000\n\n\n19\n2003\n3312.015625\n13\n3.615385\nTrue\n20\n3633.509277\n4\n5.250000\n\n\n313\n2010\n3109.257812\n16\n2.937500\nFalse\n20\n3560.328125\n5\n4.200000\n\n\n530\n2016\n2364.773438\n30\n1.566667\nFalse\n20\n3476.871826\n6\n3.500000\n\n\n600\n2018\n2547.906250\n23\n2.043478\nFalse\n20\n3443.896973\n7\n3.000000\n\n\n103\n2005\n2077.328125\n34\n1.382353\nFalse\n20\n3430.406250\n8\n2.625000\n\n\n460\n2014\n2918.125000\n17\n2.764706\nFalse\n20\n3150.381348\n9\n2.333333\n\n\n229\n2008\n2627.976562\n22\n2.136364\nFalse\n20\n3040.161621\n10\n2.100000\n\n\n425\n2013\n1611.937500\n45\n1.044444\nFalse\n20\n2878.145264\n11\n1.909091\n\n\n61\n2004\n1856.578125\n40\n1.175000\nFalse\n20\n2667.803223\n12\n1.750000\n\n\n145\n2006\n1733.757812\n43\n1.093023\nFalse\n20\n2571.941406\n13\n1.615385\n\n\n187\n2007\n2235.781250\n32\n1.468750\nFalse\n20\n2553.252441\n14\n1.500000\n\n\n565\n2017\n1717.898438\n44\n1.068182\nFalse\n20\n2442.731934\n15\n1.400000\n\n\n355\n2011\n2461.625000\n25\n1.880000\nFalse\n20\n2322.174316\n16\n1.312500\n\n\n495\n2015\n1563.804688\n46\n1.021739\nFalse\n20\n2283.583496\n17\n1.235294\n\n\n271\n2009\n2169.906250\n33\n1.424242\nFalse\n20\n2278.891357\n18\n1.166667\n\n\n670\n2020\n1946.828125\n37\n1.270270\nFalse\n20\n2176.893066\n19\n1.105263\n\n\n705\n2021\n2253.296875\n31\n1.516129\nFalse\n20\n2106.031250\n20\n1.050000\n\n\n\n\n\n\n\n21\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.000000\n\n\n636\n2019\n2440.054688\n26\n1.807692\nFalse\n21\n4074.775879\n2\n10.500000\n\n\n391\n2012\n3110.078125\n15\n3.133333\nTrue\n21\n3963.624268\n3\n7.000000\n\n\n601\n2018\n2547.906250\n23\n2.043478\nFalse\n21\n3721.829590\n4\n5.250000\n\n\n20\n2003\n3312.015625\n13\n3.615385\nTrue\n21\n3619.495361\n5\n4.200000\n\n\n314\n2010\n3109.257812\n16\n2.937500\nFalse\n21\n3598.410156\n6\n3.500000\n\n\n104\n2005\n2077.328125\n34\n1.382353\nFalse\n21\n3517.120361\n7\n3.000000\n\n\n531\n2016\n2364.773438\n30\n1.566667\nFalse\n21\n3391.388184\n8\n2.625000\n\n\n230\n2008\n2627.976562\n22\n2.136364\nFalse\n21\n3324.677246\n9\n2.333333\n\n\n461\n2014\n2918.125000\n17\n2.764706\nFalse\n21\n3181.980469\n10\n2.100000\n\n\n426\n2013\n1611.937500\n45\n1.044444\nFalse\n21\n2937.374268\n11\n1.909091\n\n\n146\n2006\n1733.757812\n43\n1.093023\nFalse\n21\n2805.963379\n12\n1.750000\n\n\n62\n2004\n1856.578125\n40\n1.175000\nFalse\n21\n2602.907715\n13\n1.615385\n\n\n188\n2007\n2235.781250\n32\n1.468750\nFalse\n21\n2579.326660\n14\n1.500000\n\n\n272\n2009\n2169.906250\n33\n1.424242\nFalse\n21\n2497.679688\n15\n1.400000\n\n\n356\n2011\n2461.625000\n25\n1.880000\nFalse\n21\n2432.846924\n16\n1.312500\n\n\n566\n2017\n1717.898438\n44\n1.068182\nFalse\n21\n2410.555420\n17\n1.235294\n\n\n706\n2021\n2253.296875\n31\n1.516129\nFalse\n21\n2376.033691\n18\n1.166667\n\n\n496\n2015\n1563.804688\n46\n1.021739\nFalse\n21\n2258.905518\n19\n1.105263\n\n\n671\n2020\n1946.828125\n37\n1.270270\nFalse\n21\n2179.520996\n20\n1.050000\n\n\n\n\n\n\n\n22\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.000000\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.500000\n\n\n637\n2019\n2440.054688\n26\n1.807692\nFalse\n22\n4052.706299\n3\n7.000000\n\n\n392\n2012\n3110.078125\n15\n3.133333\nTrue\n22\n3939.905518\n4\n5.250000\n\n\n21\n2003\n3312.015625\n13\n3.615385\nTrue\n22\n3930.385254\n5\n4.200000\n\n\n315\n2010\n3109.257812\n16\n2.937500\nFalse\n22\n3689.212402\n6\n3.500000\n\n\n602\n2018\n2547.906250\n23\n2.043478\nFalse\n22\n3508.798340\n7\n3.000000\n\n\n532\n2016\n2364.773438\n30\n1.566667\nFalse\n22\n3426.333496\n8\n2.625000\n\n\n105\n2005\n2077.328125\n34\n1.382353\nFalse\n22\n3389.492188\n9\n2.333333\n\n\n462\n2014\n2918.125000\n17\n2.764706\nFalse\n22\n3168.637451\n10\n2.100000\n\n\n427\n2013\n1611.937500\n45\n1.044444\nFalse\n22\n3082.121826\n11\n1.909091\n\n\n147\n2006\n1733.757812\n43\n1.093023\nFalse\n22\n2888.272705\n12\n1.750000\n\n\n63\n2004\n1856.578125\n40\n1.175000\nFalse\n22\n2644.097656\n13\n1.615385\n\n\n189\n2007\n2235.781250\n32\n1.468750\nFalse\n22\n2634.784424\n14\n1.500000\n\n\n273\n2009\n2169.906250\n33\n1.424242\nFalse\n22\n2560.157715\n15\n1.400000\n\n\n707\n2021\n2253.296875\n31\n1.516129\nFalse\n22\n2521.901611\n16\n1.312500\n\n\n567\n2017\n1717.898438\n44\n1.068182\nFalse\n22\n2416.279785\n17\n1.235294\n\n\n357\n2011\n2461.625000\n25\n1.880000\nFalse\n22\n2292.749268\n18\n1.166667\n\n\n672\n2020\n1946.828125\n37\n1.270270\nFalse\n22\n2253.074219\n19\n1.105263\n\n\n497\n2015\n1563.804688\n46\n1.021739\nFalse\n22\n2218.169434\n20\n1.050000\n\n\n\n\n\n\n\n23\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.000000\n\n\n232\n2008\n2627.976562\n22\n2.136364\nFalse\n23\n4330.622070\n2\n10.500000\n\n\n22\n2003\n3312.015625\n13\n3.615385\nTrue\n23\n4284.916992\n3\n7.000000\n\n\n638\n2019\n2440.054688\n26\n1.807692\nFalse\n23\n3917.177246\n4\n5.250000\n\n\n316\n2010\n3109.257812\n16\n2.937500\nFalse\n23\n3745.367920\n5\n4.200000\n\n\n393\n2012\n3110.078125\n15\n3.133333\nTrue\n23\n3744.360107\n6\n3.500000\n\n\n428\n2013\n1611.937500\n45\n1.044444\nFalse\n23\n3551.530518\n7\n3.000000\n\n\n533\n2016\n2364.773438\n30\n1.566667\nFalse\n23\n3462.914795\n8\n2.625000\n\n\n463\n2014\n2918.125000\n17\n2.764706\nFalse\n23\n3448.817871\n9\n2.333333\n\n\n603\n2018\n2547.906250\n23\n2.043478\nFalse\n23\n3402.272705\n10\n2.100000\n\n\n106\n2005\n2077.328125\n34\n1.382353\nFalse\n23\n3184.540527\n11\n1.909091\n\n\n148\n2006\n1733.757812\n43\n1.093023\nFalse\n23\n2867.206299\n12\n1.750000\n\n\n64\n2004\n1856.578125\n40\n1.175000\nFalse\n23\n2708.657715\n13\n1.615385\n\n\n190\n2007\n2235.781250\n32\n1.468750\nFalse\n23\n2614.193848\n14\n1.500000\n\n\n274\n2009\n2169.906250\n33\n1.424242\nFalse\n23\n2509.710938\n15\n1.400000\n\n\n568\n2017\n1717.898438\n44\n1.068182\nFalse\n23\n2369.024170\n16\n1.312500\n\n\n708\n2021\n2253.296875\n31\n1.516129\nFalse\n23\n2321.836670\n17\n1.235294\n\n\n358\n2011\n2461.625000\n25\n1.880000\nFalse\n23\n2254.087402\n18\n1.166667\n\n\n673\n2020\n1946.828125\n37\n1.270270\nFalse\n23\n2244.317139\n19\n1.105263\n\n\n498\n2015\n1563.804688\n46\n1.021739\nFalse\n23\n2231.615723\n20\n1.050000\n\n\n\n\n\n\n\n24\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.000000\n\n\n23\n2003\n3312.015625\n13\n3.615385\nTrue\n24\n4149.338379\n2\n10.500000\n\n\n233\n2008\n2627.976562\n22\n2.136364\nFalse\n24\n3861.968750\n3\n7.000000\n\n\n639\n2019\n2440.054688\n26\n1.807692\nFalse\n24\n3781.874268\n4\n5.250000\n\n\n317\n2010\n3109.257812\n16\n2.937500\nFalse\n24\n3774.731201\n5\n4.200000\n\n\n464\n2014\n2918.125000\n17\n2.764706\nFalse\n24\n3685.377441\n6\n3.500000\n\n\n394\n2012\n3110.078125\n15\n3.133333\nTrue\n24\n3589.878906\n7\n3.000000\n\n\n429\n2013\n1611.937500\n45\n1.044444\nFalse\n24\n3524.903076\n8\n2.625000\n\n\n604\n2018\n2547.906250\n23\n2.043478\nFalse\n24\n3507.772705\n9\n2.333333\n\n\n534\n2016\n2364.773438\n30\n1.566667\nFalse\n24\n3380.539062\n10\n2.100000\n\n\n569\n2017\n1717.898438\n44\n1.068182\nFalse\n24\n3213.797607\n11\n1.909091\n\n\n107\n2005\n2077.328125\n34\n1.382353\nFalse\n24\n3003.731201\n12\n1.750000\n\n\n149\n2006\n1733.757812\n43\n1.093023\nFalse\n24\n2905.469482\n13\n1.615385\n\n\n359\n2011\n2461.625000\n25\n1.880000\nFalse\n24\n2751.418701\n14\n1.500000\n\n\n65\n2004\n1856.578125\n40\n1.175000\nFalse\n24\n2748.601562\n15\n1.400000\n\n\n191\n2007\n2235.781250\n32\n1.468750\nFalse\n24\n2485.778809\n16\n1.312500\n\n\n275\n2009\n2169.906250\n33\n1.424242\nFalse\n24\n2462.849121\n17\n1.235294\n\n\n709\n2021\n2253.296875\n31\n1.516129\nFalse\n24\n2306.675781\n18\n1.166667\n\n\n499\n2015\n1563.804688\n46\n1.021739\nFalse\n24\n2298.803223\n19\n1.105263\n\n\n674\n2020\n1946.828125\n37\n1.270270\nFalse\n24\n2297.187500\n20\n1.050000\n\n\n\n\n\n\n\n25\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n745\n2022\n5347.171875\n3\n15.666667\nTrue\n25\n4283.742188\n1\n21.000000\n\n\n640\n2019\n2440.054688\n26\n1.807692\nFalse\n25\n3908.020264\n2\n10.500000\n\n\n318\n2010\n3109.257812\n16\n2.937500\nFalse\n25\n3777.850830\n3\n7.000000\n\n\n395\n2012\n3110.078125\n15\n3.133333\nTrue\n25\n3771.497559\n4\n5.250000\n\n\n24\n2003\n3312.015625\n13\n3.615385\nTrue\n25\n3712.468018\n5\n4.200000\n\n\n605\n2018\n2547.906250\n23\n2.043478\nFalse\n25\n3641.899170\n6\n3.500000\n\n\n234\n2008\n2627.976562\n22\n2.136364\nFalse\n25\n3540.319580\n7\n3.000000\n\n\n535\n2016\n2364.773438\n30\n1.566667\nFalse\n25\n3405.951660\n8\n2.625000\n\n\n430\n2013\n1611.937500\n45\n1.044444\nFalse\n25\n3343.114014\n9\n2.333333\n\n\n570\n2017\n1717.898438\n44\n1.068182\nFalse\n25\n3310.581299\n10\n2.100000\n\n\n360\n2011\n2461.625000\n25\n1.880000\nFalse\n25\n3289.377441\n11\n1.909091\n\n\n465\n2014\n2918.125000\n17\n2.764706\nFalse\n25\n3273.222656\n12\n1.750000\n\n\n150\n2006\n1733.757812\n43\n1.093023\nFalse\n25\n2941.777344\n13\n1.615385\n\n\n108\n2005\n2077.328125\n34\n1.382353\nFalse\n25\n2917.438965\n14\n1.500000\n\n\n66\n2004\n1856.578125\n40\n1.175000\nFalse\n25\n2782.664062\n15\n1.400000\n\n\n710\n2021\n2253.296875\n31\n1.516129\nFalse\n25\n2476.515625\n16\n1.312500\n\n\n500\n2015\n1563.804688\n46\n1.021739\nFalse\n25\n2440.973389\n17\n1.235294\n\n\n276\n2009\n2169.906250\n33\n1.424242\nFalse\n25\n2377.061768\n18\n1.166667\n\n\n192\n2007\n2235.781250\n32\n1.468750\nFalse\n25\n2361.335205\n19\n1.105263\n\n\n675\n2020\n1946.828125\n37\n1.270270\nFalse\n25\n2350.624268\n20\n1.050000\n\n\n\n\n\n\n\n26\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n746\n2022\n5347.171875\n3\n15.666667\nTrue\n26\n4140.292969\n1\n21.000000\n\n\n396\n2012\n3110.078125\n15\n3.133333\nTrue\n26\n3879.563965\n2\n10.500000\n\n\n641\n2019\n2440.054688\n26\n1.807692\nFalse\n26\n3853.460938\n3\n7.000000\n\n\n319\n2010\n3109.257812\n16\n2.937500\nFalse\n26\n3770.065674\n4\n5.250000\n\n\n606\n2018\n2547.906250\n23\n2.043478\nFalse\n26\n3641.786621\n5\n4.200000\n\n\n536\n2016\n2364.773438\n30\n1.566667\nFalse\n26\n3625.705566\n6\n3.500000\n\n\n25\n2003\n3312.015625\n13\n3.615385\nTrue\n26\n3418.561768\n7\n3.000000\n\n\n235\n2008\n2627.976562\n22\n2.136364\nFalse\n26\n3309.889893\n8\n2.625000\n\n\n431\n2013\n1611.937500\n45\n1.044444\nFalse\n26\n3290.109375\n9\n2.333333\n\n\n466\n2014\n2918.125000\n17\n2.764706\nFalse\n26\n3249.191406\n10\n2.100000\n\n\n361\n2011\n2461.625000\n25\n1.880000\nFalse\n26\n3240.885254\n11\n1.909091\n\n\n571\n2017\n1717.898438\n44\n1.068182\nFalse\n26\n2991.285156\n12\n1.750000\n\n\n151\n2006\n1733.757812\n43\n1.093023\nFalse\n26\n2859.625732\n13\n1.615385\n\n\n109\n2005\n2077.328125\n34\n1.382353\nFalse\n26\n2854.003174\n14\n1.500000\n\n\n67\n2004\n1856.578125\n40\n1.175000\nFalse\n26\n2755.899170\n15\n1.400000\n\n\n711\n2021\n2253.296875\n31\n1.516129\nFalse\n26\n2645.467285\n16\n1.312500\n\n\n501\n2015\n1563.804688\n46\n1.021739\nFalse\n26\n2425.869629\n17\n1.235294\n\n\n193\n2007\n2235.781250\n32\n1.468750\nFalse\n26\n2423.434326\n18\n1.166667\n\n\n676\n2020\n1946.828125\n37\n1.270270\nFalse\n26\n2339.421143\n19\n1.105263\n\n\n277\n2009\n2169.906250\n33\n1.424242\nFalse\n26\n2332.547607\n20\n1.050000\n\n\n\n\n\n\n\n27\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n747\n2022\n5347.171875\n3\n15.666667\nTrue\n27\n4093.909424\n1\n21.000000\n\n\n362\n2011\n2461.625000\n25\n1.880000\nFalse\n27\n3934.178223\n2\n10.500000\n\n\n397\n2012\n3110.078125\n15\n3.133333\nTrue\n27\n3896.044434\n3\n7.000000\n\n\n642\n2019\n2440.054688\n26\n1.807692\nFalse\n27\n3828.156982\n4\n5.250000\n\n\n320\n2010\n3109.257812\n16\n2.937500\nFalse\n27\n3820.162598\n5\n4.200000\n\n\n236\n2008\n2627.976562\n22\n2.136364\nFalse\n27\n3645.868652\n6\n3.500000\n\n\n537\n2016\n2364.773438\n30\n1.566667\nFalse\n27\n3571.320312\n7\n3.000000\n\n\n607\n2018\n2547.906250\n23\n2.043478\nFalse\n27\n3468.980469\n8\n2.625000\n\n\n467\n2014\n2918.125000\n17\n2.764706\nFalse\n27\n3463.026611\n9\n2.333333\n\n\n432\n2013\n1611.937500\n45\n1.044444\nFalse\n27\n3403.666504\n10\n2.100000\n\n\n26\n2003\n3312.015625\n13\n3.615385\nTrue\n27\n3353.301514\n11\n1.909091\n\n\n110\n2005\n2077.328125\n34\n1.382353\nFalse\n27\n3058.781982\n12\n1.750000\n\n\n68\n2004\n1856.578125\n40\n1.175000\nFalse\n27\n2836.931152\n13\n1.615385\n\n\n152\n2006\n1733.757812\n43\n1.093023\nFalse\n27\n2805.859375\n14\n1.500000\n\n\n572\n2017\n1717.898438\n44\n1.068182\nFalse\n27\n2777.288330\n15\n1.400000\n\n\n712\n2021\n2253.296875\n31\n1.516129\nFalse\n27\n2695.489746\n16\n1.312500\n\n\n502\n2015\n1563.804688\n46\n1.021739\nFalse\n27\n2570.944580\n17\n1.235294\n\n\n194\n2007\n2235.781250\n32\n1.468750\nFalse\n27\n2521.899902\n18\n1.166667\n\n\n677\n2020\n1946.828125\n37\n1.270270\nFalse\n27\n2370.535889\n19\n1.105263\n\n\n278\n2009\n2169.906250\n33\n1.424242\nFalse\n27\n2362.913330\n20\n1.050000\n\n\n\n\n\n\n\n28\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n748\n2022\n5347.171875\n3\n15.666667\nTrue\n28\n3985.445312\n1\n21.000000\n\n\n398\n2012\n3110.078125\n15\n3.133333\nTrue\n28\n3934.264893\n2\n10.500000\n\n\n321\n2010\n3109.257812\n16\n2.937500\nFalse\n28\n3925.173340\n3\n7.000000\n\n\n237\n2008\n2627.976562\n22\n2.136364\nFalse\n28\n3890.645264\n4\n5.250000\n\n\n643\n2019\n2440.054688\n26\n1.807692\nFalse\n28\n3877.450684\n5\n4.200000\n\n\n468\n2014\n2918.125000\n17\n2.764706\nFalse\n28\n3527.160156\n6\n3.500000\n\n\n538\n2016\n2364.773438\n30\n1.566667\nFalse\n28\n3518.861816\n7\n3.000000\n\n\n27\n2003\n3312.015625\n13\n3.615385\nTrue\n28\n3401.025879\n8\n2.625000\n\n\n608\n2018\n2547.906250\n23\n2.043478\nFalse\n28\n3367.860107\n9\n2.333333\n\n\n69\n2004\n1856.578125\n40\n1.175000\nFalse\n28\n3293.934326\n10\n2.100000\n\n\n433\n2013\n1611.937500\n45\n1.044444\nFalse\n28\n3280.506348\n11\n1.909091\n\n\n363\n2011\n2461.625000\n25\n1.880000\nFalse\n28\n3206.794434\n12\n1.750000\n\n\n111\n2005\n2077.328125\n34\n1.382353\nFalse\n28\n3151.160889\n13\n1.615385\n\n\n573\n2017\n1717.898438\n44\n1.068182\nFalse\n28\n2911.684326\n14\n1.500000\n\n\n153\n2006\n1733.757812\n43\n1.093023\nFalse\n28\n2822.911621\n15\n1.400000\n\n\n713\n2021\n2253.296875\n31\n1.516129\nFalse\n28\n2761.992188\n16\n1.312500\n\n\n678\n2020\n1946.828125\n37\n1.270270\nFalse\n28\n2604.918701\n17\n1.235294\n\n\n503\n2015\n1563.804688\n46\n1.021739\nFalse\n28\n2579.824219\n18\n1.166667\n\n\n195\n2007\n2235.781250\n32\n1.468750\nFalse\n28\n2449.456299\n19\n1.105263\n\n\n279\n2009\n2169.906250\n33\n1.424242\nFalse\n28\n2381.836670\n20\n1.050000\n\n\n\n\n\n\n\n29\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n399\n2012\n3110.078125\n15\n3.133333\nTrue\n29\n4048.225098\n1\n21.000000\n\n\n322\n2010\n3109.257812\n16\n2.937500\nFalse\n29\n4027.287598\n2\n10.500000\n\n\n469\n2014\n2918.125000\n17\n2.764706\nFalse\n29\n3928.940674\n3\n7.000000\n\n\n644\n2019\n2440.054688\n26\n1.807692\nFalse\n29\n3904.488281\n4\n5.250000\n\n\n749\n2022\n5347.171875\n3\n15.666667\nTrue\n29\n3839.026611\n5\n4.200000\n\n\n238\n2008\n2627.976562\n22\n2.136364\nFalse\n29\n3801.782715\n6\n3.500000\n\n\n539\n2016\n2364.773438\n30\n1.566667\nFalse\n29\n3563.020996\n7\n3.000000\n\n\n28\n2003\n3312.015625\n13\n3.615385\nTrue\n29\n3437.060059\n8\n2.625000\n\n\n609\n2018\n2547.906250\n23\n2.043478\nFalse\n29\n3357.304688\n9\n2.333333\n\n\n70\n2004\n1856.578125\n40\n1.175000\nFalse\n29\n3186.828857\n10\n2.100000\n\n\n112\n2005\n2077.328125\n34\n1.382353\nFalse\n29\n3178.202393\n11\n1.909091\n\n\n434\n2013\n1611.937500\n45\n1.044444\nFalse\n29\n3093.385986\n12\n1.750000\n\n\n574\n2017\n1717.898438\n44\n1.068182\nFalse\n29\n2841.104004\n13\n1.615385\n\n\n154\n2006\n1733.757812\n43\n1.093023\nFalse\n29\n2824.168701\n14\n1.500000\n\n\n364\n2011\n2461.625000\n25\n1.880000\nFalse\n29\n2806.353027\n15\n1.400000\n\n\n679\n2020\n1946.828125\n37\n1.270270\nFalse\n29\n2667.563965\n16\n1.312500\n\n\n714\n2021\n2253.296875\n31\n1.516129\nFalse\n29\n2557.553955\n17\n1.235294\n\n\n504\n2015\n1563.804688\n46\n1.021739\nFalse\n29\n2536.393066\n18\n1.166667\n\n\n196\n2007\n2235.781250\n32\n1.468750\nFalse\n29\n2442.124268\n19\n1.105263\n\n\n280\n2009\n2169.906250\n33\n1.424242\nFalse\n29\n2326.707764\n20\n1.050000\n\n\n\n\n\n\n\n30\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n470\n2014\n2918.125000\n17\n2.764706\nFalse\n30\n4150.502930\n1\n21.000000\n\n\n400\n2012\n3110.078125\n15\n3.133333\nTrue\n30\n4021.522705\n2\n10.500000\n\n\n645\n2019\n2440.054688\n26\n1.807692\nFalse\n30\n3942.508545\n3\n7.000000\n\n\n323\n2010\n3109.257812\n16\n2.937500\nFalse\n30\n3877.691406\n4\n5.250000\n\n\n750\n2022\n5347.171875\n3\n15.666667\nTrue\n30\n3739.416504\n5\n4.200000\n\n\n239\n2008\n2627.976562\n22\n2.136364\nFalse\n30\n3618.568848\n6\n3.500000\n\n\n575\n2017\n1717.898438\n44\n1.068182\nFalse\n30\n3562.528076\n7\n3.000000\n\n\n29\n2003\n3312.015625\n13\n3.615385\nTrue\n30\n3463.569580\n8\n2.625000\n\n\n610\n2018\n2547.906250\n23\n2.043478\nFalse\n30\n3443.538330\n9\n2.333333\n\n\n540\n2016\n2364.773438\n30\n1.566667\nFalse\n30\n3349.985107\n10\n2.100000\n\n\n435\n2013\n1611.937500\n45\n1.044444\nFalse\n30\n3035.718750\n11\n1.909091\n\n\n71\n2004\n1856.578125\n40\n1.175000\nFalse\n30\n3007.827393\n12\n1.750000\n\n\n113\n2005\n2077.328125\n34\n1.382353\nFalse\n30\n3002.341309\n13\n1.615385\n\n\n155\n2006\n1733.757812\n43\n1.093023\nFalse\n30\n2829.181152\n14\n1.500000\n\n\n197\n2007\n2235.781250\n32\n1.468750\nFalse\n30\n2653.778809\n15\n1.400000\n\n\n365\n2011\n2461.625000\n25\n1.880000\nFalse\n30\n2590.735107\n16\n1.312500\n\n\n715\n2021\n2253.296875\n31\n1.516129\nFalse\n30\n2547.211670\n17\n1.235294\n\n\n680\n2020\n1946.828125\n37\n1.270270\nFalse\n30\n2520.785889\n18\n1.166667\n\n\n505\n2015\n1563.804688\n46\n1.021739\nFalse\n30\n2505.527344\n19\n1.105263\n\n\n281\n2009\n2169.906250\n33\n1.424242\nFalse\n30\n2461.126465\n20\n1.050000\n\n\n\n\n\n\n\n31\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n646\n2019\n2440.054688\n26\n1.807692\nFalse\n31\n3932.394531\n1\n21.000000\n\n\n401\n2012\n3110.078125\n15\n3.133333\nTrue\n31\n3880.268066\n2\n10.500000\n\n\n471\n2014\n2918.125000\n17\n2.764706\nFalse\n31\n3808.074951\n3\n7.000000\n\n\n324\n2010\n3109.257812\n16\n2.937500\nFalse\n31\n3789.804688\n4\n5.250000\n\n\n751\n2022\n5347.171875\n3\n15.666667\nTrue\n31\n3784.900879\n5\n4.200000\n\n\n240\n2008\n2627.976562\n22\n2.136364\nFalse\n31\n3552.013184\n6\n3.500000\n\n\n30\n2003\n3312.015625\n13\n3.615385\nTrue\n31\n3544.177246\n7\n3.000000\n\n\n611\n2018\n2547.906250\n23\n2.043478\nFalse\n31\n3519.649170\n8\n2.625000\n\n\n541\n2016\n2364.773438\n30\n1.566667\nFalse\n31\n3423.302246\n9\n2.333333\n\n\n436\n2013\n1611.937500\n45\n1.044444\nFalse\n31\n3204.489014\n10\n2.100000\n\n\n198\n2007\n2235.781250\n32\n1.468750\nFalse\n31\n3082.943848\n11\n1.909091\n\n\n72\n2004\n1856.578125\n40\n1.175000\nFalse\n31\n3010.223389\n12\n1.750000\n\n\n114\n2005\n2077.328125\n34\n1.382353\nFalse\n31\n2996.643799\n13\n1.615385\n\n\n576\n2017\n1717.898438\n44\n1.068182\nFalse\n31\n2896.723389\n14\n1.500000\n\n\n156\n2006\n1733.757812\n43\n1.093023\nFalse\n31\n2858.641357\n15\n1.400000\n\n\n282\n2009\n2169.906250\n33\n1.424242\nFalse\n31\n2637.865723\n16\n1.312500\n\n\n681\n2020\n1946.828125\n37\n1.270270\nFalse\n31\n2559.625732\n17\n1.235294\n\n\n716\n2021\n2253.296875\n31\n1.516129\nFalse\n31\n2547.848389\n18\n1.166667\n\n\n506\n2015\n1563.804688\n46\n1.021739\nFalse\n31\n2467.210938\n19\n1.105263\n\n\n366\n2011\n2461.625000\n25\n1.880000\nFalse\n31\n2413.257812\n20\n1.050000\n\n\n\n\n\n\n\n32\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n241\n2008\n2627.976562\n22\n2.136364\nFalse\n32\n4070.671875\n1\n21.000000\n\n\n542\n2016\n2364.773438\n30\n1.566667\nFalse\n32\n3955.625732\n2\n10.500000\n\n\n647\n2019\n2440.054688\n26\n1.807692\nFalse\n32\n3859.205566\n3\n7.000000\n\n\n325\n2010\n3109.257812\n16\n2.937500\nFalse\n32\n3834.338379\n4\n5.250000\n\n\n752\n2022\n5347.171875\n3\n15.666667\nTrue\n32\n3783.520264\n5\n4.200000\n\n\n402\n2012\n3110.078125\n15\n3.133333\nTrue\n32\n3744.069580\n6\n3.500000\n\n\n472\n2014\n2918.125000\n17\n2.764706\nFalse\n32\n3626.052246\n7\n3.000000\n\n\n31\n2003\n3312.015625\n13\n3.615385\nTrue\n32\n3519.138184\n8\n2.625000\n\n\n612\n2018\n2547.906250\n23\n2.043478\nFalse\n32\n3500.781250\n9\n2.333333\n\n\n115\n2005\n2077.328125\n34\n1.382353\nFalse\n32\n3183.196045\n10\n2.100000\n\n\n73\n2004\n1856.578125\n40\n1.175000\nFalse\n32\n3065.808594\n11\n1.909091\n\n\n437\n2013\n1611.937500\n45\n1.044444\nFalse\n32\n3043.111816\n12\n1.750000\n\n\n199\n2007\n2235.781250\n32\n1.468750\nFalse\n32\n3022.122559\n13\n1.615385\n\n\n157\n2006\n1733.757812\n43\n1.093023\nFalse\n32\n2851.135986\n14\n1.500000\n\n\n577\n2017\n1717.898438\n44\n1.068182\nFalse\n32\n2850.896973\n15\n1.400000\n\n\n682\n2020\n1946.828125\n37\n1.270270\nFalse\n32\n2677.178223\n16\n1.312500\n\n\n717\n2021\n2253.296875\n31\n1.516129\nFalse\n32\n2616.207764\n17\n1.235294\n\n\n507\n2015\n1563.804688\n46\n1.021739\nFalse\n32\n2509.770264\n18\n1.166667\n\n\n283\n2009\n2169.906250\n33\n1.424242\nFalse\n32\n2503.684326\n19\n1.105263\n\n\n367\n2011\n2461.625000\n25\n1.880000\nFalse\n32\n2466.756348\n20\n1.050000\n\n\n\n\n\n\n\n33\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n326\n2010\n3109.257812\n16\n2.937500\nFalse\n33\n3945.163330\n1\n21.000000\n\n\n648\n2019\n2440.054688\n26\n1.807692\nFalse\n33\n3925.030518\n2\n10.500000\n\n\n242\n2008\n2627.976562\n22\n2.136364\nFalse\n33\n3924.292969\n3\n7.000000\n\n\n543\n2016\n2364.773438\n30\n1.566667\nFalse\n33\n3910.492920\n4\n5.250000\n\n\n753\n2022\n5347.171875\n3\n15.666667\nTrue\n33\n3687.346924\n5\n4.200000\n\n\n473\n2014\n2918.125000\n17\n2.764706\nFalse\n33\n3667.208496\n6\n3.500000\n\n\n32\n2003\n3312.015625\n13\n3.615385\nTrue\n33\n3663.242188\n7\n3.000000\n\n\n403\n2012\n3110.078125\n15\n3.133333\nTrue\n33\n3536.741455\n8\n2.625000\n\n\n613\n2018\n2547.906250\n23\n2.043478\nFalse\n33\n3457.546143\n9\n2.333333\n\n\n116\n2005\n2077.328125\n34\n1.382353\nFalse\n33\n3302.046875\n10\n2.100000\n\n\n74\n2004\n1856.578125\n40\n1.175000\nFalse\n33\n3145.810059\n11\n1.909091\n\n\n200\n2007\n2235.781250\n32\n1.468750\nFalse\n33\n3038.783691\n12\n1.750000\n\n\n438\n2013\n1611.937500\n45\n1.044444\nFalse\n33\n3018.879639\n13\n1.615385\n\n\n508\n2015\n1563.804688\n46\n1.021739\nFalse\n33\n2878.297607\n14\n1.500000\n\n\n578\n2017\n1717.898438\n44\n1.068182\nFalse\n33\n2817.443848\n15\n1.400000\n\n\n158\n2006\n1733.757812\n43\n1.093023\nFalse\n33\n2809.815674\n16\n1.312500\n\n\n683\n2020\n1946.828125\n37\n1.270270\nFalse\n33\n2749.240723\n17\n1.235294\n\n\n718\n2021\n2253.296875\n31\n1.516129\nFalse\n33\n2652.400879\n18\n1.166667\n\n\n368\n2011\n2461.625000\n25\n1.880000\nFalse\n33\n2426.585938\n19\n1.105263\n\n\n284\n2009\n2169.906250\n33\n1.424242\nFalse\n33\n2403.520264\n20\n1.050000\n\n\n\n\n\n\n\n34\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n649\n2019\n2440.054688\n26\n1.807692\nFalse\n34\n4059.247559\n1\n21.000000\n\n\n327\n2010\n3109.257812\n16\n2.937500\nFalse\n34\n3905.524170\n2\n10.500000\n\n\n754\n2022\n5347.171875\n3\n15.666667\nTrue\n34\n3771.990723\n3\n7.000000\n\n\n33\n2003\n3312.015625\n13\n3.615385\nTrue\n34\n3737.312500\n4\n5.250000\n\n\n544\n2016\n2364.773438\n30\n1.566667\nFalse\n34\n3688.754639\n5\n4.200000\n\n\n474\n2014\n2918.125000\n17\n2.764706\nFalse\n34\n3609.024902\n6\n3.500000\n\n\n243\n2008\n2627.976562\n22\n2.136364\nFalse\n34\n3609.014893\n7\n3.000000\n\n\n614\n2018\n2547.906250\n23\n2.043478\nFalse\n34\n3564.781982\n8\n2.625000\n\n\n404\n2012\n3110.078125\n15\n3.133333\nTrue\n34\n3483.459473\n9\n2.333333\n\n\n117\n2005\n2077.328125\n34\n1.382353\nFalse\n34\n3252.586670\n10\n2.100000\n\n\n75\n2004\n1856.578125\n40\n1.175000\nFalse\n34\n3216.492188\n11\n1.909091\n\n\n439\n2013\n1611.937500\n45\n1.044444\nFalse\n34\n3038.675781\n12\n1.750000\n\n\n201\n2007\n2235.781250\n32\n1.468750\nFalse\n34\n2977.162598\n13\n1.615385\n\n\n579\n2017\n1717.898438\n44\n1.068182\nFalse\n34\n2970.490723\n14\n1.500000\n\n\n509\n2015\n1563.804688\n46\n1.021739\nFalse\n34\n2857.092285\n15\n1.400000\n\n\n159\n2006\n1733.757812\n43\n1.093023\nFalse\n34\n2773.071045\n16\n1.312500\n\n\n684\n2020\n1946.828125\n37\n1.270270\nFalse\n34\n2695.673340\n17\n1.235294\n\n\n719\n2021\n2253.296875\n31\n1.516129\nFalse\n34\n2671.262451\n18\n1.166667\n\n\n369\n2011\n2461.625000\n25\n1.880000\nFalse\n34\n2368.920410\n19\n1.105263\n\n\n285\n2009\n2169.906250\n33\n1.424242\nFalse\n34\n2306.061768\n20\n1.050000\n\n\n\n\n\n\n\n35\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n650\n2019\n2440.054688\n26\n1.807692\nFalse\n35\n4437.524414\n1\n21.000000\n\n\n328\n2010\n3109.257812\n16\n2.937500\nFalse\n35\n3991.835938\n2\n10.500000\n\n\n755\n2022\n5347.171875\n3\n15.666667\nTrue\n35\n3867.678223\n3\n7.000000\n\n\n34\n2003\n3312.015625\n13\n3.615385\nTrue\n35\n3612.358643\n4\n5.250000\n\n\n615\n2018\n2547.906250\n23\n2.043478\nFalse\n35\n3593.543701\n5\n4.200000\n\n\n244\n2008\n2627.976562\n22\n2.136364\nFalse\n35\n3550.981934\n6\n3.500000\n\n\n545\n2016\n2364.773438\n30\n1.566667\nFalse\n35\n3548.710205\n7\n3.000000\n\n\n475\n2014\n2918.125000\n17\n2.764706\nFalse\n35\n3441.622559\n8\n2.625000\n\n\n405\n2012\n3110.078125\n15\n3.133333\nTrue\n35\n3406.726562\n9\n2.333333\n\n\n76\n2004\n1856.578125\n40\n1.175000\nFalse\n35\n3271.111816\n10\n2.100000\n\n\n118\n2005\n2077.328125\n34\n1.382353\nFalse\n35\n3227.279785\n11\n1.909091\n\n\n580\n2017\n1717.898438\n44\n1.068182\nFalse\n35\n3182.363281\n12\n1.750000\n\n\n440\n2013\n1611.937500\n45\n1.044444\nFalse\n35\n3063.918701\n13\n1.615385\n\n\n202\n2007\n2235.781250\n32\n1.468750\nFalse\n35\n2857.344482\n14\n1.500000\n\n\n720\n2021\n2253.296875\n31\n1.516129\nFalse\n35\n2855.627441\n15\n1.400000\n\n\n160\n2006\n1733.757812\n43\n1.093023\nFalse\n35\n2766.332764\n16\n1.312500\n\n\n685\n2020\n1946.828125\n37\n1.270270\nFalse\n35\n2670.428223\n17\n1.235294\n\n\n510\n2015\n1563.804688\n46\n1.021739\nFalse\n35\n2520.082764\n18\n1.166667\n\n\n370\n2011\n2461.625000\n25\n1.880000\nFalse\n35\n2364.609375\n19\n1.105263\n\n\n286\n2009\n2169.906250\n33\n1.424242\nFalse\n35\n2235.932129\n20\n1.050000\n\n\n\n\n\n\n\n36\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n329\n2010\n3109.257812\n16\n2.937500\nFalse\n36\n4177.506836\n1\n9.000000\n\n\n245\n2008\n2627.976562\n22\n2.136364\nFalse\n36\n3510.461670\n2\n4.500000\n\n\n35\n2003\n3312.015625\n13\n3.615385\nTrue\n36\n3509.448486\n3\n3.000000\n\n\n119\n2005\n2077.328125\n34\n1.382353\nFalse\n36\n3425.996826\n4\n2.250000\n\n\n77\n2004\n1856.578125\n40\n1.175000\nFalse\n36\n3185.824219\n5\n1.800000\n\n\n203\n2007\n2235.781250\n32\n1.468750\nFalse\n36\n2866.588379\n6\n1.500000\n\n\n161\n2006\n1733.757812\n43\n1.093023\nFalse\n36\n2699.492188\n7\n1.285714\n\n\n287\n2009\n2169.906250\n33\n1.424242\nFalse\n36\n2269.705566\n8\n1.125000\n\n\n\n\n\n\n\n37\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n330\n2010\n3109.257812\n16\n2.937500\nFalse\n37\n4699.467285\n1\n9.000000\n\n\n246\n2008\n2627.976562\n22\n2.136364\nFalse\n37\n3563.283691\n2\n4.500000\n\n\n120\n2005\n2077.328125\n34\n1.382353\nFalse\n37\n3442.934326\n3\n3.000000\n\n\n36\n2003\n3312.015625\n13\n3.615385\nTrue\n37\n3417.479004\n4\n2.250000\n\n\n78\n2004\n1856.578125\n40\n1.175000\nFalse\n37\n3174.221191\n5\n1.800000\n\n\n204\n2007\n2235.781250\n32\n1.468750\nFalse\n37\n2800.255371\n6\n1.500000\n\n\n162\n2006\n1733.757812\n43\n1.093023\nFalse\n37\n2697.184326\n7\n1.285714\n\n\n288\n2009\n2169.906250\n33\n1.424242\nFalse\n37\n2255.340576\n8\n1.125000\n\n\n\n\n\n\n\n38\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n331\n2010\n3109.257812\n16\n2.937500\nFalse\n38\n4416.780273\n1\n9.000000\n\n\n247\n2008\n2627.976562\n22\n2.136364\nFalse\n38\n3521.183594\n2\n4.500000\n\n\n121\n2005\n2077.328125\n34\n1.382353\nFalse\n38\n3417.387451\n3\n3.000000\n\n\n37\n2003\n3312.015625\n13\n3.615385\nTrue\n38\n3364.907715\n4\n2.250000\n\n\n79\n2004\n1856.578125\n40\n1.175000\nFalse\n38\n3278.721191\n5\n1.800000\n\n\n205\n2007\n2235.781250\n32\n1.468750\nFalse\n38\n2836.917236\n6\n1.500000\n\n\n163\n2006\n1733.757812\n43\n1.093023\nFalse\n38\n2741.772705\n7\n1.285714\n\n\n289\n2009\n2169.906250\n33\n1.424242\nFalse\n38\n2377.106201\n8\n1.125000\n\n\n\n\n\n\n\n39\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n332\n2010\n3109.257812\n16\n2.937500\nFalse\n39\n3994.853027\n1\n9.000000\n\n\n80\n2004\n1856.578125\n40\n1.175000\nFalse\n39\n3378.862549\n2\n4.500000\n\n\n248\n2008\n2627.976562\n22\n2.136364\nFalse\n39\n3376.468750\n3\n3.000000\n\n\n38\n2003\n3312.015625\n13\n3.615385\nTrue\n39\n3372.850830\n4\n2.250000\n\n\n122\n2005\n2077.328125\n34\n1.382353\nFalse\n39\n3365.630371\n5\n1.800000\n\n\n206\n2007\n2235.781250\n32\n1.468750\nFalse\n39\n3013.553955\n6\n1.500000\n\n\n164\n2006\n1733.757812\n43\n1.093023\nFalse\n39\n2736.334473\n7\n1.285714\n\n\n290\n2009\n2169.906250\n33\n1.424242\nFalse\n39\n2300.200684\n8\n1.125000\n\n\n\n\n\n\n\n40\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n333\n2010\n3109.257812\n16\n2.937500\nFalse\n40\n3809.422607\n1\n9.000000\n\n\n81\n2004\n1856.578125\n40\n1.175000\nFalse\n40\n3550.807861\n2\n4.500000\n\n\n39\n2003\n3312.015625\n13\n3.615385\nTrue\n40\n3442.367920\n3\n3.000000\n\n\n249\n2008\n2627.976562\n22\n2.136364\nFalse\n40\n3318.457764\n4\n2.250000\n\n\n123\n2005\n2077.328125\n34\n1.382353\nFalse\n40\n3227.102295\n5\n1.800000\n\n\n207\n2007\n2235.781250\n32\n1.468750\nFalse\n40\n3041.921875\n6\n1.500000\n\n\n165\n2006\n1733.757812\n43\n1.093023\nFalse\n40\n2773.599121\n7\n1.285714\n\n\n291\n2009\n2169.906250\n33\n1.424242\nFalse\n40\n2351.075684\n8\n1.125000\n\n\n\n\n\n\n\n41\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n334\n2010\n3109.257812\n16\n2.937500\nFalse\n41\n3991.477295\n1\n9.000000\n\n\n82\n2004\n1856.578125\n40\n1.175000\nFalse\n41\n3551.360840\n2\n4.500000\n\n\n40\n2003\n3312.015625\n13\n3.615385\nTrue\n41\n3509.097656\n3\n3.000000\n\n\n250\n2008\n2627.976562\n22\n2.136364\nFalse\n41\n3256.527344\n4\n2.250000\n\n\n208\n2007\n2235.781250\n32\n1.468750\nFalse\n41\n3204.831299\n5\n1.800000\n\n\n124\n2005\n2077.328125\n34\n1.382353\nFalse\n41\n3062.757812\n6\n1.500000\n\n\n166\n2006\n1733.757812\n43\n1.093023\nFalse\n41\n2723.219482\n7\n1.285714\n\n\n292\n2009\n2169.906250\n33\n1.424242\nFalse\n41\n2398.000000\n8\n1.125000\n\n\n\n\n\n\n\n42\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n335\n2010\n3109.257812\n16\n2.937500\nFalse\n42\n3933.841309\n1\n9.000000\n\n\n41\n2003\n3312.015625\n13\n3.615385\nTrue\n42\n3510.442139\n2\n4.500000\n\n\n83\n2004\n1856.578125\n40\n1.175000\nFalse\n42\n3416.114014\n3\n3.000000\n\n\n251\n2008\n2627.976562\n22\n2.136364\nFalse\n42\n3217.433594\n4\n2.250000\n\n\n209\n2007\n2235.781250\n32\n1.468750\nFalse\n42\n3214.589844\n5\n1.800000\n\n\n125\n2005\n2077.328125\n34\n1.382353\nFalse\n42\n2987.020996\n6\n1.500000\n\n\n167\n2006\n1733.757812\n43\n1.093023\nFalse\n42\n2684.509277\n7\n1.285714\n\n\n293\n2009\n2169.906250\n33\n1.424242\nFalse\n42\n2368.220215\n8\n1.125000\n\n\n\n\n\n\n\nLooks like we can go up to a leadtime of 5 before we have a year that would have triggered (i.e. is above 3110) that is NOT on the list of years that would have triggered with the reanalysis. Let’s just verify that:\n\n\nCode\nlt_max = 5\nthresh_ref = 3130\ndf_compare[\n    (df_compare[\"dis24_f\"] &gt;= thresh_ref) & (df_compare[\"leadtime\"] &lt;= lt_max)\n]\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n371\n2012\n3110.078125\n15\n3.133333\nTrue\n1\n3142.276611\n2\n10.5\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n\n\n\n\n\n\n\nCode\ndf_ref[\"issued_time\"] = df_ref[\"valid_time\"] - df_ref[\"leadtime\"].apply(\n    lambda x: pd.Timedelta(days=x - 1)\n)\n\n\n\n\nCode\ndf_ref_trig = df_ref[\n    (df_ref[\"dis24\"] &gt;= thresh_ref) & (df_ref[\"leadtime\"] &lt;= lt_max)\n]\n\n\n\n\nCode\ndf_ref[\"issued_time\"].unique()\n\n\n&lt;DatetimeArray&gt;\n['2003-07-04 00:00:00', '2003-07-07 00:00:00', '2003-07-11 00:00:00',\n '2003-07-14 00:00:00', '2003-07-18 00:00:00', '2003-07-21 00:00:00',\n '2003-07-25 00:00:00', '2003-07-28 00:00:00', '2003-08-01 00:00:00',\n '2003-08-04 00:00:00',\n ...\n '2022-09-29 00:00:00', '2022-10-03 00:00:00', '2022-10-06 00:00:00',\n '2022-10-10 00:00:00', '2022-10-13 00:00:00', '2022-10-17 00:00:00',\n '2022-10-20 00:00:00', '2022-10-24 00:00:00', '2022-10-27 00:00:00',\n '2022-10-31 00:00:00']\nLength: 700, dtype: datetime64[ns]\n\n\n\n\nCode\ndf_ref_trig.sort_values([\"issued_time\", \"valid_time\"])\n\n\n\n\n\n\n\n\n\nvalid_time\nleadtime\ndis24\nissued_time\n\n\n\n\n13320\n2012-08-22\n1\n3142.276611\n2012-08-22\n\n\n25570\n2022-08-22\n1\n3171.425049\n2022-08-22\n\n\n25670\n2022-09-01\n1\n3667.960938\n2022-09-01\n\n\n25680\n2022-09-02\n2\n4539.672852\n2022-09-01\n\n\n25690\n2022-09-03\n3\n4323.481445\n2022-09-01\n\n\n25700\n2022-09-04\n4\n4228.503906\n2022-09-01\n\n\n25711\n2022-09-05\n5\n3864.475098\n2022-09-01\n\n\n25770\n2022-09-11\n4\n3284.663330\n2022-09-08\n\n\n25781\n2022-09-12\n5\n3523.425781\n2022-09-08\n\n\n25780\n2022-09-12\n1\n3747.796875\n2022-09-12\n\n\n25790\n2022-09-13\n2\n3680.951660\n2022-09-12\n\n\n25800\n2022-09-14\n3\n3732.882080\n2022-09-12\n\n\n25811\n2022-09-15\n4\n4000.229736\n2022-09-12\n\n\n25821\n2022-09-16\n5\n4171.686523\n2022-09-12\n\n\n25810\n2022-09-15\n1\n3523.570312\n2022-09-15\n\n\n25820\n2022-09-16\n2\n3397.205566\n2022-09-15\n\n\n25830\n2022-09-17\n3\n3532.391357\n2022-09-15\n\n\n25840\n2022-09-18\n4\n4091.977295\n2022-09-15\n\n\n25851\n2022-09-19\n5\n4619.898438\n2022-09-15\n\n\n25850\n2022-09-19\n1\n3830.425781\n2022-09-19\n\n\n25860\n2022-09-20\n2\n4033.789795\n2022-09-19\n\n\n25870\n2022-09-21\n3\n4178.193848\n2022-09-19\n\n\n25881\n2022-09-22\n4\n4073.328857\n2022-09-19\n\n\n25891\n2022-09-23\n5\n3947.666504\n2022-09-19\n\n\n25880\n2022-09-22\n1\n4575.291504\n2022-09-22\n\n\n25890\n2022-09-23\n2\n4198.457031\n2022-09-22\n\n\n25900\n2022-09-24\n3\n3937.441406\n2022-09-22\n\n\n25910\n2022-09-25\n4\n3723.916504\n2022-09-22\n\n\n25921\n2022-09-26\n5\n3579.682129\n2022-09-22\n\n\n25920\n2022-09-26\n1\n3926.665527\n2022-09-26\n\n\n25930\n2022-09-27\n2\n3881.843750\n2022-09-26\n\n\n25940\n2022-09-28\n3\n3849.235840\n2022-09-26\n\n\n25951\n2022-09-29\n4\n3786.812500\n2022-09-26\n\n\n25961\n2022-09-30\n5\n3654.806152\n2022-09-26\n\n\n25950\n2022-09-29\n1\n3776.409424\n2022-09-29\n\n\n25960\n2022-09-30\n2\n3831.771973\n2022-09-29\n\n\n25970\n2022-10-01\n3\n3655.483643\n2022-09-29\n\n\n25980\n2022-10-02\n4\n3465.779785\n2022-09-29\n\n\n25991\n2022-10-03\n5\n3302.376465\n2022-09-29\n\n\n25990\n2022-10-03\n1\n3205.388184\n2022-10-03\n\n\n\n\n\n\n\n\n\nCode\ndf_ref_trig.loc[\n    df_ref_trig.groupby(df_ref_trig[\"valid_time\"].dt.year)[\n        \"issued_time\"\n    ].idxmin()\n]\n\n\n\n\n\n\n\n\n\nvalid_time\nleadtime\ndis24\nissued_time\n\n\n\n\n13320\n2012-08-22\n1\n3142.276611\n2012-08-22\n\n\n25570\n2022-08-22\n1\n3171.425049\n2022-08-22\n\n\n\n\n\n\n\nNow we can actually do this more programatically. For each maximum leadtime, we can check what is:\n\nthe maximum possible value we can set the trigger to without excluding any years we should have triggered for (confusingly set as min_true in the code below)\nthe minimum possible value we can set the trigger to without falsely triggering for any years (confusingly set as max_false in the code below)\n\n\n\nCode\ndicts = []\nfor lt_max in df_compare[\"leadtime\"].unique():\n    print(lt_max)\n    dff = df_compare[df_compare[\"leadtime\"] &lt;= lt_max]\n    max_false_value = dff[~dff[\"trig\"]][\"dis24_f\"].max()\n    min_true_value = dff[dff[\"trig\"] & (dff[\"dis24_f\"] &gt;= max_false_value)][\n        \"dis24_f\"\n    ].min()\n    n_trig_years = dff[dff[\"dis24_f\"] &gt; max_false_value][\n        \"valid_time\"\n    ].nunique()\n    display(\n        dff[dff[\"dis24_f\"] &gt;= max_false_value].sort_values(\n            \"dis24_f\", ascending=False\n        )\n    )\n    dicts.append(\n        {\n            \"lt_max\": lt_max,\n            \"min_true\": min_true_value,\n            \"max_false\": max_false_value,\n            \"n_trig\": n_trig_years,\n        }\n    )\n\ndf_threshs = pd.DataFrame(dicts)\n\n\n1\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n371\n2012\n3110.078125\n15\n3.133333\nTrue\n1\n3142.276611\n2\n10.5\n\n\n294\n2010\n3109.257812\n16\n2.937500\nFalse\n1\n3121.492188\n3\n7.0\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n371\n2012\n3110.078125\n15\n3.133333\nTrue\n1\n3142.276611\n2\n10.5\n\n\n294\n2010\n3109.257812\n16\n2.937500\nFalse\n1\n3121.492188\n3\n7.0\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n371\n2012\n3110.078125\n15\n3.133333\nTrue\n1\n3142.276611\n2\n10.5\n\n\n294\n2010\n3109.257812\n16\n2.937500\nFalse\n1\n3121.492188\n3\n7.0\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.0\n\n\n371\n2012\n3110.078125\n15\n3.133333\nTrue\n1\n3142.276611\n2\n10.5\n\n\n294\n2010\n3109.257812\n16\n2.937500\nFalse\n1\n3121.492188\n3\n7.0\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.0\n\n\n371\n2012\n3110.078125\n15\n3.133333\nTrue\n1\n3142.276611\n2\n10.5\n\n\n294\n2010\n3109.257812\n16\n2.937500\nFalse\n1\n3121.492188\n3\n7.0\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.0\n\n\n446\n2014\n2918.125000\n17\n2.764706\nFalse\n6\n3250.750000\n2\n10.5\n\n\n\n\n\n\n\n7\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.0\n\n\n517\n2016\n2364.773438\n30\n1.566667\nFalse\n7\n3309.821045\n2\n10.5\n\n\n\n\n\n\n\n8\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.0\n\n\n7\n2003\n3312.015625\n13\n3.615385\nTrue\n8\n3513.040527\n2\n10.5\n\n\n517\n2016\n2364.773438\n30\n1.566667\nFalse\n7\n3309.821045\n2\n10.5\n\n\n\n\n\n\n\n9\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.0\n\n\n8\n2003\n3312.015625\n13\n3.615385\nTrue\n9\n4168.186035\n2\n10.5\n\n\n7\n2003\n3312.015625\n13\n3.615385\nTrue\n8\n3513.040527\n2\n10.5\n\n\n517\n2016\n2364.773438\n30\n1.566667\nFalse\n7\n3309.821045\n2\n10.5\n\n\n\n\n\n\n\n10\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.0\n\n\n8\n2003\n3312.015625\n13\n3.615385\nTrue\n9\n4168.186035\n2\n10.5\n\n\n9\n2003\n3312.015625\n13\n3.615385\nTrue\n10\n3884.729736\n2\n10.5\n\n\n7\n2003\n3312.015625\n13\n3.615385\nTrue\n8\n3513.040527\n2\n10.5\n\n\n517\n2016\n2364.773438\n30\n1.566667\nFalse\n7\n3309.821045\n2\n10.5\n\n\n\n\n\n\n\n11\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.0\n\n\n8\n2003\n3312.015625\n13\n3.615385\nTrue\n9\n4168.186035\n2\n10.5\n\n\n9\n2003\n3312.015625\n13\n3.615385\nTrue\n10\n3884.729736\n2\n10.5\n\n\n10\n2003\n3312.015625\n13\n3.615385\nTrue\n11\n3656.573486\n2\n10.5\n\n\n7\n2003\n3312.015625\n13\n3.615385\nTrue\n8\n3513.040527\n2\n10.5\n\n\n517\n2016\n2364.773438\n30\n1.566667\nFalse\n7\n3309.821045\n2\n10.5\n\n\n\n\n\n\n\n12\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.0\n\n\n8\n2003\n3312.015625\n13\n3.615385\nTrue\n9\n4168.186035\n2\n10.5\n\n\n9\n2003\n3312.015625\n13\n3.615385\nTrue\n10\n3884.729736\n2\n10.5\n\n\n10\n2003\n3312.015625\n13\n3.615385\nTrue\n11\n3656.573486\n2\n10.5\n\n\n7\n2003\n3312.015625\n13\n3.615385\nTrue\n8\n3513.040527\n2\n10.5\n\n\n11\n2003\n3312.015625\n13\n3.615385\nTrue\n12\n3436.365723\n2\n10.5\n\n\n627\n2019\n2440.054688\n26\n1.807692\nFalse\n12\n3434.835938\n3\n7.0\n\n\n\n\n\n\n\n13\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.0\n\n\n8\n2003\n3312.015625\n13\n3.615385\nTrue\n9\n4168.186035\n2\n10.5\n\n\n9\n2003\n3312.015625\n13\n3.615385\nTrue\n10\n3884.729736\n2\n10.5\n\n\n10\n2003\n3312.015625\n13\n3.615385\nTrue\n11\n3656.573486\n2\n10.5\n\n\n383\n2012\n3110.078125\n15\n3.133333\nTrue\n13\n3616.585938\n2\n10.5\n\n\n628\n2019\n2440.054688\n26\n1.807692\nFalse\n13\n3606.074219\n3\n7.0\n\n\n\n\n\n\n\n14\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n724\n2022\n5347.171875\n3\n15.666667\nTrue\n4\n4228.503906\n1\n21.0\n\n\n629\n2019\n2440.054688\n26\n1.807692\nFalse\n14\n4206.456055\n2\n10.5\n\n\n\n\n\n\n\n15\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n630\n2019\n2440.054688\n26\n1.807692\nFalse\n15\n4276.037598\n2\n10.5\n\n\n\n\n\n\n\n16\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n631\n2019\n2440.054688\n26\n1.807692\nFalse\n16\n4280.247070\n2\n10.5\n\n\n\n\n\n\n\n17\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n631\n2019\n2440.054688\n26\n1.807692\nFalse\n16\n4280.247070\n2\n10.5\n\n\n\n\n\n\n\n18\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n631\n2019\n2440.054688\n26\n1.807692\nFalse\n16\n4280.247070\n2\n10.5\n\n\n\n\n\n\n\n19\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n631\n2019\n2440.054688\n26\n1.807692\nFalse\n16\n4280.247070\n2\n10.5\n\n\n\n\n\n\n\n20\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n740\n2022\n5347.171875\n3\n15.666667\nTrue\n20\n4370.446777\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n631\n2019\n2440.054688\n26\n1.807692\nFalse\n16\n4280.247070\n2\n10.5\n\n\n\n\n\n\n\n21\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n740\n2022\n5347.171875\n3\n15.666667\nTrue\n20\n4370.446777\n1\n21.0\n\n\n723\n2022\n5347.171875\n3\n15.666667\nTrue\n3\n4323.481445\n1\n21.0\n\n\n631\n2019\n2440.054688\n26\n1.807692\nFalse\n16\n4280.247070\n2\n10.5\n\n\n\n\n\n\n\n22\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n23\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n24\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n25\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n26\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n27\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n28\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n29\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n30\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n31\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n32\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n33\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n34\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n739\n2022\n5347.171875\n3\n15.666667\nTrue\n19\n4420.122559\n1\n21.0\n\n\n735\n2022\n5347.171875\n3\n15.666667\nTrue\n15\n4393.790527\n1\n21.0\n\n\n231\n2008\n2627.976562\n22\n2.136364\nFalse\n22\n4379.755371\n2\n10.5\n\n\n\n\n\n\n\n35\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n650\n2019\n2440.054688\n26\n1.807692\nFalse\n35\n4437.524414\n1\n21.0\n\n\n\n\n\n\n\n36\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n725\n2022\n5347.171875\n3\n15.666667\nTrue\n5\n4619.898438\n1\n21.0\n\n\n742\n2022\n5347.171875\n3\n15.666667\nTrue\n22\n4578.864746\n1\n21.0\n\n\n721\n2022\n5347.171875\n3\n15.666667\nTrue\n1\n4575.291504\n1\n21.0\n\n\n736\n2022\n5347.171875\n3\n15.666667\nTrue\n16\n4558.833496\n1\n21.0\n\n\n722\n2022\n5347.171875\n3\n15.666667\nTrue\n2\n4539.672852\n1\n21.0\n\n\n743\n2022\n5347.171875\n3\n15.666667\nTrue\n23\n4536.802246\n1\n21.0\n\n\n734\n2022\n5347.171875\n3\n15.666667\nTrue\n14\n4533.800781\n1\n21.0\n\n\n738\n2022\n5347.171875\n3\n15.666667\nTrue\n18\n4517.747070\n1\n21.0\n\n\n741\n2022\n5347.171875\n3\n15.666667\nTrue\n21\n4492.153809\n1\n21.0\n\n\n737\n2022\n5347.171875\n3\n15.666667\nTrue\n17\n4477.049316\n1\n21.0\n\n\n744\n2022\n5347.171875\n3\n15.666667\nTrue\n24\n4453.713379\n1\n21.0\n\n\n650\n2019\n2440.054688\n26\n1.807692\nFalse\n35\n4437.524414\n1\n21.0\n\n\n\n\n\n\n\n37\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n330\n2010\n3109.257812\n16\n2.937500\nFalse\n37\n4699.467285\n1\n9.0\n\n\n\n\n\n\n\n38\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n330\n2010\n3109.257812\n16\n2.937500\nFalse\n37\n4699.467285\n1\n9.0\n\n\n\n\n\n\n\n39\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n330\n2010\n3109.257812\n16\n2.937500\nFalse\n37\n4699.467285\n1\n9.0\n\n\n\n\n\n\n\n40\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n330\n2010\n3109.257812\n16\n2.937500\nFalse\n37\n4699.467285\n1\n9.0\n\n\n\n\n\n\n\n41\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n330\n2010\n3109.257812\n16\n2.937500\nFalse\n37\n4699.467285\n1\n9.0\n\n\n\n\n\n\n\n42\n\n\n\n\n\n\n\n\n\nvalid_time\ndis24_a\ndis24_rank_a\ndis24_rp_a\ntrig\nleadtime\ndis24_f\ndis24_rank_f\ndis24_rp_f\n\n\n\n\n730\n2022\n5347.171875\n3\n15.666667\nTrue\n10\n5307.136719\n1\n21.0\n\n\n731\n2022\n5347.171875\n3\n15.666667\nTrue\n11\n5214.659180\n1\n21.0\n\n\n727\n2022\n5347.171875\n3\n15.666667\nTrue\n7\n5201.161133\n1\n21.0\n\n\n729\n2022\n5347.171875\n3\n15.666667\nTrue\n9\n5155.020508\n1\n21.0\n\n\n726\n2022\n5347.171875\n3\n15.666667\nTrue\n6\n5066.170898\n1\n21.0\n\n\n728\n2022\n5347.171875\n3\n15.666667\nTrue\n8\n5014.899414\n1\n21.0\n\n\n732\n2022\n5347.171875\n3\n15.666667\nTrue\n12\n4981.093750\n1\n21.0\n\n\n733\n2022\n5347.171875\n3\n15.666667\nTrue\n13\n4740.189941\n1\n21.0\n\n\n330\n2010\n3109.257812\n16\n2.937500\nFalse\n37\n4699.467285\n1\n9.0\n\n\n\n\n\n\n\n\n\nCode\ndf_threshs[\"margin\"] = df_threshs[\"min_true\"] - df_threshs[\"max_false\"]\ndf_threshs[\"mean\"] = (df_threshs[\"min_true\"] + df_threshs[\"max_false\"]) / 2\ndf_threshs[\"mean_round\"] = df_threshs[\"mean\"].apply(round)\n\n\n\n\nCode\ndf_threshs[\"min_true_round\"] = df_threshs[\"min_true\"].astype(int) + 1\ndf_threshs[\"max_false_round\"] = df_threshs[\"max_false\"].astype(int)\n\n\nWe can see that above a leadtime of 5, we have to set the trigger so high that we only trigger for one year. So we stick to a maximum leadtime of 5 days, and we can take the average of the min and max possible values as the trigger, which ends up being 3132. We can round this to 3130 so it’s nice.\n\n\nCode\ndf_threshs\n\n\n\n\n\n\n\n\n\nlt_max\nmin_true\nmax_false\nn_trig\nmargin\nmean\nmin_true_round\nmax_false_round\nmean_round\n\n\n\n\n0\n1\n3142.276611\n3121.492188\n2\n20.784424\n3131.884277\n3143\n3121\n3132\n\n\n1\n2\n3142.276611\n3121.492188\n2\n20.784424\n3131.884277\n3143\n3121\n3132\n\n\n2\n3\n3142.276611\n3121.492188\n2\n20.784424\n3131.884277\n3143\n3121\n3132\n\n\n3\n4\n3142.276611\n3121.492188\n2\n20.784424\n3131.884277\n3143\n3121\n3132\n\n\n4\n5\n3142.276611\n3121.492188\n2\n20.784424\n3131.884277\n3143\n3121\n3132\n\n\n5\n6\n4228.503906\n3250.750000\n1\n977.753906\n3739.626953\n4229\n3250\n3740\n\n\n6\n7\n4228.503906\n3309.821045\n1\n918.682861\n3769.162598\n4229\n3309\n3769\n\n\n7\n8\n3513.040527\n3309.821045\n2\n203.219482\n3411.430664\n3514\n3309\n3411\n\n\n8\n9\n3513.040527\n3309.821045\n2\n203.219482\n3411.430664\n3514\n3309\n3411\n\n\n9\n10\n3513.040527\n3309.821045\n2\n203.219482\n3411.430664\n3514\n3309\n3411\n\n\n10\n11\n3513.040527\n3309.821045\n2\n203.219482\n3411.430664\n3514\n3309\n3411\n\n\n11\n12\n3436.365723\n3434.835938\n2\n1.529785\n3435.600830\n3437\n3434\n3436\n\n\n12\n13\n3616.585938\n3606.074219\n3\n10.511719\n3611.330078\n3617\n3606\n3611\n\n\n13\n14\n4228.503906\n4206.456055\n1\n22.047852\n4217.479980\n4229\n4206\n4217\n\n\n14\n15\n4323.481445\n4276.037598\n1\n47.443848\n4299.759766\n4324\n4276\n4300\n\n\n15\n16\n4323.481445\n4280.247070\n1\n43.234375\n4301.864258\n4324\n4280\n4302\n\n\n16\n17\n4323.481445\n4280.247070\n1\n43.234375\n4301.864258\n4324\n4280\n4302\n\n\n17\n18\n4323.481445\n4280.247070\n1\n43.234375\n4301.864258\n4324\n4280\n4302\n\n\n18\n19\n4323.481445\n4280.247070\n1\n43.234375\n4301.864258\n4324\n4280\n4302\n\n\n19\n20\n4323.481445\n4280.247070\n1\n43.234375\n4301.864258\n4324\n4280\n4302\n\n\n20\n21\n4323.481445\n4280.247070\n1\n43.234375\n4301.864258\n4324\n4280\n4302\n\n\n21\n22\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n22\n23\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n23\n24\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n24\n25\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n25\n26\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n26\n27\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n27\n28\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n28\n29\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n29\n30\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n30\n31\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n31\n32\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n32\n33\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n33\n34\n4393.790527\n4379.755371\n1\n14.035156\n4386.772949\n4394\n4379\n4387\n\n\n34\n35\n4453.713379\n4437.524414\n1\n16.188965\n4445.619141\n4454\n4437\n4446\n\n\n35\n36\n4453.713379\n4437.524414\n1\n16.188965\n4445.619141\n4454\n4437\n4446\n\n\n36\n37\n4740.189941\n4699.467285\n1\n40.722656\n4719.828613\n4741\n4699\n4720\n\n\n37\n38\n4740.189941\n4699.467285\n1\n40.722656\n4719.828613\n4741\n4699\n4720\n\n\n38\n39\n4740.189941\n4699.467285\n1\n40.722656\n4719.828613\n4741\n4699\n4720\n\n\n39\n40\n4740.189941\n4699.467285\n1\n40.722656\n4719.828613\n4741\n4699\n4720\n\n\n40\n41\n4740.189941\n4699.467285\n1\n40.722656\n4719.828613\n4741\n4699\n4720\n\n\n41\n42\n4740.189941\n4699.467285\n1\n40.722656\n4719.828613\n4741\n4699\n4720",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>GloFAS reforecast threshold check</span>"
    ]
  },
  {
    "objectID": "exploration/2025/grrr_forecast.html",
    "href": "exploration/2025/grrr_forecast.html",
    "title": "14  Google forecast",
    "section": "",
    "text": "14.1 Load and process\nCheck to see how many leadtimes of forecast we can include using the same threshold as for the reanalysis, without triggering for any different years.\nCode\nds_ra = grrr.load_reanalysis()\ndf_ra = grrr.process_reanalysis(ds_ra)\nCode\ndf_ra[\"valid_year\"] = df_ra[\"valid_time\"].dt.year\nCode\ndf_ra_recent = df_ra[df_ra[\"valid_year\"] &gt;= 1998]\nCode\ndf_ra_peaks = (\n    df_ra_recent.groupby(\"valid_year\")[\"streamflow\"].max().reset_index()\n)\nCode\nrp_ra = 5.4\nCode\ndf_ra_peaks = calculate_one_group_rp(\n    df_ra_peaks, col_name=\"streamflow\", ascending=False\n)\nCode\ndf_ra_peaks[\"trig\"] = df_ra_peaks[\"streamflow_rp\"] &gt;= rp_ra\nCode\ndf_ra_peaks[\"trig\"].sum()\n\n\n5\nCode\nds_rf = grrr.load_reforecast()\ndf_rf = grrr.process_reforecast(ds_rf)\n\n\n/Users/tdowning/OCHA/repos/ds-aa-nga-flooding/src/datasources/grrr.py:12: FutureWarning: In a future version of xarray decode_timedelta will default to False rather than None. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.\n  return xr.open_zarr(\nCode\ndf_rf[\"valid_year\"] = df_rf[\"valid_time\"].dt.year\nCode\ndf_rf_peaks = (\n    df_rf.groupby([\"valid_year\", \"leadtime\"])[\"streamflow\"].max().reset_index()\n)",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Google forecast</span>"
    ]
  },
  {
    "objectID": "exploration/2025/grrr_forecast.html#look-at-yearly-peaks",
    "href": "exploration/2025/grrr_forecast.html#look-at-yearly-peaks",
    "title": "14  Google forecast",
    "section": "14.2 Look at yearly peaks",
    "text": "14.2 Look at yearly peaks\n\n\nCode\ndf_rf_peaks = df_rf_peaks[df_rf_peaks[\"valid_year\"] &lt; 2023]\n\n\n\n\nCode\ndf_rf_peaks = calculate_groups_rp(\n    df_rf_peaks, [\"leadtime\"], col_name=\"streamflow\", ascending=False\n)\n\n\nWe can iterate over the leadtimes to see if the ranking of yearly peaks changes at all.\n\n\nCode\nfor lt, group in df_rf_peaks.groupby(\"leadtime\"):\n    print(lt)\n    display(group.sort_values(\"streamflow_rank\"))\n\n\n0\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow\nstreamflow_rank\nstreamflow_rp\n\n\n\n\n6\n0\n2022\n1793.780396\n1\n8.000000\n\n\n3\n0\n2019\n1212.237061\n2\n4.000000\n\n\n2\n0\n2018\n1157.043457\n3\n2.666667\n\n\n0\n0\n2016\n969.453369\n4\n2.000000\n\n\n1\n0\n2017\n952.680115\n5\n1.600000\n\n\n4\n0\n2020\n901.907959\n6\n1.333333\n\n\n5\n0\n2021\n676.297546\n7\n1.142857\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow\nstreamflow_rank\nstreamflow_rp\n\n\n\n\n13\n1\n2022\n1829.358887\n1\n8.000000\n\n\n10\n1\n2019\n1215.507202\n2\n4.000000\n\n\n9\n1\n2018\n1159.921875\n3\n2.666667\n\n\n7\n1\n2016\n946.359253\n4\n2.000000\n\n\n8\n1\n2017\n935.659058\n5\n1.600000\n\n\n11\n1\n2020\n882.874878\n6\n1.333333\n\n\n12\n1\n2021\n674.734253\n7\n1.142857\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow\nstreamflow_rank\nstreamflow_rp\n\n\n\n\n20\n2\n2022\n1871.713623\n1\n8.000000\n\n\n17\n2\n2019\n1211.703491\n2\n4.000000\n\n\n16\n2\n2018\n1168.532837\n3\n2.666667\n\n\n14\n2\n2016\n943.099365\n4\n2.000000\n\n\n15\n2\n2017\n919.093567\n5\n1.600000\n\n\n18\n2\n2020\n883.610229\n6\n1.333333\n\n\n19\n2\n2021\n675.619141\n7\n1.142857\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow\nstreamflow_rank\nstreamflow_rp\n\n\n\n\n27\n3\n2022\n1881.437744\n1\n8.000000\n\n\n24\n3\n2019\n1219.464966\n2\n4.000000\n\n\n23\n3\n2018\n1172.556030\n3\n2.666667\n\n\n21\n3\n2016\n935.715637\n4\n2.000000\n\n\n22\n3\n2017\n906.878967\n5\n1.600000\n\n\n25\n3\n2020\n881.884155\n6\n1.333333\n\n\n26\n3\n2021\n659.687744\n7\n1.142857\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow\nstreamflow_rank\nstreamflow_rp\n\n\n\n\n34\n4\n2022\n1899.741821\n1\n8.000000\n\n\n31\n4\n2019\n1218.975464\n2\n4.000000\n\n\n30\n4\n2018\n1170.698242\n3\n2.666667\n\n\n28\n4\n2016\n924.824463\n4\n2.000000\n\n\n29\n4\n2017\n906.660767\n5\n1.600000\n\n\n32\n4\n2020\n876.868896\n6\n1.333333\n\n\n33\n4\n2021\n663.387451\n7\n1.142857\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow\nstreamflow_rank\nstreamflow_rp\n\n\n\n\n41\n5\n2022\n1890.936523\n1\n8.000000\n\n\n38\n5\n2019\n1223.369751\n2\n4.000000\n\n\n37\n5\n2018\n1178.059326\n3\n2.666667\n\n\n35\n5\n2016\n927.534363\n4\n2.000000\n\n\n36\n5\n2017\n903.148682\n5\n1.600000\n\n\n39\n5\n2020\n857.577942\n6\n1.333333\n\n\n40\n5\n2021\n669.048828\n7\n1.142857\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow\nstreamflow_rank\nstreamflow_rp\n\n\n\n\n48\n6\n2022\n1896.121094\n1\n8.000000\n\n\n45\n6\n2019\n1226.603638\n2\n4.000000\n\n\n44\n6\n2018\n1171.785400\n3\n2.666667\n\n\n42\n6\n2016\n919.829651\n4\n2.000000\n\n\n43\n6\n2017\n904.791687\n5\n1.600000\n\n\n46\n6\n2020\n851.688782\n6\n1.333333\n\n\n47\n6\n2021\n668.205994\n7\n1.142857\n\n\n\n\n\n\n\n7\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow\nstreamflow_rank\nstreamflow_rp\n\n\n\n\n55\n7\n2022\n1898.547485\n1\n8.000000\n\n\n52\n7\n2019\n1221.934326\n2\n4.000000\n\n\n51\n7\n2018\n1176.412964\n3\n2.666667\n\n\n49\n7\n2016\n951.179443\n4\n2.000000\n\n\n50\n7\n2017\n898.906982\n5\n1.600000\n\n\n53\n7\n2020\n855.025818\n6\n1.333333\n\n\n54\n7\n2021\n684.538391\n7\n1.142857\n\n\n\n\n\n\n\nLooks like it doesn’t, nice. But we can just double-check against the reanalysis peaks.\n\n\nCode\ndf_compare = df_rf_peaks.merge(\n    df_ra_peaks, on=\"valid_year\", suffixes=(\"_f\", \"_a\")\n)\n\n\n\n\nCode\nfor lt, group in df_compare.groupby(\"leadtime\"):\n    print(lt)\n    display(group.sort_values(\"streamflow_rank_a\"))\n\n\n0\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow_f\nstreamflow_rank_f\nstreamflow_rp_f\nstreamflow_a\nstreamflow_rank_a\nstreamflow_rp_a\ntrig\n\n\n\n\n6\n0\n2022\n1793.780396\n1\n8.000000\n1793.780396\n1\n27.000000\nTrue\n\n\n3\n0\n2019\n1212.237061\n2\n4.000000\n1212.237061\n5\n5.400000\nTrue\n\n\n2\n0\n2018\n1157.043457\n3\n2.666667\n1157.043457\n6\n4.500000\nFalse\n\n\n0\n0\n2016\n969.453369\n4\n2.000000\n969.453369\n10\n2.700000\nFalse\n\n\n1\n0\n2017\n952.680115\n5\n1.600000\n952.680115\n13\n2.076923\nFalse\n\n\n4\n0\n2020\n901.907959\n6\n1.333333\n901.907959\n16\n1.687500\nFalse\n\n\n5\n0\n2021\n676.297546\n7\n1.142857\n676.297546\n26\n1.038462\nFalse\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow_f\nstreamflow_rank_f\nstreamflow_rp_f\nstreamflow_a\nstreamflow_rank_a\nstreamflow_rp_a\ntrig\n\n\n\n\n13\n1\n2022\n1829.358887\n1\n8.000000\n1793.780396\n1\n27.000000\nTrue\n\n\n10\n1\n2019\n1215.507202\n2\n4.000000\n1212.237061\n5\n5.400000\nTrue\n\n\n9\n1\n2018\n1159.921875\n3\n2.666667\n1157.043457\n6\n4.500000\nFalse\n\n\n7\n1\n2016\n946.359253\n4\n2.000000\n969.453369\n10\n2.700000\nFalse\n\n\n8\n1\n2017\n935.659058\n5\n1.600000\n952.680115\n13\n2.076923\nFalse\n\n\n11\n1\n2020\n882.874878\n6\n1.333333\n901.907959\n16\n1.687500\nFalse\n\n\n12\n1\n2021\n674.734253\n7\n1.142857\n676.297546\n26\n1.038462\nFalse\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow_f\nstreamflow_rank_f\nstreamflow_rp_f\nstreamflow_a\nstreamflow_rank_a\nstreamflow_rp_a\ntrig\n\n\n\n\n20\n2\n2022\n1871.713623\n1\n8.000000\n1793.780396\n1\n27.000000\nTrue\n\n\n17\n2\n2019\n1211.703491\n2\n4.000000\n1212.237061\n5\n5.400000\nTrue\n\n\n16\n2\n2018\n1168.532837\n3\n2.666667\n1157.043457\n6\n4.500000\nFalse\n\n\n14\n2\n2016\n943.099365\n4\n2.000000\n969.453369\n10\n2.700000\nFalse\n\n\n15\n2\n2017\n919.093567\n5\n1.600000\n952.680115\n13\n2.076923\nFalse\n\n\n18\n2\n2020\n883.610229\n6\n1.333333\n901.907959\n16\n1.687500\nFalse\n\n\n19\n2\n2021\n675.619141\n7\n1.142857\n676.297546\n26\n1.038462\nFalse\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow_f\nstreamflow_rank_f\nstreamflow_rp_f\nstreamflow_a\nstreamflow_rank_a\nstreamflow_rp_a\ntrig\n\n\n\n\n27\n3\n2022\n1881.437744\n1\n8.000000\n1793.780396\n1\n27.000000\nTrue\n\n\n24\n3\n2019\n1219.464966\n2\n4.000000\n1212.237061\n5\n5.400000\nTrue\n\n\n23\n3\n2018\n1172.556030\n3\n2.666667\n1157.043457\n6\n4.500000\nFalse\n\n\n21\n3\n2016\n935.715637\n4\n2.000000\n969.453369\n10\n2.700000\nFalse\n\n\n22\n3\n2017\n906.878967\n5\n1.600000\n952.680115\n13\n2.076923\nFalse\n\n\n25\n3\n2020\n881.884155\n6\n1.333333\n901.907959\n16\n1.687500\nFalse\n\n\n26\n3\n2021\n659.687744\n7\n1.142857\n676.297546\n26\n1.038462\nFalse\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow_f\nstreamflow_rank_f\nstreamflow_rp_f\nstreamflow_a\nstreamflow_rank_a\nstreamflow_rp_a\ntrig\n\n\n\n\n34\n4\n2022\n1899.741821\n1\n8.000000\n1793.780396\n1\n27.000000\nTrue\n\n\n31\n4\n2019\n1218.975464\n2\n4.000000\n1212.237061\n5\n5.400000\nTrue\n\n\n30\n4\n2018\n1170.698242\n3\n2.666667\n1157.043457\n6\n4.500000\nFalse\n\n\n28\n4\n2016\n924.824463\n4\n2.000000\n969.453369\n10\n2.700000\nFalse\n\n\n29\n4\n2017\n906.660767\n5\n1.600000\n952.680115\n13\n2.076923\nFalse\n\n\n32\n4\n2020\n876.868896\n6\n1.333333\n901.907959\n16\n1.687500\nFalse\n\n\n33\n4\n2021\n663.387451\n7\n1.142857\n676.297546\n26\n1.038462\nFalse\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow_f\nstreamflow_rank_f\nstreamflow_rp_f\nstreamflow_a\nstreamflow_rank_a\nstreamflow_rp_a\ntrig\n\n\n\n\n41\n5\n2022\n1890.936523\n1\n8.000000\n1793.780396\n1\n27.000000\nTrue\n\n\n38\n5\n2019\n1223.369751\n2\n4.000000\n1212.237061\n5\n5.400000\nTrue\n\n\n37\n5\n2018\n1178.059326\n3\n2.666667\n1157.043457\n6\n4.500000\nFalse\n\n\n35\n5\n2016\n927.534363\n4\n2.000000\n969.453369\n10\n2.700000\nFalse\n\n\n36\n5\n2017\n903.148682\n5\n1.600000\n952.680115\n13\n2.076923\nFalse\n\n\n39\n5\n2020\n857.577942\n6\n1.333333\n901.907959\n16\n1.687500\nFalse\n\n\n40\n5\n2021\n669.048828\n7\n1.142857\n676.297546\n26\n1.038462\nFalse\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow_f\nstreamflow_rank_f\nstreamflow_rp_f\nstreamflow_a\nstreamflow_rank_a\nstreamflow_rp_a\ntrig\n\n\n\n\n48\n6\n2022\n1896.121094\n1\n8.000000\n1793.780396\n1\n27.000000\nTrue\n\n\n45\n6\n2019\n1226.603638\n2\n4.000000\n1212.237061\n5\n5.400000\nTrue\n\n\n44\n6\n2018\n1171.785400\n3\n2.666667\n1157.043457\n6\n4.500000\nFalse\n\n\n42\n6\n2016\n919.829651\n4\n2.000000\n969.453369\n10\n2.700000\nFalse\n\n\n43\n6\n2017\n904.791687\n5\n1.600000\n952.680115\n13\n2.076923\nFalse\n\n\n46\n6\n2020\n851.688782\n6\n1.333333\n901.907959\n16\n1.687500\nFalse\n\n\n47\n6\n2021\n668.205994\n7\n1.142857\n676.297546\n26\n1.038462\nFalse\n\n\n\n\n\n\n\n7\n\n\n\n\n\n\n\n\n\nleadtime\nvalid_year\nstreamflow_f\nstreamflow_rank_f\nstreamflow_rp_f\nstreamflow_a\nstreamflow_rank_a\nstreamflow_rp_a\ntrig\n\n\n\n\n55\n7\n2022\n1898.547485\n1\n8.000000\n1793.780396\n1\n27.000000\nTrue\n\n\n52\n7\n2019\n1221.934326\n2\n4.000000\n1212.237061\n5\n5.400000\nTrue\n\n\n51\n7\n2018\n1176.412964\n3\n2.666667\n1157.043457\n6\n4.500000\nFalse\n\n\n49\n7\n2016\n951.179443\n4\n2.000000\n969.453369\n10\n2.700000\nFalse\n\n\n50\n7\n2017\n898.906982\n5\n1.600000\n952.680115\n13\n2.076923\nFalse\n\n\n53\n7\n2020\n855.025818\n6\n1.333333\n901.907959\n16\n1.687500\nFalse\n\n\n54\n7\n2021\n684.538391\n7\n1.142857\n676.297546\n26\n1.038462\nFalse\n\n\n\n\n\n\n\nLooks like we’re good. Then we can check what the maximum non-trigger-year peak is. The threshold just needs to be above this.\n\n\nCode\ndf_compare[~df_compare[\"trig\"]][\"streamflow_f\"].max()\n\n\n1178.0593\n\n\n\n\nCode\nthresh_ra = 1212\n\n\nLooks like the old value is fine, so we can just triple-check that only 2019 and 2022 would’ve triggered with this value for the reforecast.\n\n\nCode\ndf_rf[\"trig\"] = df_rf[\"streamflow\"] &gt;= thresh_ra\n\n\n\n\nCode\ndf_rf[df_rf[\"trig\"]][\"valid_year\"].unique()\n\n\narray([2019, 2022], dtype=int32)",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Google forecast</span>"
    ]
  },
  {
    "objectID": "exploration/2025/plot_trigger_years.html",
    "href": "exploration/2025/plot_trigger_years.html",
    "title": "15  Trigger plots",
    "section": "",
    "text": "15.1 Load and process data\nGenerate various plots to show which years triggered with which sources.",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Trigger plots</span>"
    ]
  },
  {
    "objectID": "exploration/2025/plot_trigger_years.html#load-and-process-data",
    "href": "exploration/2025/plot_trigger_years.html#load-and-process-data",
    "title": "15  Trigger plots",
    "section": "",
    "text": "15.1.1 GloFAS reforecast\n\n\nCode\n# df_ref_ens = pd.read_parquet(\n#     glofas.GF_PROC_DIR / \"wuroboki_glofas_reforecast_ens.parquet\"\n# )\n# just use temp to avoid syncing Drive\ndf_ref_ens = pd.read_parquet(\"temp/wuroboki_glofas_reforecast_ens.parquet\")\n\n\n\n\nCode\ndf_gf_ref = (\n    df_ref_ens.groupby([\"valid_time\", \"leadtime\"])[\"dis24\"]\n    .mean()\n    .reset_index()\n)\n\n\n\n\nCode\ndf_gf_ref_peaks = (\n    df_gf_ref.groupby([df_gf_ref[\"valid_time\"].dt.year, \"leadtime\"])[\"dis24\"]\n    .max()\n    .reset_index()\n    .rename(columns={\"valid_time\": \"year\", \"dis24\": \"dis24_f\"})\n)\n\n\n\n\nCode\ndf_gf_ref_peaks_any_lt = (\n    df_gf_ref_peaks[df_gf_ref_peaks[\"leadtime\"] &lt;= gf_lt_max]\n    .groupby(\"year\")[\"dis24_f\"]\n    .max()\n    .reset_index()\n)\n\n\n\n\n15.1.2 GloFAS reanalysis\n\n\nCode\ndf_gf_rea = glofas.load_glofas_reanalysis(station_name=\"wuroboki\")\n\n\n\n\nCode\ndf_gf_rea_peaks = (\n    df_gf_rea.groupby(df_gf_rea[\"time\"].dt.year)[\"dis24\"]\n    .max()\n    .reset_index()\n    .rename(columns={\"time\": \"year\", \"dis24\": \"dis24_a\"})\n)\n\n\n\n\n15.1.3 Google forecast\n\n\nCode\nds_rf = grrr.load_reforecast()\ndf_grrr_ref = grrr.process_reforecast(ds_rf)\n\n\n/Users/tdowning/OCHA/repos/ds-aa-nga-flooding/src/datasources/grrr.py:17: FutureWarning: In a future version of xarray decode_timedelta will default to False rather than None. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.\n  return xr.open_zarr(\n\n\n\n\nCode\ndf_grrr_ref_peaks = (\n    df_grrr_ref[df_grrr_ref[\"valid_time\"].dt.year &lt; 2023]\n    .groupby([df_grrr_ref[\"valid_time\"].dt.year, \"leadtime\"])[\"streamflow\"]\n    .max()\n    .reset_index()\n    .rename(columns={\"valid_time\": \"year\", \"streamflow\": \"streamflow_f\"})\n)\n\n\n\n\nCode\ndf_grrr_ref_peaks_any_lt = (\n    df_grrr_ref_peaks.groupby(\"year\")[\"streamflow_f\"].max().reset_index()\n)\n\n\n\n\n15.1.4 Google reanalysis\n\n\nCode\nds_ra = grrr.load_reanalysis()\ndf_grrr_rea = grrr.process_reanalysis(ds_ra)\n\n\n\n\nCode\ndf_grrr_rea_peaks = (\n    df_grrr_rea.groupby(df_grrr_rea[\"valid_time\"].dt.year)[\"streamflow\"]\n    .max()\n    .reset_index()\n    .rename(columns={\"valid_time\": \"year\", \"streamflow\": \"streamflow_a\"})\n)\n\n\n\n\n15.1.5 Floodscan\n\n\nCode\ndf_fs_raw = stratus.load_parquet_from_blob(\n    f\"{PROJECT_PREFIX}/processed/floodscan/fs_benue_pixels_1998_2024.parquet\"\n)\ndf_fs = (\n    df_fs_raw.groupby(\"date\")[\"SFED\"]\n    .mean()\n    .reset_index()\n    .rename(columns={\"date\": \"valid_time\"})\n)\n\n\n\n\nCode\ndf_fs_peaks = (\n    df_fs.groupby(df_fs[\"valid_time\"].dt.year)[\"SFED\"].max().reset_index()\n)\n\n\n\n\nCode\ndf_fs_peaks = df_fs_peaks.rename(columns={\"valid_time\": \"year\"})",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Trigger plots</span>"
    ]
  },
  {
    "objectID": "exploration/2025/plot_trigger_years.html#combine",
    "href": "exploration/2025/plot_trigger_years.html#combine",
    "title": "15  Trigger plots",
    "section": "15.2 Combine",
    "text": "15.2 Combine\n\n\nCode\ndf_compare = (\n    df_fs_peaks.merge(df_gf_rea_peaks, how=\"outer\")\n    .merge(df_gf_ref_peaks_any_lt, how=\"outer\")\n    .merge(df_grrr_rea_peaks, how=\"outer\")\n    .merge(df_grrr_ref_peaks_any_lt, how=\"outer\")\n)\n\n\n\n\nCode\nfor thresh, ind in [(grrr_thresh, \"streamflow\"), (gf_thresh, \"dis24\")]:\n    for af in [\"a\", \"f\"]:\n        df_compare[f\"{ind}_{af}_rel\"] = df_compare[f\"{ind}_{af}\"] / thresh\n\n\n\n\nCode\ndf_compare[\"max_rel\"] = df_compare[\n    [x for x in df_compare.columns if \"rel\" in x]\n].max(axis=1)\n\n\nJust have a look at all the yearly peaks:\n\n\nCode\ndf_compare.sort_values(\"dis24_a\", ascending=False)\n\n\n\n\n\n\n\n\n\nyear\nSFED\ndis24_a\ndis24_f\nstreamflow_a\nstreamflow_f\nstreamflow_a_rel\nstreamflow_f_rel\ndis24_a_rel\ndis24_f_rel\nmax_rel\n\n\n\n\n9\n1988\nNaN\n7801.156250\nNaN\n1545.979370\nNaN\n1.293707\nNaN\n2.490791\nNaN\n2.490791\n\n\n15\n1994\nNaN\n5575.781250\nNaN\n1629.851074\nNaN\n1.363892\nNaN\n1.780262\nNaN\n1.780262\n\n\n43\n2022\n0.269161\n5347.171875\n4619.898438\n1793.780396\n1899.741821\n1.501071\n1.589742\n1.707271\n1.475063\n1.707271\n\n\n20\n1999\n0.192214\n5244.656250\nNaN\n1545.005493\nNaN\n1.292892\nNaN\n1.674539\nNaN\n1.674539\n\n\n6\n1985\nNaN\n5046.875000\nNaN\n1247.214722\nNaN\n1.043694\nNaN\n1.611390\nNaN\n1.611390\n\n\n2\n1981\nNaN\n4933.351562\nNaN\n1321.095093\nNaN\n1.105519\nNaN\n1.575144\nNaN\n1.575144\n\n\n45\n2024\n0.169988\n4459.265625\nNaN\nNaN\nNaN\nNaN\nNaN\n1.423776\nNaN\n1.423776\n\n\n19\n1998\n0.142014\n4300.250000\nNaN\n1328.853149\nNaN\n1.112011\nNaN\n1.373004\nNaN\n1.373004\n\n\n8\n1987\nNaN\n4023.500000\nNaN\n730.906738\nNaN\n0.611637\nNaN\n1.284642\nNaN\n1.284642\n\n\n13\n1992\nNaN\n3635.500000\nNaN\n941.745239\nNaN\n0.788071\nNaN\n1.160760\nNaN\n1.160760\n\n\n1\n1980\nNaN\n3420.695312\nNaN\n1559.987427\nNaN\n1.305429\nNaN\n1.092176\nNaN\n1.305429\n\n\n16\n1995\nNaN\n3331.929688\nNaN\n1131.418945\nNaN\n0.946794\nNaN\n1.063835\nNaN\n1.063835\n\n\n24\n2003\n0.151862\n3312.015625\n2776.615723\n953.153015\nNaN\n0.797618\nNaN\n1.057476\n0.886531\n1.057476\n\n\n10\n1989\nNaN\n3301.734375\nNaN\n895.918640\nNaN\n0.749723\nNaN\n1.054194\nNaN\n1.054194\n\n\n33\n2012\n0.286909\n3110.078125\n3142.276611\n1394.855469\nNaN\n1.167243\nNaN\n0.993001\n1.003281\n1.167243\n\n\n31\n2010\n0.115183\n3109.257812\n3121.492188\n1100.995361\nNaN\n0.921335\nNaN\n0.992739\n0.996645\n0.996645\n\n\n35\n2014\n0.100249\n2918.125000\n2467.003174\n926.234802\nNaN\n0.775092\nNaN\n0.931713\n0.787677\n0.931713\n\n\n21\n2000\n0.112231\n2863.234375\nNaN\n762.573181\nNaN\n0.638137\nNaN\n0.914187\nNaN\n0.914187\n\n\n3\n1982\nNaN\n2827.750000\nNaN\n1260.010864\nNaN\n1.054402\nNaN\n0.902858\nNaN\n1.054402\n\n\n7\n1986\nNaN\n2735.359375\nNaN\n1026.430054\nNaN\n0.858937\nNaN\n0.873359\nNaN\n0.873359\n\n\n17\n1996\nNaN\n2650.734375\nNaN\n810.592346\nNaN\n0.678320\nNaN\n0.846339\nNaN\n0.846339\n\n\n29\n2008\n0.083352\n2627.976562\n2551.941406\n1063.593872\nNaN\n0.890037\nNaN\n0.839073\n0.814796\n0.890037\n\n\n39\n2018\n0.165637\n2547.906250\n2593.005371\n1157.043457\n1178.059326\n0.968237\n0.985824\n0.813508\n0.827907\n0.985824\n\n\n14\n1993\nNaN\n2544.750000\nNaN\n645.716675\nNaN\n0.540349\nNaN\n0.812500\nNaN\n0.812500\n\n\n32\n2011\n0.080652\n2461.625000\n2469.128906\n778.979004\nNaN\n0.651865\nNaN\n0.785959\n0.788355\n0.788355\n\n\n40\n2019\n0.147553\n2440.054688\n2772.688965\n1212.237061\n1226.603638\n1.014424\n1.026447\n0.779072\n0.885277\n1.026447\n\n\n22\n2001\n0.061692\n2399.468750\nNaN\n1064.437988\nNaN\n0.890743\nNaN\n0.766114\nNaN\n0.890743\n\n\n0\n1979\nNaN\n2392.945312\nNaN\nNaN\nNaN\nNaN\nNaN\n0.764031\nNaN\n0.764031\n\n\n44\n2023\n0.203958\n2379.328125\nNaN\n900.323486\nNaN\n0.753409\nNaN\n0.759683\nNaN\n0.759683\n\n\n37\n2016\n0.118837\n2364.773438\n2537.560059\n969.453369\n969.453369\n0.811258\n0.811258\n0.755036\n0.810204\n0.811258\n\n\n42\n2021\n0.134848\n2253.296875\n2024.487549\n676.297546\n684.538391\n0.565939\n0.572835\n0.719443\n0.646388\n0.719443\n\n\n28\n2007\n0.103586\n2235.781250\n2407.434326\n836.369751\nNaN\n0.699891\nNaN\n0.713851\n0.768657\n0.768657\n\n\n30\n2009\n0.103484\n2169.906250\n2719.395996\n766.465027\nNaN\n0.641393\nNaN\n0.692818\n0.868262\n0.868262\n\n\n26\n2005\n0.082421\n2077.328125\n2008.734375\n903.818298\nNaN\n0.756333\nNaN\n0.663259\n0.641358\n0.756333\n\n\n11\n1990\nNaN\n2046.000000\nNaN\n527.189819\nNaN\n0.441163\nNaN\n0.653257\nNaN\n0.653257\n\n\n12\n1991\nNaN\n2013.921875\nNaN\n589.804138\nNaN\n0.493560\nNaN\n0.643015\nNaN\n0.643015\n\n\n41\n2020\n0.087079\n1946.828125\n2129.044434\n901.907959\n901.907959\n0.754735\n0.754735\n0.621593\n0.679772\n0.754735\n\n\n5\n1984\nNaN\n1913.437500\nNaN\n436.359558\nNaN\n0.365154\nNaN\n0.610932\nNaN\n0.610932\n\n\n4\n1983\nNaN\n1910.343750\nNaN\n707.293579\nNaN\n0.591877\nNaN\n0.609944\nNaN\n0.609944\n\n\n25\n2004\n0.035491\n1856.578125\n1940.969482\n801.753296\nNaN\n0.670923\nNaN\n0.592777\n0.619722\n0.670923\n\n\n23\n2002\n0.093438\n1854.218750\nNaN\n956.879333\nNaN\n0.800736\nNaN\n0.592024\nNaN\n0.800736\n\n\n18\n1997\nNaN\n1788.640625\nNaN\n444.703888\nNaN\n0.372137\nNaN\n0.571086\nNaN\n0.571086\n\n\n27\n2006\n0.113096\n1733.757812\n2123.482910\n847.273560\nNaN\n0.709016\nNaN\n0.553563\n0.677996\n0.709016\n\n\n38\n2017\n0.088970\n1717.898438\n2158.274902\n952.680115\n952.680115\n0.797222\n0.797222\n0.548499\n0.689104\n0.797222\n\n\n34\n2013\n0.092912\n1611.937500\n2122.123535\n775.987488\nNaN\n0.649362\nNaN\n0.514667\n0.677562\n0.677562\n\n\n36\n2015\n0.206910\n1563.804688\n2010.931274\n738.006592\nNaN\n0.617579\nNaN\n0.499299\n0.642060\n0.642060",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Trigger plots</span>"
    ]
  },
  {
    "objectID": "exploration/2025/plot_trigger_years.html#plot",
    "href": "exploration/2025/plot_trigger_years.html#plot",
    "title": "15  Trigger plots",
    "section": "15.3 Plot",
    "text": "15.3 Plot\n\n\nCode\nfs_5yr = df_compare[\"SFED\"].quantile(1 - 1 / 5)\nfs_3yr = df_compare[\"SFED\"].quantile(1 - 1 / 3)\n\n\n\n\nCode\nfs_color = \"crimson\"\ngf_color = \"royalblue\"\ngrrr_color = \"darkgreen\"\n\n\n\n\nCode\ndef plot_yearly_maxima(x_col, y_col, **kwargs):\n    x_thresh = kwargs[\"x_thresh\"]\n    x_color = kwargs[\"x_color\"]\n    y_thresh = kwargs[\"y_thresh\"]\n    y_color = kwargs[\"y_color\"]\n\n    df_plot = df_compare[[\"year\", x_col, y_col]].copy().set_index(\"year\")\n    df_plot = df_plot.dropna()\n\n    print(df_plot.index.min(), df_plot.index.max())\n\n    xmax = df_plot[x_col].max() * 1.1\n    ymax = df_plot[y_col].max() * 1.1\n\n    fig, ax = plt.subplots(dpi=200, figsize=(7, 7))\n\n    ax.axvline(x_thresh, color=x_color)\n    ax.axvspan(x_thresh, xmax, facecolor=x_color, alpha=0.1)\n\n    ax.axhline(y_thresh, color=y_color)\n    ax.axhspan(y_thresh, ymax, facecolor=y_color, alpha=0.1)\n\n    for year, row in df_plot.iterrows():\n        fontweight = \"bold\"\n        if row[x_col] &gt; x_thresh and row[y_col] &gt; y_thresh:\n            color = \"k\"\n        elif row[x_col] &gt; x_thresh:\n            color = x_color\n        elif row[y_col] &gt; y_thresh:\n            color = y_color\n        else:\n            fontweight = \"normal\"\n            color = \"grey\"\n        ax.annotate(\n            year,\n            (row[x_col], row[y_col]),\n            color=color,\n            fontweight=fontweight,\n            va=\"center\",\n            ha=\"center\",\n        )\n\n    ax.annotate(\n        kwargs[\"y_thresh_text\"],\n        (0, y_thresh),\n        color=y_color,\n        fontstyle=\"italic\",\n        xytext=(2, 2),\n        textcoords=\"offset points\",\n    )\n    ax.annotate(\n        kwargs[\"x_thresh_text\"],\n        (x_thresh, 0),\n        rotation=90,\n        ha=\"right\",\n        va=\"bottom\",\n        color=x_color,\n        fontstyle=\"italic\",\n        xytext=(0, 3),\n        textcoords=\"offset points\",\n    )\n\n    ax.set_xlim((0, xmax))\n    ax.set_ylim((0, ymax))\n    ax.spines.top.set_visible(False)\n    ax.spines.right.set_visible(False)\n    return fig, ax\n\n\n\n15.3.1 Reanalysis\n\n\nCode\nfig, ax = plot_yearly_maxima(\n    \"dis24_a\",\n    \"SFED\",\n    x_thresh=gf_thresh,\n    x_color=gf_color,\n    x_thresh_text=f\"Threshold: {gf_thresh:,} m$^3$/s\",\n    y_thresh=fs_5yr,\n    y_color=fs_color,\n    y_thresh_text=\"5-yr RP\",\n)\n\nax.xaxis.set_major_formatter(mticker.StrMethodFormatter(\"{x:,.0f}\"))\nax.set_xlabel(\"River discharge yearly max. [GloFAS reanalysis] (m$^3$/s)\")\nax.set_ylabel(\"Frac. area flooded yearly max. [Floodscan]\")\nax.set_title(\"Floodscan vs. GloFAS reanalysis (1998-2024)\")\n\n\n1998 2024\n\n\nText(0.5, 1.0, 'Floodscan vs. GloFAS reanalysis (1998-2024)')\n\n\n\n\n\n\n\n\n\n\n\nCode\nfig, ax = plot_yearly_maxima(\n    \"streamflow_a\",\n    \"SFED\",\n    x_thresh=grrr_thresh,\n    x_color=grrr_color,\n    x_thresh_text=f\"Threshold: {grrr_thresh:,} m$^3$/s\",\n    y_thresh=fs_5yr,\n    y_color=fs_color,\n    y_thresh_text=\"5-yr RP\",\n)\n\nax.xaxis.set_major_formatter(mticker.StrMethodFormatter(\"{x:,.0f}\"))\nax.set_xlabel(\"River discharge yearly max. [Google reanalysis] (m$^3$/s)\")\nax.set_ylabel(\"Frac. area flooded yearly max. [Floodscan]\")\nax.set_title(\"Floodscan vs. Google reanalysis (1998-2023)\")\n\n\n1998 2023\n\n\nText(0.5, 1.0, 'Floodscan vs. Google reanalysis (1998-2023)')\n\n\n\n\n\n\n\n\n\n\n\nCode\nfig, ax = plot_yearly_maxima(\n    \"streamflow_a\",\n    \"dis24_a\",\n    x_thresh=grrr_thresh,\n    x_color=grrr_color,\n    x_thresh_text=f\"Thresh.: {grrr_thresh:,} m$^3$/s\",\n    y_thresh=gf_thresh,\n    y_color=gf_color,\n    y_thresh_text=f\"Thresh.: {gf_thresh:,} m$^3$/s\",\n)\n\nax.set_xlabel(\"River discharge yearly max. [Google reanalysis] (m$^3$/s)\")\nax.set_ylabel(\"River discharge yearly max. [GloFAS reanalysis] (m$^3$/s)\")\nax.xaxis.set_major_formatter(mticker.StrMethodFormatter(\"{x:,.0f}\"))\nax.yaxis.set_major_formatter(mticker.StrMethodFormatter(\"{x:,.0f}\"))\nax.set_title(\"Google vs. GloFAS reanalysis (1980-2023)\")\n\n\n1980 2023\n\n\nText(0.5, 1.0, 'Google vs. GloFAS reanalysis (1980-2023)')\n\n\n\n\n\n\n\n\n\n\n\n15.3.2 Reforecast\n\n\nCode\nfig, ax = plot_yearly_maxima(\n    \"dis24_f\",\n    \"SFED\",\n    x_thresh=gf_thresh,\n    x_color=gf_color,\n    x_thresh_text=f\"Threshold: {gf_thresh:,} m$^3$/s\",\n    y_thresh=fs_5yr,\n    y_color=fs_color,\n    y_thresh_text=\"5-yr RP\",\n)\n\nax.xaxis.set_major_formatter(mticker.StrMethodFormatter(\"{x:,.0f}\"))\nax.set_xlabel(\"River discharge yearly max. [GloFAS reforecast] (m$^3$/s)\")\nax.set_ylabel(\"Frac. area flooded yearly max. [Floodscan]\")\nax.set_title(\"Floodscan vs. GloFAS forecast (2003-2022)\")\n\n\n2003 2022\n\n\nText(0.5, 1.0, 'Floodscan vs. GloFAS forecast (2003-2022)')\n\n\n\n\n\n\n\n\n\n\n\nCode\nfig, ax = plot_yearly_maxima(\n    \"streamflow_f\",\n    \"SFED\",\n    x_thresh=grrr_thresh,\n    x_color=grrr_color,\n    x_thresh_text=f\"Threshold: {grrr_thresh:,} m$^3$/s\",\n    y_thresh=fs_5yr,\n    y_color=fs_color,\n    y_thresh_text=\"5-yr RP\",\n)\n\nax.xaxis.set_major_formatter(mticker.StrMethodFormatter(\"{x:,.0f}\"))\nax.set_xlabel(\"River discharge yearly max. [Google reforecast] (m$^3$/s)\")\nax.set_ylabel(\"Frac. area flooded yearly max. [Floodscan]\")\nax.set_title(\"Floodscan vs. Google forecast (2016-2022)\")\n\n\n2016 2022\n\n\nText(0.5, 1.0, 'Floodscan vs. Google forecast (2016-2022)')\n\n\n\n\n\n\n\n\n\n\n\n15.3.3 Either\n\n\nCode\nfig, ax = plot_yearly_maxima(\n    \"max_rel\",\n    \"SFED\",\n    x_thresh=1,\n    x_color=\"teal\",\n    x_thresh_text=\"Threshold\",\n    y_thresh=fs_5yr,\n    y_color=fs_color,\n    y_thresh_text=\"5-yr RP\",\n)\n\nax.set_xlabel(\n    \"Maximum of Google or GloFAS reanalysis or reforecast,\\n\"\n    \"relative to threshold\"\n)\nax.set_ylabel(\"Frac. area flooded yearly max. [Floodscan]\")\nax.set_title(\"Floodscan vs. combined flood forecast\")\n\n\n1998 2024\n\n\nText(0.5, 1.0, 'Floodscan vs. combined flood forecast')",
    "crumbs": [
      "Trigger setting",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Trigger plots</span>"
    ]
  }
]
